<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="14:LEDTestAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb71d9e40"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb72dc670"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb72dc670"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb72dea28"/></to>
    </wire>
    <wire loc="16:LEDTestAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb71cfd50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6db52f0"/>
      <arguments>
        <value cst="I:240">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="17:LEDTestAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb71c8380"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6dc0918"/>
      <arguments>
        <value cst="I:240">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:LEDTestAppC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb71bd980"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6dc0040"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6dc0040"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6d9ea88"/></to>
    </wire>
    <wire loc="19:LEDTestAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb71d4c00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb7199010"/></to>
    </wire>
    <wire loc="52:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb7199010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb7192010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="20:LEDTestAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb71c3a18"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb72e04e0"/></to>
    </wire>
    <wire loc="51:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb72e04e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb71b2be0"/></to>
    </wire>
    <wire loc="96:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb72d9358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb644dba8"/></to>
    </wire>
    <wire loc="120:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb72d9358"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb6a184d8"/></to>
    </wire>
    <wire loc="52:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb72d9358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6ac30e8"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb72d9358"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb64c84e0"/></to>
    </wire>
    <wire loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb72d9358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6b69be0"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb72d9358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb64e4408"/></to>
    </wire>
    <wire loc="96:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb72d9358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6550dc0"/></to>
    </wire>
    <wire loc="49:/home/wsn/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb72d9358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6dbe8b0"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb72d9358"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0xb6ed4a00"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb72d9358"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0xb6ecf4c0"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb72d9358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6f11398"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb72d9358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7000558"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb72d9358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6ddb5a0"/></to>
    </wire>
    <wire loc="53:/home/wsn/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb72d9358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb718f898"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xb72dedc0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xb73e55f0"/></to>
    </wire>
    <wire loc="53:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xb73e55f0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xb736c8a8"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb71e3400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb697c030"/></to>
    </wire>
    <wire loc="123:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb71e3400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb6a19e40"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb71e3400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb72d9c50"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb72d9c50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb72d2010"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb71e3808"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb72d9358"/></to>
    </wire>
    <wire loc="26:/home/wsn/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb72d4c68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6899d38"/></to>
    </wire>
    <wire loc="26:/home/wsn/tinyos-main/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb72d4c68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6e2da40"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0xb72d4508"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0xb71f4010"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0xb72d27f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb71f5bf8"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xb72d23f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb719cf28"/></to>
    </wire>
    <wire loc="62:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xb72d23f0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb72d6880"/></to>
    </wire>
    <wire loc="46:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb72d6880"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb72ce828"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb72d6c50"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xb72d4c68"/></to>
    </wire>
    <wire loc="48:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0xb72c8dd0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0xb72c10a0"/></to>
    </wire>
    <wire loc="141:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0xb72c10a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7275170"/></to>
    </wire>
    <wire loc="49:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb72cb828"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xb72d6c50"/></to>
    </wire>
    <wire loc="191:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0xb72a42f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb72220b0"/></to>
    </wire>
    <wire loc="165:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0xb72b3830"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb725e090"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb725e090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6768de0"/></to>
    </wire>
    <wire loc="176:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0xb72adea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7255d68"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb7255d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb672cc08"/></to>
    </wire>
    <wire loc="185:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0xb72a70a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb724d7d0"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb724d7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66f47f8"/></to>
    </wire>
    <wire loc="196:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0xb72a0830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7214880"/></to>
    </wire>
    <wire loc="143:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0xb72c04b0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb72744f0"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb72744f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6808a88"/></to>
    </wire>
    <wire loc="183:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0xb72a9c08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb724e4f0"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb724e4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66f73b0"/></to>
    </wire>
    <wire loc="146:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0xb72bf8e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb72703d8"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb72703d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67da938"/></to>
    </wire>
    <wire loc="157:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0xb72b70a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7266170"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb7266170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb679f9e8"/></to>
    </wire>
    <wire loc="168:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0xb72b1750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb725dd68"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb725dd68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6763c08"/></to>
    </wire>
    <wire loc="179:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0xb72abce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7253ac8"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb7253ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6727a88"/></to>
    </wire>
    <wire loc="138:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0xb72c3210"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb72774f0"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb72774f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb68117f8"/></to>
    </wire>
    <wire loc="149:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0xb72bd750"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb726e030"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb726e030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67d57f8"/></to>
    </wire>
    <wire loc="160:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0xb72b6ea8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7265e48"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb7265e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67999e8"/></to>
    </wire>
    <wire loc="171:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0xb72af670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb725bac8"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb725bac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb675ea88"/></to>
    </wire>
    <wire loc="188:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0xb72a6ea8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb724a4f0"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb724a4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66ef6c0"/></to>
    </wire>
    <wire loc="194:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0xb72a13d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb721a880"/></to>
    </wire>
    <wire loc="174:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0xb72aea98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7256a80"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb7256a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67307f8"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb7275170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb680c6c0"/></to>
    </wire>
    <wire loc="152:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0xb72ba750"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb726cc88"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb726cc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67d06c0"/></to>
    </wire>
    <wire loc="192:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0xb72a4ee8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7220880"/></to>
    </wire>
    <wire loc="155:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0xb72b9c08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7268dc8"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb7268dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67a2538"/></to>
    </wire>
    <wire loc="166:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0xb72b22f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb725e9e8"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb725e9e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67667f8"/></to>
    </wire>
    <wire loc="177:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0xb72ac8e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7254790"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb7254790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb672a6c0"/></to>
    </wire>
    <wire loc="186:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0xb72a7a98"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb724c170"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb724c170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66f2228"/></to>
    </wire>
    <wire loc="144:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0xb72c0ea8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7274e48"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb7274e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6806538"/></to>
    </wire>
    <wire loc="147:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0xb72be2f0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7270d30"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb7270d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67d83b0"/></to>
    </wire>
    <wire loc="158:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0xb72b7a98"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7266ac8"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb7266ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb679d538"/></to>
    </wire>
    <wire loc="169:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0xb72b0210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb725c790"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb725c790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67616c0"/></to>
    </wire>
    <wire loc="180:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0xb72aa750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb72524f0"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb72524f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6725538"/></to>
    </wire>
    <wire loc="139:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0xb72c3c08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7277e48"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb7277e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb680f228"/></to>
    </wire>
    <wire loc="150:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0xb72bb210"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb726e988"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb726e988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67d3228"/></to>
    </wire>
    <wire loc="161:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0xb72b58e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb72647d0"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb72647d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6797538"/></to>
    </wire>
    <wire loc="189:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0xb72a58e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb724ae48"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb724ae48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66ed0b0"/></to>
    </wire>
    <wire loc="164:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0xb72b4ce8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb725f6f8"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb725f6f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6769418"/></to>
    </wire>
    <wire loc="175:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0xb72ad4b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7255410"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb7255410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb672e228"/></to>
    </wire>
    <wire loc="184:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0xb72a8670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb724ee48"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb724ee48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66f6d70"/></to>
    </wire>
    <wire loc="195:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0xb72a1dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb72170b0"/></to>
    </wire>
    <wire loc="142:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0xb72c1a98"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7275ac8"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb7275ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb680a0b0"/></to>
    </wire>
    <wire loc="153:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0xb72b9210"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb726b6b0"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb726b6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67ce0b0"/></to>
    </wire>
    <wire loc="182:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0xb72a9210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb724fb00"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb724fb00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66f9938"/></to>
    </wire>
    <wire loc="156:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0xb72b8670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7267790"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb7267790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67a0010"/></to>
    </wire>
    <wire loc="167:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0xb72b2ce8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb725d410"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb725d410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6764228"/></to>
    </wire>
    <wire loc="178:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0xb72ab2f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7253170"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb7253170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67280b0"/></to>
    </wire>
    <wire loc="187:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0xb72a64b0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb724cac8"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb724cac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66f1c08"/></to>
    </wire>
    <wire loc="137:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0xb72cd7f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7278b18"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb7278b18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb681ad90"/></to>
    </wire>
    <wire loc="148:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0xb72bece8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb726f6b0"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb726f6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67d7d70"/></to>
    </wire>
    <wire loc="159:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0xb72b64b0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb72654f0"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb72654f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb679a010"/></to>
    </wire>
    <wire loc="170:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0xb72b0c08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb725b170"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb725b170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb675f0b0"/></to>
    </wire>
    <wire loc="193:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0xb72a3900"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb721c0b0"/></to>
    </wire>
    <wire loc="173:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0xb72ae0a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7256128"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb7256128"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6735de8"/></to>
    </wire>
    <wire loc="162:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0xb72b42f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7263170"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb7263170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6795010"/></to>
    </wire>
    <wire loc="140:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0xb72c2670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb72767d0"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb72767d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb680ec08"/></to>
    </wire>
    <wire loc="151:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0xb72bbc88"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb726c330"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb726c330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67d2c08"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0xb73e0d58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb736b100"/></to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0xb736bd68"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0xb73e6728"/></to>
    </wire>
    <wire loc="92:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0xb7357218"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0xb711faf8"/></to>
    </wire>
    <wire loc="53:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb719cf28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb71b2898"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xb71af940"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0xb719d110"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xb719d110"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0xb72c3c08"/></to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xb71ae3c0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0xb719db18"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xb719db18"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0xb72c3210"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xb71aeda8"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0xb719c5a0"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xb719c5a0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0xb72cd7f0"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xb7192010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb718c100"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xb718c100"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb70a8338"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb718f898"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb71877f8"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb71880d0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb709ad28"/></to>
    </wire>
    <wire loc="35:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb71877f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb70ed088"/></to>
    </wire>
    <wire loc="62:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0xb70a5688"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb70e85d8"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb70d18d8"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0xb7183150"/></to>
    </wire>
    <wire loc="36:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0xb7183150"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb70ed4c0"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb70a06e0"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0xb7179da0"/></to>
    </wire>
    <wire loc="37:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0xb7179da0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb70ecf28"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb70ecf28"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb667b340"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb70ed088"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb667d440"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb70ed4c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb667d878"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6679578"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb712d340"/></to>
    </wire>
    <wire loc="94:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb712d340"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb7124190"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb6677758"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb712b600"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb712b600"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb7121510"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb6676200"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb712a138"/></to>
    </wire>
    <wire loc="96:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb712a138"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb7120078"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0xb6674c20"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0xb7128c60"/></to>
    </wire>
    <wire loc="97:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0xb7128c60"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0xb711e010"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0xb70cf298"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e0d58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0xb70a3948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e0d58"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb6dd5830"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0xb6dddd90"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb6dd65d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb7092d50"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb7092d50"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6639608"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6dd6ca8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6df53f8"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6df53f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb7038990"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0xb6dc2228"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0xb6dd5370"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb7038990"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb7003d88"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6df5a90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb70370b8"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb70370b8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb70031b0"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb6df46b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7037d70"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7037d70"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb70024d0"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6639cd0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb706ba90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb66383f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb70370b8"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb706ba90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb703f908"/></to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb703e0a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb7039bb8"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb7039bb8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb7034738"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb703e750"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb70370b8"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb703d3f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb7038990"/></to>
    </wire>
    <wire loc="169:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0xb703dac8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e0d58"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0xb703df00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e0d58"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb70392e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb70008f0"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb70008f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6fe7978"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb7038638"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7034e78"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb7000558"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6fe75e0"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb6ffa3f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb7036370"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb70029f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6ffd7e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb7001170"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6ffd1d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0xb6ff9ea8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0xb6e00728"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6ffd7e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6f71a90"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6ffd1d8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6f716d0"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0xb6f37238"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0xb6ff9ea8"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb6fdcc88"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb6ffa3f0"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb6f36230"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb6ffa3f0"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb6f30260"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb6ffa3f0"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0xb6f37720"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0xb6fdf2a8"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0xb6f37bf8"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0xb6fe1098"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0xb6fdc400"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0xb6f346a8"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0xb6fd9a10"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb6f1a168"/></to>
    </wire>
    <wire loc="48:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb6f1a168"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb6f16e88"/></to>
    </wire>
    <wire loc="80:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0xb6f29990"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0xb6f1a5e8"/></to>
    </wire>
    <wire loc="49:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0xb6f1a5e8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0xb6f15788"/></to>
    </wire>
    <wire loc="332:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0xb6fab9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e0d58"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0xb6fcbd40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e0d58"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0xb6fac220"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e0d58"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0xb6fa9610"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e0d58"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0xb6f36e48"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e0d58"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0xb6f352b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e0d58"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0xb6f16488"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0xb6f15308"/></to>
    </wire>
    <wire loc="51:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0xb6f15308"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0xb6f11ae8"/></to>
    </wire>
    <wire loc="52:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0xb6f15788"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0xb6f11f00"/></to>
    </wire>
    <wire loc="50:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb6f16e88"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb6f116d0"/></to>
    </wire>
    <wire loc="53:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb6f14218"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6e9a628"/></to>
    </wire>
    <wire loc="33:/home/wsn/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb6e9a628"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6e959f0"/></to>
    </wire>
    <wire loc="53:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb6eeac88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6f14218"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0xb6f107b0"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0xb6ed7688"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0xb6ed7688"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0xb6ed4e50"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0xb6f10be8"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0xb6ed7b98"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0xb6ed7b98"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0xb6ed03a8"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0xb6eea050"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0xb6ed60b8"/></to>
    </wire>
    <wire loc="62:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0xb6ed60b8"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0xb6ed08c0"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0xb6ed5760"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0xb6ece390"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0xb6ed6cc8"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0xb6ecf910"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0xb6ed5268"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0xb6ecfe40"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0xb6ecd010"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0xb72d4508"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0xb6ecd750"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xb7359420"/></to>
    </wire>
    <wire loc="34:/home/wsn/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0xb6e13cd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6e94088"/></to>
    </wire>
    <wire loc="31:/home/wsn/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb6e94088"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6e2f618"/></to>
    </wire>
    <wire loc="32:/home/wsn/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6e217e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6e93aa8"/></to>
    </wire>
    <wire loc="89:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6e93aa8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6e7f960"/></to>
    </wire>
    <wire loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb6e87410"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb6e7ac90"/></to>
    </wire>
    <wire loc="91:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xb6e8c1a0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb6e79a48"/></to>
    </wire>
    <wire loc="93:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb6e823d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0xb6e77940"/></to>
    </wire>
    <wire loc="94:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb6e823d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0xb6e745b8"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb6e823d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0xb6e711c0"/></to>
    </wire>
    <wire loc="27:/home/wsn/tinyos-main/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6e2de28"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6e93aa8"/></to>
    </wire>
    <wire loc="114:/home/wsn/tinyos-main/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0xb6dd1b18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e0d58"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/wsn/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0xb6dbec30"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0xb6dc2228"/></to>
    </wire>
    <wire loc="44:/home/wsn/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb7096e28"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb72dc670"/></to>
    </wire>
    <wire loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0xb6db92b8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb70392e0"/></to>
    </wire>
    <wire loc="79:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6d9ea88"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6d878f0"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xb6db4120"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb6d9aa68"/></to>
    </wire>
    <wire loc="84:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xb6d9aa68"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb6d828e0"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6db4478"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6d98bb0"/></to>
    </wire>
    <wire loc="89:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6d98bb0"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0xb6d807d0"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb6dc0918"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6d9b380"/></to>
    </wire>
    <wire loc="81:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb6d9b380"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6d831f8"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb6db5988"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb6d9a3f0"/></to>
    </wire>
    <wire loc="83:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb6d9a3f0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb6d82268"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb6dac568"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb6d965c8"/></to>
    </wire>
    <wire loc="93:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb6d965c8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb6d78e48"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6db52f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6d9bd40"/></to>
    </wire>
    <wire loc="82:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6d9bd40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6d83bb8"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6db3850"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6d96040"/></to>
    </wire>
    <wire loc="92:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6d96040"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6d788c0"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb6db0010"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb6d96be8"/></to>
    </wire>
    <wire loc="94:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb6d96be8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb6d75498"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6db4b68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6d97368"/></to>
    </wire>
    <wire loc="90:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6d97368"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6d81a60"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0xb6da5920"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0xb6d95390"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0xb6d95390"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0xb6d75bb0"/></to>
    </wire>
    <wire loc="81:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0xb6daf2a8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6d8c2e8"/></to>
    </wire>
    <wire loc="104:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6d8c2e8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6d69ec8"/></to>
    </wire>
    <wire loc="80:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6da6c58"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6d8aca0"/></to>
    </wire>
    <wire loc="103:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6d8aca0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6d67a08"/></to>
    </wire>
    <wire loc="254:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6d878f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6b3f728"/></to>
    </wire>
    <wire loc="99:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xb6d8e158"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xb6d6cb60"/></to>
    </wire>
    <wire loc="345:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xb6d6cb60"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xb6a2ba58"/></to>
    </wire>
    <wire loc="310:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6d67a08"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6a85998"/></to>
    </wire>
    <wire loc="139:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xb6d828e0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb6c72468"/></to>
    </wire>
    <wire loc="141:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0xb6d807d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6c74d98"/></to>
    </wire>
    <wire loc="136:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb6d831f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6c73568"/></to>
    </wire>
    <wire loc="138:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb6d82268"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb6c720a8"/></to>
    </wire>
    <wire loc="98:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6d93dc8"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6d6e7f0"/></to>
    </wire>
    <wire loc="343:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6d6e7f0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6a2d6f8"/></to>
    </wire>
    <wire loc="255:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb6d78e48"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb6b3ece0"/></to>
    </wire>
    <wire loc="137:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6d83bb8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6c73ca8"/></to>
    </wire>
    <wire loc="309:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6d69ec8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6a54180"/></to>
    </wire>
    <wire loc="102:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6d89720"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6d69330"/></to>
    </wire>
    <wire loc="347:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6d69330"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6a26950"/></to>
    </wire>
    <wire loc="97:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6d91a10"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6d6f368"/></to>
    </wire>
    <wire loc="344:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6d6f368"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6a27208"/></to>
    </wire>
    <wire loc="288:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6d788c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6ab7628"/></to>
    </wire>
    <wire loc="86:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0xb6d98178"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0xb6d81010"/></to>
    </wire>
    <wire loc="143:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0xb6d81010"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0xb6c72848"/></to>
    </wire>
    <wire loc="226:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb6d75498"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb6b44010"/></to>
    </wire>
    <wire loc="140:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6d81a60"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6c741c0"/></to>
    </wire>
    <wire loc="264:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0xb6d75bb0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0xb6b2cb40"/></to>
    </wire>
    <wire loc="100:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6d89228"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6d6bdf0"/></to>
    </wire>
    <wire loc="346:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6d6bdf0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6a26458"/></to>
    </wire>
    <wire loc="87:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0xb6d98858"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0xb6d816f0"/></to>
    </wire>
    <wire loc="144:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0xb6d816f0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0xb6c72c28"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6b3f728"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xb6b31360"/></to>
    </wire>
    <wire loc="89:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xb6a2ba58"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xb6a14b98"/></to>
    </wire>
    <wire loc="175:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0xb6d79c78"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb6c27ce8"/></to>
    </wire>
    <wire loc="163:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0xb6d76418"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6c60e18"/></to>
    </wire>
    <wire loc="98:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb6c60e18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb654d180"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xb6c72468"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb6588298"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb6c73568"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb65893a8"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb6c720a8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb6589ec8"/></to>
    </wire>
    <wire loc="176:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0xb6d705b8"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0xb6b8df10"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0xb6b8df10"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0xb65124f0"/></to>
    </wire>
    <wire loc="177:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0xb6d78148"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6c28c68"/></to>
    </wire>
    <wire loc="86:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6a2d6f8"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6a15838"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb6b3ece0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb64d0b68"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6c74d98"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb658abe8"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6c73ca8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6589ae8"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6a54180"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb647b7d8"/></to>
    </wire>
    <wire loc="82:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6a26950"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6981b48"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6a27208"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6a103d8"/></to>
    </wire>
    <wire loc="173:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0xb6d79098"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0xb6c27318"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0xb6c72848"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0xb6588678"/></to>
    </wire>
    <wire loc="117:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb6b44010"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0xb6b42390"/></to>
    </wire>
    <wire loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0xb6b2cb40"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0xb64c7040"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6c741c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb658a010"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6a85998"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb647c010"/></to>
    </wire>
    <wire loc="174:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0xb6d79828"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0xb6c279d0"/></to>
    </wire>
    <wire loc="97:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6a26458"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6a0f680"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0xb6c72c28"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0xb6588a58"/></to>
    </wire>
    <wire loc="116:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6d2e3a8"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6b8e530"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6b8e530"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb65199f0"/></to>
    </wire>
    <wire loc="117:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb6d2b830"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb6cf3ee0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6d2d480"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6a54180"/></to>
    </wire>
    <wire loc="119:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0xb6d28a28"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6a2ec88"/></to>
    </wire>
    <wire loc="80:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6a2ec88"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6a17e70"/></to>
    </wire>
    <wire loc="124:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb6cf1d68"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb6a24428"/></to>
    </wire>
    <wire loc="101:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb6a24428"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb6982030"/></to>
    </wire>
    <wire loc="125:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb6cf15d0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb6d631a8"/></to>
    </wire>
    <wire loc="131:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6c70010"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0xb6d3fac0"/></to>
    </wire>
    <wire loc="132:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6c717a8"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0xb6c62c60"/></to>
    </wire>
    <wire loc="133:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6c71ca0"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0xb6be8528"/></to>
    </wire>
    <wire loc="134:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6c71010"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0xb6be8860"/></to>
    </wire>
    <wire loc="152:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb6c6c678"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6c60e18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6c6c1a0"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0xb6be8030"/></to>
    </wire>
    <wire loc="168:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6c0c070"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6b8e530"/></to>
    </wire>
    <wire loc="169:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6c0a250"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0xb6c05050"/></to>
    </wire>
    <wire loc="170:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6c0a748"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0xb6c05548"/></to>
    </wire>
    <wire loc="171:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6c0ba30"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0xb6c05880"/></to>
    </wire>
    <wire loc="185:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6be6050"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6b87d18"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6b87d18"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb64e7b18"/></to>
    </wire>
    <wire loc="186:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6be6548"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6b8b170"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6b8b170"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb65116b0"/></to>
    </wire>
    <wire loc="187:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6be6880"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6b8c948"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6b8c948"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6512f08"/></to>
    </wire>
    <wire loc="193:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6b8b4d8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6b446a8"/></to>
    </wire>
    <wire loc="115:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6b446a8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6b436c8"/></to>
    </wire>
    <wire loc="197:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6b8bc70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6b4bc58"/></to>
    </wire>
    <wire loc="114:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6b4bc58"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6b43390"/></to>
    </wire>
    <wire loc="220:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6b4d010"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0xb6d4c8f8"/></to>
    </wire>
    <wire loc="221:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6b86678"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6b4b760"/></to>
    </wire>
    <wire loc="113:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6b4b760"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6b44e70"/></to>
    </wire>
    <wire loc="230:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6b43e40"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6ab7628"/></to>
    </wire>
    <wire loc="232:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6b44e70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6b3fd00"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6b3fd00"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6b31938"/></to>
    </wire>
    <wire loc="233:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6b43390"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6b3e250"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6b3e250"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6b31e30"/></to>
    </wire>
    <wire loc="234:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6b436c8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6b3e568"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6b3e568"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6b301b0"/></to>
    </wire>
    <wire loc="250:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0xb6b31360"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6b2dd20"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6b2dd20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb64cbee0"/></to>
    </wire>
    <wire loc="251:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6b31938"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6b2c330"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6b2c330"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb64c8818"/></to>
    </wire>
    <wire loc="252:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6b31e30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6b2c828"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6b2c828"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb64c8d10"/></to>
    </wire>
    <wire loc="253:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6b301b0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6a537f0"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6a537f0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb647ae40"/></to>
    </wire>
    <wire loc="260:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb6aefda0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6aea010"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb6aea010"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb64a9b78"/></to>
    </wire>
    <wire loc="261:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6aee310"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6b86230"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6b86230"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb64e4010"/></to>
    </wire>
    <wire loc="262:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb6aef628"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb6a39220"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb6a39220"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0xb6a35010"/></to>
    </wire>
    <wire loc="263:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb6aef070"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb6d631a8"/></to>
    </wire>
    <wire loc="268:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6b86b70"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6aea4e8"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6aea4e8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb64a6070"/></to>
    </wire>
    <wire loc="277:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6ac8928"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0xb6d476d8"/></to>
    </wire>
    <wire loc="278:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6aea930"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6ab8cf8"/></to>
    </wire>
    <wire loc="279:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6aeae28"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6ab7230"/></to>
    </wire>
    <wire loc="280:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb6ac8270"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb6cf3ee0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="286:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0xb6a9e4f0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xb6a3beb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="287:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb6a9f458"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb6cf3ee0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="292:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6a9fb10"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0xb6d4e250"/></to>
    </wire>
    <wire loc="293:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6ab7b50"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6a8fde0"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb6a8fde0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6a8bcc8"/></to>
    </wire>
    <wire loc="294:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6a9f060"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6a8d310"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6a8d310"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6a8a250"/></to>
    </wire>
    <wire loc="299:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6a89250"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0xb6d4ab00"/></to>
    </wire>
    <wire loc="300:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6a8bcc8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6a39998"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb6a39998"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6a35828"/></to>
    </wire>
    <wire loc="301:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6a8a250"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6a39e70"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6a39e70"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6a35d20"/></to>
    </wire>
    <wire loc="302:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0xb6a8a668"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0xb6a2e820"/></to>
    </wire>
    <wire loc="79:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0xb6a2e820"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0xb6a17a08"/></to>
    </wire>
    <wire loc="307:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6a52078"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6a26950"/></to>
    </wire>
    <wire loc="308:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6a528f0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6a4e4a0"/></to>
    </wire>
    <wire loc="311:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0xb6a51098"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xb6a3beb8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="316:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6a4ec68"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6a2ec88"/></to>
    </wire>
    <wire loc="326:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6a34d20"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0xb6d4ab00"/></to>
    </wire>
    <wire loc="327:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6a35828"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6a31e40"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb6a31e40"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6a17060"/></to>
    </wire>
    <wire loc="328:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6a35d20"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6a2e3d0"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6a2e3d0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6a175b8"/></to>
    </wire>
    <wire loc="329:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0xb6a35010"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb6a31668"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb6a31668"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb6a18858"/></to>
    </wire>
    <wire loc="341:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6a23ec0"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0xb6d53128"/></to>
    </wire>
    <wire loc="342:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6a22898"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6a54180"/></to>
    </wire>
    <wire loc="349:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0xb6a1f0e0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xb6a3beb8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="350:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0xb6a1f778"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xb6a3beb8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="351:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0xb6a1fe38"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xb6a3beb8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="352:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb6a1e498"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb6cf3ee0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="353:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb6a1eb78"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb6d631a8"/></to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb6cf3ee0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb659cd20"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb659a540"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb6cf1d68"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb6597010"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb6cf15d0"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb65866f0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb6c84e48"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6588dd0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6c71010"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb65875d0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6c717a8"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6587ac8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6c71ca0"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6587e00"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6c70010"/></to>
    </wire>
    <wire loc="99:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb6c2a5a8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb654d8c0"/></to>
    </wire>
    <wire loc="100:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb6c2a9b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb654dcc8"/></to>
    </wire>
    <wire loc="101:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb654c218"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb6c2ae60"/></to>
    </wire>
    <wire loc="103:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb654c640"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xb654e170"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0xb654cc38"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e0d58"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb65119f8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb6c84e48"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6510010"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6b8b4d8"/></to>
    </wire>
    <wire loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb65107a8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6b8bc70"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0xb64e2630"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0xb6b69010"/></to>
    </wire>
    <wire loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0xb6b69010"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0xb6b66010"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb64e2cc8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb64e01b0"/></to>
    </wire>
    <wire loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb64e01b0"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb6b66a38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb64e4770"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6b86678"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb64e4c68"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6b86b70"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0xb64e2078"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6b4d010"/></to>
    </wire>
    <wire loc="118:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0xb6b42a68"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6b43e40"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb64c7cc0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb6aef070"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb64c7548"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb6aef628"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb64c5310"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6aefda0"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb64c57e8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6aee310"/></to>
    </wire>
    <wire loc="189:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0xb64c4080"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e0d58"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0xb64c44b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e0d58"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0xb64c5c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e0d58"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb64a64b8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6aea930"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb64a58e8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6ac8928"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb64a69b0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6aeae28"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb64a6da8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb6ac8270"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb64a54d0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb6ac7478"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb6ac7478"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb6ac3ec8"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0xb64a5ee0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e0d58"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0xb6ac5b58"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0xb6ac3608"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb6aca910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6ac30e8"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6a988a0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xb6a8c698"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0xb6a8d708"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0xb6a8a668"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb6a8f668"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0xb6a8b4b0"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6a8db00"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6a8aa80"/></to>
    </wire>
    <wire loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0xb6a8c330"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6a89250"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0xb6a8f350"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0xb6a8b178"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0xb6a98e58"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0xb6a8cc70"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6477e40"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6a528f0"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6478ca8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6a52078"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0xb64775c8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb6a595d8"/></to>
    </wire>
    <wire loc="26:/home/wsn/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb6a595d8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb71880d0"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0xb6478640"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0xb6a51098"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6a3a450"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xb6a361a0"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0xb6a37290"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0xb6a34170"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6a37688"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6a34588"/></to>
    </wire>
    <wire loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0xb6a37e20"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6a34d20"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0xb6a3aee0"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0xb6a36c70"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0xb6a3aa08"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0xb6a36778"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb6982030"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb689e2c8"/></to>
    </wire>
    <wire loc="92:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb6a2ae28"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb6a11010"/></to>
    </wire>
    <wire loc="81:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6981b48"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb6875c68"/></to>
    </wire>
    <wire loc="84:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6a079f0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6a23ec0"/></to>
    </wire>
    <wire loc="87:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0xb6a04288"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0xb6a1f0e0"/></to>
    </wire>
    <wire loc="90:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0xb6a04920"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0xb6a1f778"/></to>
    </wire>
    <wire loc="93:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0xb6a02010"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0xb6a1fe38"/></to>
    </wire>
    <wire loc="96:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6a02818"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6a22898"/></to>
    </wire>
    <wire loc="99:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb6a07088"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6981b48"/></to>
    </wire>
    <wire loc="102:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb69ff630"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb6a1e498"/></to>
    </wire>
    <wire loc="104:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0xb6a0fa98"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0xb6988b08"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0xb6988b08"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xb72bf8e0"/></to>
    </wire>
    <wire loc="105:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb6a0d5b8"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0xb69855b8"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb69855b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6968c50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0xb6a09b40"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0xb6985cc0"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0xb6985cc0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0xb6970e48"/></to>
    </wire>
    <wire loc="108:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0xb6a0c210"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0xb69843d0"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0xb69843d0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0xb72b9210"/></to>
    </wire>
    <wire loc="109:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xb6a0cbf8"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0xb6984db8"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xb6984db8"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0xb72c04b0"/></to>
    </wire>
    <wire loc="111:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0xb6a06d50"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0xb6983820"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0xb6983820"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0xb697f980"/></to>
    </wire>
    <wire loc="112:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb69ff010"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb6a1eb78"/></to>
    </wire>
    <wire loc="113:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0xb6a03588"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0xb685d010"/></to>
    </wire>
    <wire loc="856:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0xb69ab910"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e0d58"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb689e2c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb6432ac0"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0xb6970e48"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0xb6967520"/></to>
    </wire>
    <wire loc="48:/home/wsn/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb6875c68"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb6864f18"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0xb697a358"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0xb72b0c08"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0xb697ad58"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0xb72b1750"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xb697c590"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb68f5348"/></to>
    </wire>
    <wire loc="91:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xb68f5348"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb68e9258"/></to>
    </wire>
    <wire loc="96:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0xb6968500"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xb6967b38"/></to>
    </wire>
    <wire loc="94:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb6970aa0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb6967198"/></to>
    </wire>
    <wire loc="92:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb697ed98"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb696ed80"/></to>
    </wire>
    <wire loc="97:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb6968c50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb68ff198"/></to>
    </wire>
    <wire loc="98:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb68ff198"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb644aee8"/></to>
    </wire>
    <wire loc="99:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb68fe208"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb69662d8"/></to>
    </wire>
    <wire loc="100:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0xb69551c8"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0xb696de40"/></to>
    </wire>
    <wire loc="83:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0xb696de40"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0xb692c1c8"/></to>
    </wire>
    <wire loc="101:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0xb6965a98"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xb7359420"/></to>
    </wire>
    <wire loc="294:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0xb6942390"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e0d58"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0xb6926898"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xb7359420"/></to>
    </wire>
    <wire loc="86:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0xb692a010"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xb72bf8e0"/></to>
    </wire>
    <wire loc="87:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0xb692a9e8"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0xb72be2f0"/></to>
    </wire>
    <wire loc="88:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0xb69274a0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0xb72bece8"/></to>
    </wire>
    <wire loc="89:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0xb6927e88"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0xb72bd750"/></to>
    </wire>
    <wire loc="99:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb68ff8d8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb6449638"/></to>
    </wire>
    <wire loc="100:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb68ffce0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb6449a40"/></to>
    </wire>
    <wire loc="101:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb6449f00"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb68fe208"/></to>
    </wire>
    <wire loc="103:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb6448348"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xb644dee0"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0xb6448940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e0d58"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb68f6610"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb68ea530"/></to>
    </wire>
    <wire loc="89:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb68f9328"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb68ec230"/></to>
    </wire>
    <wire loc="93:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb68f2538"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0xb68e6128"/></to>
    </wire>
    <wire loc="94:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb68f2538"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0xb68e5d20"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb68f2538"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0xb68e2950"/></to>
    </wire>
    <wire loc="43:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0xb6430548"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb68f9328"/></to>
    </wire>
    <wire loc="44:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0xb642d7e8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb68f2538"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/home/wsn/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6897140"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb68f9328"/></to>
    </wire>
    <wire loc="49:/home/wsn/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb68638c8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6870e78"/></to>
    </wire>
    <wire loc="50:/home/wsn/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0xb68650e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6872d80"/></to>
    </wire>
    <wire loc="31:/home/wsn/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb6872d80"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb686c010"/></to>
    </wire>
    <wire loc="32:/home/wsn/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb686b1d8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb68f9328"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <documentation loc="1:/home/wsn/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/wsn/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/wsn/tinyos-main/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/wsn/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/home/wsn/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/home/wsn/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/wsn/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/wsn/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/wsn/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LEDTestC" loc="3:LEDTestC.nc" safe="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/wsn/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/wsn/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/wsn/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LEDTestAppC.Timer" loc="44(LEDTestAppC.Timer):/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/wsn/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7398508"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb717b948"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7398508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7398508"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7398508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/home/wsn/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/wsn/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/home/wsn/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/home/wsn/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TThree" ref="0xb736e010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7396010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TThree" ref="0xb736e010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0xb736e5e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/home/wsn/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/home/wsn/tinyos-main/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/wsn/tinyos-main/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/wsn/tinyos-main/tos/lib/printf/PutcharP.nc">
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/wsn/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="37:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC.TaskletC" loc="42(RF230RadioC.TaskletC):/home/wsn/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <instance number="0">
        <component-ref qname="TaskletC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioP" loc="39:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="50(RF230RadioC.RadioAlarmC.RadioAlarmP):/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/wsn/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/wsn/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/wsn/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/wsn/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/wsn/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7370db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/home/wsn/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/wsn/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7370db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7396010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7396010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7396010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/home/wsn/tinyos-main/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb729e688" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb729e8a0" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb729eab8" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb7296ae0" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb7296d08" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb7293010" loc="43:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb7293200" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb7244088" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb72442b0" loc="43:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb72444d8" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb72446c8" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xb717b948" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb717b948"/></type-var>
        </typedef>
        <constant name="divider" ref="0xb717bb08" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xb7172c50" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb7172c50"/></type-var>
        </typedef>
        <constant name="divider" ref="0xb7172e10" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb70e7090" loc="46:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb70e7090"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb70ce5f8" loc="46:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb70ce5f8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0xb70ce7d8" loc="46:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb70a1ce0" loc="46:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb70a1ce0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xb7094378" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0xb708a7c0" loc="43:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0xb7065010" loc="45:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xb6e2b148" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb6e2b148"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0xb6e2b368" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xb6e30cf8" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xb6e30cf8"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0xb6e20168" loc="43:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb6e20168"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0xb6e12158" loc="55:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0xb6e12158"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0xb6e125b8" loc="56:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0xb6e125b8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0xb6e12820" loc="57:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0xb6e12820"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0xb6e12c90" loc="58:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0xb6e12c90"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0xb6e12ef8" loc="59:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0xb6e113a8" loc="60:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0xb6e113a8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/home/wsn/tinyos-main/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0xb6df3a50" loc="42:/home/wsn/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0xb6df3a50"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0xb6df3c78" loc="42:/home/wsn/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TaskletC" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0xb6c61960" loc="83:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0xb6c59680" loc="42:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xb6892428" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xb6892428"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0xb6892870" loc="52:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb6892870"/></type-var>
        </typedef>
        <constant name="mindt" ref="0xb6892a30" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0xb72d9358" loc="58:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb72d9358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb72d9530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xb72dc670" loc="57:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb72dc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb72dc848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb72d4c68" loc="52:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb72d4c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb72d4e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb72d9c50" loc="46:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb72d9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb72d9e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xb72d4508" loc="50:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb72d4508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb72d46e0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb72d47c0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb72d48a0"/>
        <function-ref name="actualMicro" scoped="" ref="0xb72d4980"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb72d4a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0xb72d23f0" loc="45:/home/wsn/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0xb72d23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb72d25c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb72d2010" loc="44:/home/wsn/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb72d2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb72d21e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0xb72d27f8" loc="46:/home/wsn/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0xb72d27f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb72d29d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb72d6c50" loc="41:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb72d6c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb72d6e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb72d6880" loc="40:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb72d6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb72d6a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb72cb828" loc="45:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb72cb828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb72cba00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0xb72c8dd0" loc="44:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0xb72c8dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72cb010"/>
        <function-ref name="isInput" scoped="" ref="0xb72cb0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb72cb1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72cb2b0"/>
        <function-ref name="get" scoped="" ref="0xb72cb390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72cb470"/>
        <function-ref name="set" scoped="" ref="0xb72cb550"/>
        <function-ref name="clr" scoped="" ref="0xb72cb630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb72ce828" loc="43:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb72ce828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb72cea00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0xb72a42f0" loc="98:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0xb72a42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72a46c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72a47a8"/>
        <function-ref name="toggle" scoped="" ref="0xb72a4888"/>
        <function-ref name="isOutput" scoped="" ref="0xb72a4968"/>
        <function-ref name="get" scoped="" ref="0xb72a4a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72a4b28"/>
        <function-ref name="set" scoped="" ref="0xb72a4c08"/>
        <function-ref name="clr" scoped="" ref="0xb72a4ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0xb72b3830" loc="72:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0xb72b3830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72b3a08"/>
        <function-ref name="isInput" scoped="" ref="0xb72b3ae8"/>
        <function-ref name="toggle" scoped="" ref="0xb72b3bc8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72b3ca8"/>
        <function-ref name="get" scoped="" ref="0xb72b3d88"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72b3e68"/>
        <function-ref name="set" scoped="" ref="0xb72b2010"/>
        <function-ref name="clr" scoped="" ref="0xb72b20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0xb72adea8" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0xb72adea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72ac0c0"/>
        <function-ref name="isInput" scoped="" ref="0xb72ac1a0"/>
        <function-ref name="toggle" scoped="" ref="0xb72ac280"/>
        <function-ref name="isOutput" scoped="" ref="0xb72ac360"/>
        <function-ref name="get" scoped="" ref="0xb72ac440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72ac520"/>
        <function-ref name="set" scoped="" ref="0xb72ac600"/>
        <function-ref name="clr" scoped="" ref="0xb72ac6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0xb72a70a0" loc="92:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0xb72a70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72a7278"/>
        <function-ref name="isInput" scoped="" ref="0xb72a7358"/>
        <function-ref name="toggle" scoped="" ref="0xb72a7438"/>
        <function-ref name="isOutput" scoped="" ref="0xb72a7518"/>
        <function-ref name="get" scoped="" ref="0xb72a75f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72a76d8"/>
        <function-ref name="set" scoped="" ref="0xb72a77b8"/>
        <function-ref name="clr" scoped="" ref="0xb72a7898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0xb72a0830" loc="103:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0xb72a0830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72a0a08"/>
        <function-ref name="isInput" scoped="" ref="0xb72a0ae8"/>
        <function-ref name="toggle" scoped="" ref="0xb72a0bc8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72a0ca8"/>
        <function-ref name="get" scoped="" ref="0xb72a0d88"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72a0e68"/>
        <function-ref name="set" scoped="" ref="0xb729f010"/>
        <function-ref name="clr" scoped="" ref="0xb729f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0xb72c04b0" loc="50:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0xb72c04b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72c0688"/>
        <function-ref name="isInput" scoped="" ref="0xb72c0768"/>
        <function-ref name="toggle" scoped="" ref="0xb72c0848"/>
        <function-ref name="isOutput" scoped="" ref="0xb72c0928"/>
        <function-ref name="get" scoped="" ref="0xb72c0a08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72c0ae8"/>
        <function-ref name="set" scoped="" ref="0xb72c0bc8"/>
        <function-ref name="clr" scoped="" ref="0xb72c0ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0xb72a9c08" loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0xb72a9c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72a9de0"/>
        <function-ref name="isInput" scoped="" ref="0xb72a9ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb72a8010"/>
        <function-ref name="isOutput" scoped="" ref="0xb72a80f0"/>
        <function-ref name="get" scoped="" ref="0xb72a81d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72a82b0"/>
        <function-ref name="set" scoped="" ref="0xb72a8390"/>
        <function-ref name="clr" scoped="" ref="0xb72a8470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0xb72bf8e0" loc="53:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0xb72bf8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72bfab8"/>
        <function-ref name="isInput" scoped="" ref="0xb72bfb98"/>
        <function-ref name="toggle" scoped="" ref="0xb72bfc78"/>
        <function-ref name="isOutput" scoped="" ref="0xb72bfd58"/>
        <function-ref name="get" scoped="" ref="0xb72bfe38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72bff18"/>
        <function-ref name="set" scoped="" ref="0xb72be010"/>
        <function-ref name="clr" scoped="" ref="0xb72be0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0xb72b70a0" loc="64:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0xb72b70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72b7278"/>
        <function-ref name="isInput" scoped="" ref="0xb72b7358"/>
        <function-ref name="toggle" scoped="" ref="0xb72b7438"/>
        <function-ref name="isOutput" scoped="" ref="0xb72b7518"/>
        <function-ref name="get" scoped="" ref="0xb72b75f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72b76d8"/>
        <function-ref name="set" scoped="" ref="0xb72b77b8"/>
        <function-ref name="clr" scoped="" ref="0xb72b7898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0xb72b1750" loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0xb72b1750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72b1928"/>
        <function-ref name="isInput" scoped="" ref="0xb72b1a08"/>
        <function-ref name="toggle" scoped="" ref="0xb72b1ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72b1bc8"/>
        <function-ref name="get" scoped="" ref="0xb72b1ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72b1d88"/>
        <function-ref name="set" scoped="" ref="0xb72b1e68"/>
        <function-ref name="clr" scoped="" ref="0xb72b0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0xb72abce8" loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0xb72abce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72abec0"/>
        <function-ref name="isInput" scoped="" ref="0xb72aa010"/>
        <function-ref name="toggle" scoped="" ref="0xb72aa0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72aa1d0"/>
        <function-ref name="get" scoped="" ref="0xb72aa2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72aa390"/>
        <function-ref name="set" scoped="" ref="0xb72aa470"/>
        <function-ref name="clr" scoped="" ref="0xb72aa550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0xb72c3210" loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0xb72c3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72c33e8"/>
        <function-ref name="isInput" scoped="" ref="0xb72c34c8"/>
        <function-ref name="toggle" scoped="" ref="0xb72c35a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72c3688"/>
        <function-ref name="get" scoped="" ref="0xb72c3768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72c3848"/>
        <function-ref name="set" scoped="" ref="0xb72c3928"/>
        <function-ref name="clr" scoped="" ref="0xb72c3a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0xb72bd750" loc="56:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0xb72bd750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72bd928"/>
        <function-ref name="isInput" scoped="" ref="0xb72bda08"/>
        <function-ref name="toggle" scoped="" ref="0xb72bdae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72bdbc8"/>
        <function-ref name="get" scoped="" ref="0xb72bdca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72bdd88"/>
        <function-ref name="set" scoped="" ref="0xb72bde68"/>
        <function-ref name="clr" scoped="" ref="0xb72bb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0xb72b6ea8" loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0xb72b6ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72b50c0"/>
        <function-ref name="isInput" scoped="" ref="0xb72b51a0"/>
        <function-ref name="toggle" scoped="" ref="0xb72b5280"/>
        <function-ref name="isOutput" scoped="" ref="0xb72b5360"/>
        <function-ref name="get" scoped="" ref="0xb72b5440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72b5520"/>
        <function-ref name="set" scoped="" ref="0xb72b5600"/>
        <function-ref name="clr" scoped="" ref="0xb72b56e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0xb72af670" loc="78:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0xb72af670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72af848"/>
        <function-ref name="isInput" scoped="" ref="0xb72af928"/>
        <function-ref name="toggle" scoped="" ref="0xb72afa08"/>
        <function-ref name="isOutput" scoped="" ref="0xb72afae8"/>
        <function-ref name="get" scoped="" ref="0xb72afbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72afca8"/>
        <function-ref name="set" scoped="" ref="0xb72afd88"/>
        <function-ref name="clr" scoped="" ref="0xb72afe68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0xb72a6ea8" loc="95:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0xb72a6ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72a50c0"/>
        <function-ref name="isInput" scoped="" ref="0xb72a51a0"/>
        <function-ref name="toggle" scoped="" ref="0xb72a5280"/>
        <function-ref name="isOutput" scoped="" ref="0xb72a5360"/>
        <function-ref name="get" scoped="" ref="0xb72a5440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72a5520"/>
        <function-ref name="set" scoped="" ref="0xb72a5600"/>
        <function-ref name="clr" scoped="" ref="0xb72a56e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0xb72a13d0" loc="101:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0xb72a13d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72a15a8"/>
        <function-ref name="isInput" scoped="" ref="0xb72a1688"/>
        <function-ref name="toggle" scoped="" ref="0xb72a1768"/>
        <function-ref name="isOutput" scoped="" ref="0xb72a1848"/>
        <function-ref name="get" scoped="" ref="0xb72a1928"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72a1a08"/>
        <function-ref name="set" scoped="" ref="0xb72a1ae8"/>
        <function-ref name="clr" scoped="" ref="0xb72a1bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0xb72aea98" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0xb72aea98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72aec70"/>
        <function-ref name="isInput" scoped="" ref="0xb72aed50"/>
        <function-ref name="toggle" scoped="" ref="0xb72aee30"/>
        <function-ref name="isOutput" scoped="" ref="0xb72aef10"/>
        <function-ref name="get" scoped="" ref="0xb72ad010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72ad0f0"/>
        <function-ref name="set" scoped="" ref="0xb72ad1d0"/>
        <function-ref name="clr" scoped="" ref="0xb72ad2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0xb72c10a0" loc="48:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0xb72c10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72c1278"/>
        <function-ref name="isInput" scoped="" ref="0xb72c1358"/>
        <function-ref name="toggle" scoped="" ref="0xb72c1438"/>
        <function-ref name="isOutput" scoped="" ref="0xb72c1518"/>
        <function-ref name="get" scoped="" ref="0xb72c15f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72c16d8"/>
        <function-ref name="set" scoped="" ref="0xb72c17b8"/>
        <function-ref name="clr" scoped="" ref="0xb72c1898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0xb72ba750" loc="59:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0xb72ba750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72ba928"/>
        <function-ref name="isInput" scoped="" ref="0xb72baa08"/>
        <function-ref name="toggle" scoped="" ref="0xb72baae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72babc8"/>
        <function-ref name="get" scoped="" ref="0xb72baca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72bad88"/>
        <function-ref name="set" scoped="" ref="0xb72bae68"/>
        <function-ref name="clr" scoped="" ref="0xb72b9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0xb72a4ee8" loc="99:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0xb72a4ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72a30e0"/>
        <function-ref name="isInput" scoped="" ref="0xb72a31c0"/>
        <function-ref name="toggle" scoped="" ref="0xb72a32a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72a3380"/>
        <function-ref name="get" scoped="" ref="0xb72a3460"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72a3540"/>
        <function-ref name="set" scoped="" ref="0xb72a3620"/>
        <function-ref name="clr" scoped="" ref="0xb72a3700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0xb72b9c08" loc="62:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0xb72b9c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72b9de0"/>
        <function-ref name="isInput" scoped="" ref="0xb72b9ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb72b8010"/>
        <function-ref name="isOutput" scoped="" ref="0xb72b80f0"/>
        <function-ref name="get" scoped="" ref="0xb72b81d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72b82b0"/>
        <function-ref name="set" scoped="" ref="0xb72b8390"/>
        <function-ref name="clr" scoped="" ref="0xb72b8470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0xb72b22f0" loc="73:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0xb72b22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72b24c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72b25a8"/>
        <function-ref name="toggle" scoped="" ref="0xb72b2688"/>
        <function-ref name="isOutput" scoped="" ref="0xb72b2768"/>
        <function-ref name="get" scoped="" ref="0xb72b2848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72b2928"/>
        <function-ref name="set" scoped="" ref="0xb72b2a08"/>
        <function-ref name="clr" scoped="" ref="0xb72b2ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0xb72ac8e0" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0xb72ac8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72acab8"/>
        <function-ref name="isInput" scoped="" ref="0xb72acb98"/>
        <function-ref name="toggle" scoped="" ref="0xb72acc78"/>
        <function-ref name="isOutput" scoped="" ref="0xb72acd58"/>
        <function-ref name="get" scoped="" ref="0xb72ace38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72acf18"/>
        <function-ref name="set" scoped="" ref="0xb72ab010"/>
        <function-ref name="clr" scoped="" ref="0xb72ab0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0xb72a7a98" loc="93:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0xb72a7a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72a7c70"/>
        <function-ref name="isInput" scoped="" ref="0xb72a7d50"/>
        <function-ref name="toggle" scoped="" ref="0xb72a7e30"/>
        <function-ref name="isOutput" scoped="" ref="0xb72a7f10"/>
        <function-ref name="get" scoped="" ref="0xb72a6010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72a60f0"/>
        <function-ref name="set" scoped="" ref="0xb72a61d0"/>
        <function-ref name="clr" scoped="" ref="0xb72a62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0xb72c0ea8" loc="51:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0xb72c0ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72bf0c0"/>
        <function-ref name="isInput" scoped="" ref="0xb72bf1a0"/>
        <function-ref name="toggle" scoped="" ref="0xb72bf280"/>
        <function-ref name="isOutput" scoped="" ref="0xb72bf360"/>
        <function-ref name="get" scoped="" ref="0xb72bf440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72bf520"/>
        <function-ref name="set" scoped="" ref="0xb72bf600"/>
        <function-ref name="clr" scoped="" ref="0xb72bf6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0xb72be2f0" loc="54:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0xb72be2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72be4c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72be5a8"/>
        <function-ref name="toggle" scoped="" ref="0xb72be688"/>
        <function-ref name="isOutput" scoped="" ref="0xb72be768"/>
        <function-ref name="get" scoped="" ref="0xb72be848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72be928"/>
        <function-ref name="set" scoped="" ref="0xb72bea08"/>
        <function-ref name="clr" scoped="" ref="0xb72beae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0xb72b7a98" loc="65:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0xb72b7a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72b7c70"/>
        <function-ref name="isInput" scoped="" ref="0xb72b7d50"/>
        <function-ref name="toggle" scoped="" ref="0xb72b7e30"/>
        <function-ref name="isOutput" scoped="" ref="0xb72b7f10"/>
        <function-ref name="get" scoped="" ref="0xb72b6010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72b60f0"/>
        <function-ref name="set" scoped="" ref="0xb72b61d0"/>
        <function-ref name="clr" scoped="" ref="0xb72b62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0xb72b0210" loc="76:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0xb72b0210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72b03e8"/>
        <function-ref name="isInput" scoped="" ref="0xb72b04c8"/>
        <function-ref name="toggle" scoped="" ref="0xb72b05a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72b0688"/>
        <function-ref name="get" scoped="" ref="0xb72b0768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72b0848"/>
        <function-ref name="set" scoped="" ref="0xb72b0928"/>
        <function-ref name="clr" scoped="" ref="0xb72b0a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0xb72aa750" loc="87:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0xb72aa750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72aa928"/>
        <function-ref name="isInput" scoped="" ref="0xb72aaa08"/>
        <function-ref name="toggle" scoped="" ref="0xb72aaae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72aabc8"/>
        <function-ref name="get" scoped="" ref="0xb72aaca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72aad88"/>
        <function-ref name="set" scoped="" ref="0xb72aae68"/>
        <function-ref name="clr" scoped="" ref="0xb72a9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0xb72c3c08" loc="46:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0xb72c3c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72c3de0"/>
        <function-ref name="isInput" scoped="" ref="0xb72c3ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb72c2010"/>
        <function-ref name="isOutput" scoped="" ref="0xb72c20f0"/>
        <function-ref name="get" scoped="" ref="0xb72c21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72c22b0"/>
        <function-ref name="set" scoped="" ref="0xb72c2390"/>
        <function-ref name="clr" scoped="" ref="0xb72c2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0xb72bb210" loc="57:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0xb72bb210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72bb468"/>
        <function-ref name="isInput" scoped="" ref="0xb72bb548"/>
        <function-ref name="toggle" scoped="" ref="0xb72bb628"/>
        <function-ref name="isOutput" scoped="" ref="0xb72bb708"/>
        <function-ref name="get" scoped="" ref="0xb72bb7e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72bb8c8"/>
        <function-ref name="set" scoped="" ref="0xb72bb9a8"/>
        <function-ref name="clr" scoped="" ref="0xb72bba88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0xb72b58e0" loc="68:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0xb72b58e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72b5ab8"/>
        <function-ref name="isInput" scoped="" ref="0xb72b5b98"/>
        <function-ref name="toggle" scoped="" ref="0xb72b5c78"/>
        <function-ref name="isOutput" scoped="" ref="0xb72b5d58"/>
        <function-ref name="get" scoped="" ref="0xb72b5e38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72b5f18"/>
        <function-ref name="set" scoped="" ref="0xb72b4010"/>
        <function-ref name="clr" scoped="" ref="0xb72b40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0xb72a58e0" loc="96:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0xb72a58e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72a5ab8"/>
        <function-ref name="isInput" scoped="" ref="0xb72a5b98"/>
        <function-ref name="toggle" scoped="" ref="0xb72a5c78"/>
        <function-ref name="isOutput" scoped="" ref="0xb72a5d58"/>
        <function-ref name="get" scoped="" ref="0xb72a5e38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72a5f18"/>
        <function-ref name="set" scoped="" ref="0xb72a4010"/>
        <function-ref name="clr" scoped="" ref="0xb72a40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0xb72b4ce8" loc="71:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0xb72b4ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72b3010"/>
        <function-ref name="isInput" scoped="" ref="0xb72b30f0"/>
        <function-ref name="toggle" scoped="" ref="0xb72b31d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72b32b0"/>
        <function-ref name="get" scoped="" ref="0xb72b3390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72b3470"/>
        <function-ref name="set" scoped="" ref="0xb72b3550"/>
        <function-ref name="clr" scoped="" ref="0xb72b3630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0xb72ad4b0" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0xb72ad4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72ad688"/>
        <function-ref name="isInput" scoped="" ref="0xb72ad768"/>
        <function-ref name="toggle" scoped="" ref="0xb72ad848"/>
        <function-ref name="isOutput" scoped="" ref="0xb72ad928"/>
        <function-ref name="get" scoped="" ref="0xb72ada08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72adae8"/>
        <function-ref name="set" scoped="" ref="0xb72adbc8"/>
        <function-ref name="clr" scoped="" ref="0xb72adca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0xb72a8670" loc="91:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0xb72a8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72a8848"/>
        <function-ref name="isInput" scoped="" ref="0xb72a8928"/>
        <function-ref name="toggle" scoped="" ref="0xb72a8a08"/>
        <function-ref name="isOutput" scoped="" ref="0xb72a8ae8"/>
        <function-ref name="get" scoped="" ref="0xb72a8bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72a8ca8"/>
        <function-ref name="set" scoped="" ref="0xb72a8d88"/>
        <function-ref name="clr" scoped="" ref="0xb72a8e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0xb72a1dc8" loc="102:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0xb72a1dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72a0010"/>
        <function-ref name="isInput" scoped="" ref="0xb72a00f0"/>
        <function-ref name="toggle" scoped="" ref="0xb72a01d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72a02b0"/>
        <function-ref name="get" scoped="" ref="0xb72a0390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72a0470"/>
        <function-ref name="set" scoped="" ref="0xb72a0550"/>
        <function-ref name="clr" scoped="" ref="0xb72a0630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0xb72c1a98" loc="49:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0xb72c1a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72c1c70"/>
        <function-ref name="isInput" scoped="" ref="0xb72c1d50"/>
        <function-ref name="toggle" scoped="" ref="0xb72c1e30"/>
        <function-ref name="isOutput" scoped="" ref="0xb72c1f10"/>
        <function-ref name="get" scoped="" ref="0xb72c0010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72c00f0"/>
        <function-ref name="set" scoped="" ref="0xb72c01d0"/>
        <function-ref name="clr" scoped="" ref="0xb72c02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0xb72b9210" loc="60:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0xb72b9210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72b93e8"/>
        <function-ref name="isInput" scoped="" ref="0xb72b94c8"/>
        <function-ref name="toggle" scoped="" ref="0xb72b95a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72b9688"/>
        <function-ref name="get" scoped="" ref="0xb72b9768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72b9848"/>
        <function-ref name="set" scoped="" ref="0xb72b9928"/>
        <function-ref name="clr" scoped="" ref="0xb72b9a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0xb72a9210" loc="89:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0xb72a9210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72a93e8"/>
        <function-ref name="isInput" scoped="" ref="0xb72a94c8"/>
        <function-ref name="toggle" scoped="" ref="0xb72a95a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72a9688"/>
        <function-ref name="get" scoped="" ref="0xb72a9768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72a9848"/>
        <function-ref name="set" scoped="" ref="0xb72a9928"/>
        <function-ref name="clr" scoped="" ref="0xb72a9a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0xb72b8670" loc="63:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0xb72b8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72b8848"/>
        <function-ref name="isInput" scoped="" ref="0xb72b8928"/>
        <function-ref name="toggle" scoped="" ref="0xb72b8a08"/>
        <function-ref name="isOutput" scoped="" ref="0xb72b8ae8"/>
        <function-ref name="get" scoped="" ref="0xb72b8bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72b8ca8"/>
        <function-ref name="set" scoped="" ref="0xb72b8d88"/>
        <function-ref name="clr" scoped="" ref="0xb72b8e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0xb72b2ce8" loc="74:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0xb72b2ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72b2ec0"/>
        <function-ref name="isInput" scoped="" ref="0xb72b1010"/>
        <function-ref name="toggle" scoped="" ref="0xb72b10f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72b11d0"/>
        <function-ref name="get" scoped="" ref="0xb72b12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72b1390"/>
        <function-ref name="set" scoped="" ref="0xb72b1470"/>
        <function-ref name="clr" scoped="" ref="0xb72b1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0xb72ab2f0" loc="85:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0xb72ab2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72ab4c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72ab5a8"/>
        <function-ref name="toggle" scoped="" ref="0xb72ab688"/>
        <function-ref name="isOutput" scoped="" ref="0xb72ab768"/>
        <function-ref name="get" scoped="" ref="0xb72ab848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72ab928"/>
        <function-ref name="set" scoped="" ref="0xb72aba08"/>
        <function-ref name="clr" scoped="" ref="0xb72abae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0xb72a64b0" loc="94:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0xb72a64b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72a6688"/>
        <function-ref name="isInput" scoped="" ref="0xb72a6768"/>
        <function-ref name="toggle" scoped="" ref="0xb72a6848"/>
        <function-ref name="isOutput" scoped="" ref="0xb72a6928"/>
        <function-ref name="get" scoped="" ref="0xb72a6a08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72a6ae8"/>
        <function-ref name="set" scoped="" ref="0xb72a6bc8"/>
        <function-ref name="clr" scoped="" ref="0xb72a6ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0xb72cd7f0" loc="44:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0xb72cd7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72cd9c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72cdaa8"/>
        <function-ref name="toggle" scoped="" ref="0xb72cdb88"/>
        <function-ref name="isOutput" scoped="" ref="0xb72cdc68"/>
        <function-ref name="get" scoped="" ref="0xb72cdd48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72cde28"/>
        <function-ref name="set" scoped="" ref="0xb72cdf08"/>
        <function-ref name="clr" scoped="" ref="0xb72c3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0xb72bece8" loc="55:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0xb72bece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72beec0"/>
        <function-ref name="isInput" scoped="" ref="0xb72bd010"/>
        <function-ref name="toggle" scoped="" ref="0xb72bd0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72bd1d0"/>
        <function-ref name="get" scoped="" ref="0xb72bd2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72bd390"/>
        <function-ref name="set" scoped="" ref="0xb72bd470"/>
        <function-ref name="clr" scoped="" ref="0xb72bd550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0xb72b64b0" loc="66:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0xb72b64b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72b6688"/>
        <function-ref name="isInput" scoped="" ref="0xb72b6768"/>
        <function-ref name="toggle" scoped="" ref="0xb72b6848"/>
        <function-ref name="isOutput" scoped="" ref="0xb72b6928"/>
        <function-ref name="get" scoped="" ref="0xb72b6a08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72b6ae8"/>
        <function-ref name="set" scoped="" ref="0xb72b6bc8"/>
        <function-ref name="clr" scoped="" ref="0xb72b6ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0xb72b0c08" loc="77:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0xb72b0c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72b0de0"/>
        <function-ref name="isInput" scoped="" ref="0xb72b0ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb72af010"/>
        <function-ref name="isOutput" scoped="" ref="0xb72af0f0"/>
        <function-ref name="get" scoped="" ref="0xb72af1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72af2b0"/>
        <function-ref name="set" scoped="" ref="0xb72af390"/>
        <function-ref name="clr" scoped="" ref="0xb72af470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0xb72a3900" loc="100:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0xb72a3900"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72a3ad8"/>
        <function-ref name="isInput" scoped="" ref="0xb72a3bb8"/>
        <function-ref name="toggle" scoped="" ref="0xb72a3c98"/>
        <function-ref name="isOutput" scoped="" ref="0xb72a3d78"/>
        <function-ref name="get" scoped="" ref="0xb72a3e58"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72a1010"/>
        <function-ref name="set" scoped="" ref="0xb72a10f0"/>
        <function-ref name="clr" scoped="" ref="0xb72a11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0xb72ae0a0" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0xb72ae0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72ae278"/>
        <function-ref name="isInput" scoped="" ref="0xb72ae358"/>
        <function-ref name="toggle" scoped="" ref="0xb72ae438"/>
        <function-ref name="isOutput" scoped="" ref="0xb72ae518"/>
        <function-ref name="get" scoped="" ref="0xb72ae5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72ae6d8"/>
        <function-ref name="set" scoped="" ref="0xb72ae7b8"/>
        <function-ref name="clr" scoped="" ref="0xb72ae898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0xb72b42f0" loc="69:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0xb72b42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72b44c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72b45a8"/>
        <function-ref name="toggle" scoped="" ref="0xb72b4688"/>
        <function-ref name="isOutput" scoped="" ref="0xb72b4768"/>
        <function-ref name="get" scoped="" ref="0xb72b4848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72b4928"/>
        <function-ref name="set" scoped="" ref="0xb72b4a08"/>
        <function-ref name="clr" scoped="" ref="0xb72b4ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0xb72c2670" loc="47:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0xb72c2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72c2848"/>
        <function-ref name="isInput" scoped="" ref="0xb72c2928"/>
        <function-ref name="toggle" scoped="" ref="0xb72c2a08"/>
        <function-ref name="isOutput" scoped="" ref="0xb72c2ae8"/>
        <function-ref name="get" scoped="" ref="0xb72c2bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72c2ca8"/>
        <function-ref name="set" scoped="" ref="0xb72c2d88"/>
        <function-ref name="clr" scoped="" ref="0xb72c2e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0xb72bbc88" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0xb72bbc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72bbe60"/>
        <function-ref name="isInput" scoped="" ref="0xb72ba010"/>
        <function-ref name="toggle" scoped="" ref="0xb72ba0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72ba1d0"/>
        <function-ref name="get" scoped="" ref="0xb72ba2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72ba390"/>
        <function-ref name="set" scoped="" ref="0xb72ba470"/>
        <function-ref name="clr" scoped="" ref="0xb72ba550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7277e48" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7277e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7276050"/>
        <function-ref name="isInput" scoped="" ref="0xb7276130"/>
        <function-ref name="toggle" scoped="" ref="0xb7276210"/>
        <function-ref name="isOutput" scoped="" ref="0xb72762f0"/>
        <function-ref name="get" scoped="" ref="0xb72763d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72764b0"/>
        <function-ref name="set" scoped="" ref="0xb7276590"/>
        <function-ref name="clr" scoped="" ref="0xb7276670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7275ac8" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7275ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7275ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7275d80"/>
        <function-ref name="toggle" scoped="" ref="0xb7275e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7274010"/>
        <function-ref name="get" scoped="" ref="0xb72740f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72741d0"/>
        <function-ref name="set" scoped="" ref="0xb72742b0"/>
        <function-ref name="clr" scoped="" ref="0xb7274390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7278b18" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7278b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7278cf0"/>
        <function-ref name="isInput" scoped="" ref="0xb7278dd0"/>
        <function-ref name="toggle" scoped="" ref="0xb7278eb0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7277010"/>
        <function-ref name="get" scoped="" ref="0xb72770f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72771d0"/>
        <function-ref name="set" scoped="" ref="0xb72772b0"/>
        <function-ref name="clr" scoped="" ref="0xb7277390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb72767d0" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb72767d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72769a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7276a88"/>
        <function-ref name="toggle" scoped="" ref="0xb7276b68"/>
        <function-ref name="isOutput" scoped="" ref="0xb7276c48"/>
        <function-ref name="get" scoped="" ref="0xb7276d28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7276e08"/>
        <function-ref name="set" scoped="" ref="0xb7276ee8"/>
        <function-ref name="clr" scoped="" ref="0xb7275010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb72744f0" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb72744f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72746c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72747a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7274888"/>
        <function-ref name="isOutput" scoped="" ref="0xb7274968"/>
        <function-ref name="get" scoped="" ref="0xb7274a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7274b28"/>
        <function-ref name="set" scoped="" ref="0xb7274c08"/>
        <function-ref name="clr" scoped="" ref="0xb7274ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb72774f0" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb72774f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72776c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72777a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7277888"/>
        <function-ref name="isOutput" scoped="" ref="0xb7277968"/>
        <function-ref name="get" scoped="" ref="0xb7277a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7277b28"/>
        <function-ref name="set" scoped="" ref="0xb7277c08"/>
        <function-ref name="clr" scoped="" ref="0xb7277ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7275170" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7275170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7275348"/>
        <function-ref name="isInput" scoped="" ref="0xb7275428"/>
        <function-ref name="toggle" scoped="" ref="0xb7275508"/>
        <function-ref name="isOutput" scoped="" ref="0xb72755e8"/>
        <function-ref name="get" scoped="" ref="0xb72756c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72757a8"/>
        <function-ref name="set" scoped="" ref="0xb7275888"/>
        <function-ref name="clr" scoped="" ref="0xb7275968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7274e48" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7274e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7273050"/>
        <function-ref name="isInput" scoped="" ref="0xb7273130"/>
        <function-ref name="toggle" scoped="" ref="0xb7273210"/>
        <function-ref name="isOutput" scoped="" ref="0xb72732f0"/>
        <function-ref name="get" scoped="" ref="0xb72733d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72734b0"/>
        <function-ref name="set" scoped="" ref="0xb7273590"/>
        <function-ref name="clr" scoped="" ref="0xb7273670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb681ad90" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb681ad90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6812010"/>
        <function-ref name="isInput" scoped="" ref="0xb68120f0"/>
        <function-ref name="toggle" scoped="" ref="0xb68121d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb68122b0"/>
        <function-ref name="get" scoped="" ref="0xb6812390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6812470"/>
        <function-ref name="set" scoped="" ref="0xb6812550"/>
        <function-ref name="clr" scoped="" ref="0xb6812630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb68117f8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb68117f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb68119d0"/>
        <function-ref name="isInput" scoped="" ref="0xb6811ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb6811b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb6811c70"/>
        <function-ref name="get" scoped="" ref="0xb6811d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6811e30"/>
        <function-ref name="set" scoped="" ref="0xb6811f10"/>
        <function-ref name="clr" scoped="" ref="0xb6810010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb680f228" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb680f228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb680f400"/>
        <function-ref name="isInput" scoped="" ref="0xb680f4e0"/>
        <function-ref name="toggle" scoped="" ref="0xb680f5c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb680f6a0"/>
        <function-ref name="get" scoped="" ref="0xb680f780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb680f860"/>
        <function-ref name="set" scoped="" ref="0xb680f940"/>
        <function-ref name="clr" scoped="" ref="0xb680fa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb680ec08" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb680ec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb680ede0"/>
        <function-ref name="isInput" scoped="" ref="0xb680eec0"/>
        <function-ref name="toggle" scoped="" ref="0xb680d010"/>
        <function-ref name="isOutput" scoped="" ref="0xb680d0f0"/>
        <function-ref name="get" scoped="" ref="0xb680d1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb680d2b0"/>
        <function-ref name="set" scoped="" ref="0xb680d390"/>
        <function-ref name="clr" scoped="" ref="0xb680d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb680c6c0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb680c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb680c898"/>
        <function-ref name="isInput" scoped="" ref="0xb680c978"/>
        <function-ref name="toggle" scoped="" ref="0xb680ca58"/>
        <function-ref name="isOutput" scoped="" ref="0xb680cb38"/>
        <function-ref name="get" scoped="" ref="0xb680cc18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb680ccf8"/>
        <function-ref name="set" scoped="" ref="0xb680cdd8"/>
        <function-ref name="clr" scoped="" ref="0xb680ceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb680a0b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb680a0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb680a288"/>
        <function-ref name="isInput" scoped="" ref="0xb680a368"/>
        <function-ref name="toggle" scoped="" ref="0xb680a448"/>
        <function-ref name="isOutput" scoped="" ref="0xb680a528"/>
        <function-ref name="get" scoped="" ref="0xb680a608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb680a6e8"/>
        <function-ref name="set" scoped="" ref="0xb680a7c8"/>
        <function-ref name="clr" scoped="" ref="0xb680a8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6808a88" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6808a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6808c60"/>
        <function-ref name="isInput" scoped="" ref="0xb6808d40"/>
        <function-ref name="toggle" scoped="" ref="0xb6808e20"/>
        <function-ref name="isOutput" scoped="" ref="0xb6808f00"/>
        <function-ref name="get" scoped="" ref="0xb6807010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb68070f0"/>
        <function-ref name="set" scoped="" ref="0xb68071d0"/>
        <function-ref name="clr" scoped="" ref="0xb68072b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6806538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6806538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6806710"/>
        <function-ref name="isInput" scoped="" ref="0xb68067f0"/>
        <function-ref name="toggle" scoped="" ref="0xb68068d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb68069b0"/>
        <function-ref name="get" scoped="" ref="0xb6806a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6806b70"/>
        <function-ref name="set" scoped="" ref="0xb6806c50"/>
        <function-ref name="clr" scoped="" ref="0xb6806d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb726f6b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb726f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb726f888"/>
        <function-ref name="isInput" scoped="" ref="0xb726f968"/>
        <function-ref name="toggle" scoped="" ref="0xb726fa48"/>
        <function-ref name="isOutput" scoped="" ref="0xb726fb28"/>
        <function-ref name="get" scoped="" ref="0xb726fc08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb726fce8"/>
        <function-ref name="set" scoped="" ref="0xb726fdc8"/>
        <function-ref name="clr" scoped="" ref="0xb726fea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb726c330" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb726c330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb726c508"/>
        <function-ref name="isInput" scoped="" ref="0xb726c5e8"/>
        <function-ref name="toggle" scoped="" ref="0xb726c6c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb726c7a8"/>
        <function-ref name="get" scoped="" ref="0xb726c888"/>
        <function-ref name="makeOutput" scoped="" ref="0xb726c968"/>
        <function-ref name="set" scoped="" ref="0xb726ca48"/>
        <function-ref name="clr" scoped="" ref="0xb726cb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb72703d8" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb72703d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72705b0"/>
        <function-ref name="isInput" scoped="" ref="0xb7270690"/>
        <function-ref name="toggle" scoped="" ref="0xb7270770"/>
        <function-ref name="isOutput" scoped="" ref="0xb7270850"/>
        <function-ref name="get" scoped="" ref="0xb7270930"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7270a10"/>
        <function-ref name="set" scoped="" ref="0xb7270af0"/>
        <function-ref name="clr" scoped="" ref="0xb7270bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb726e030" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb726e030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb726e208"/>
        <function-ref name="isInput" scoped="" ref="0xb726e2e8"/>
        <function-ref name="toggle" scoped="" ref="0xb726e3c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb726e4a8"/>
        <function-ref name="get" scoped="" ref="0xb726e588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb726e668"/>
        <function-ref name="set" scoped="" ref="0xb726e748"/>
        <function-ref name="clr" scoped="" ref="0xb726e828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb726cc88" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb726cc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb726ce60"/>
        <function-ref name="isInput" scoped="" ref="0xb726b010"/>
        <function-ref name="toggle" scoped="" ref="0xb726b0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb726b1d0"/>
        <function-ref name="get" scoped="" ref="0xb726b2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb726b390"/>
        <function-ref name="set" scoped="" ref="0xb726b470"/>
        <function-ref name="clr" scoped="" ref="0xb726b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7270d30" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7270d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7270f08"/>
        <function-ref name="isInput" scoped="" ref="0xb726f010"/>
        <function-ref name="toggle" scoped="" ref="0xb726f0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb726f1d0"/>
        <function-ref name="get" scoped="" ref="0xb726f2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb726f390"/>
        <function-ref name="set" scoped="" ref="0xb726f470"/>
        <function-ref name="clr" scoped="" ref="0xb726f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb726e988" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb726e988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb726eb60"/>
        <function-ref name="isInput" scoped="" ref="0xb726ec40"/>
        <function-ref name="toggle" scoped="" ref="0xb726ed20"/>
        <function-ref name="isOutput" scoped="" ref="0xb726ee00"/>
        <function-ref name="get" scoped="" ref="0xb726eee0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb726c010"/>
        <function-ref name="set" scoped="" ref="0xb726c0f0"/>
        <function-ref name="clr" scoped="" ref="0xb726c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb726b6b0" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb726b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb726b888"/>
        <function-ref name="isInput" scoped="" ref="0xb726b968"/>
        <function-ref name="toggle" scoped="" ref="0xb726ba48"/>
        <function-ref name="isOutput" scoped="" ref="0xb726bb28"/>
        <function-ref name="get" scoped="" ref="0xb726bc08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb726bce8"/>
        <function-ref name="set" scoped="" ref="0xb726bdc8"/>
        <function-ref name="clr" scoped="" ref="0xb726bea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67da938" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67da938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67dab10"/>
        <function-ref name="isInput" scoped="" ref="0xb67dabf0"/>
        <function-ref name="toggle" scoped="" ref="0xb67dacd0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67dadb0"/>
        <function-ref name="get" scoped="" ref="0xb67dae90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67d9010"/>
        <function-ref name="set" scoped="" ref="0xb67d90f0"/>
        <function-ref name="clr" scoped="" ref="0xb67d91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67d83b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67d83b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67d8588"/>
        <function-ref name="isInput" scoped="" ref="0xb67d8668"/>
        <function-ref name="toggle" scoped="" ref="0xb67d8748"/>
        <function-ref name="isOutput" scoped="" ref="0xb67d8828"/>
        <function-ref name="get" scoped="" ref="0xb67d8908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67d89e8"/>
        <function-ref name="set" scoped="" ref="0xb67d8ac8"/>
        <function-ref name="clr" scoped="" ref="0xb67d8ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67d7d70" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67d7d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67d6010"/>
        <function-ref name="isInput" scoped="" ref="0xb67d60f0"/>
        <function-ref name="toggle" scoped="" ref="0xb67d61d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67d62b0"/>
        <function-ref name="get" scoped="" ref="0xb67d6390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67d6470"/>
        <function-ref name="set" scoped="" ref="0xb67d6550"/>
        <function-ref name="clr" scoped="" ref="0xb67d6630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67d57f8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67d57f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67d59d0"/>
        <function-ref name="isInput" scoped="" ref="0xb67d5ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb67d5b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb67d5c70"/>
        <function-ref name="get" scoped="" ref="0xb67d5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67d5e30"/>
        <function-ref name="set" scoped="" ref="0xb67d5f10"/>
        <function-ref name="clr" scoped="" ref="0xb67d4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67d3228" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67d3228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67d3400"/>
        <function-ref name="isInput" scoped="" ref="0xb67d34e0"/>
        <function-ref name="toggle" scoped="" ref="0xb67d35c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67d36a0"/>
        <function-ref name="get" scoped="" ref="0xb67d3780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67d3860"/>
        <function-ref name="set" scoped="" ref="0xb67d3940"/>
        <function-ref name="clr" scoped="" ref="0xb67d3a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67d2c08" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67d2c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67d2de0"/>
        <function-ref name="isInput" scoped="" ref="0xb67d2ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb67d1010"/>
        <function-ref name="isOutput" scoped="" ref="0xb67d10f0"/>
        <function-ref name="get" scoped="" ref="0xb67d11d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67d12b0"/>
        <function-ref name="set" scoped="" ref="0xb67d1390"/>
        <function-ref name="clr" scoped="" ref="0xb67d1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67d06c0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67d06c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67d0898"/>
        <function-ref name="isInput" scoped="" ref="0xb67d0978"/>
        <function-ref name="toggle" scoped="" ref="0xb67d0a58"/>
        <function-ref name="isOutput" scoped="" ref="0xb67d0b38"/>
        <function-ref name="get" scoped="" ref="0xb67d0c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67d0cf8"/>
        <function-ref name="set" scoped="" ref="0xb67d0dd8"/>
        <function-ref name="clr" scoped="" ref="0xb67d0eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67ce0b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67ce0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67ce288"/>
        <function-ref name="isInput" scoped="" ref="0xb67ce368"/>
        <function-ref name="toggle" scoped="" ref="0xb67ce448"/>
        <function-ref name="isOutput" scoped="" ref="0xb67ce528"/>
        <function-ref name="get" scoped="" ref="0xb67ce608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67ce6e8"/>
        <function-ref name="set" scoped="" ref="0xb67ce7c8"/>
        <function-ref name="clr" scoped="" ref="0xb67ce8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7266170" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7266170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7266348"/>
        <function-ref name="isInput" scoped="" ref="0xb7266428"/>
        <function-ref name="toggle" scoped="" ref="0xb7266508"/>
        <function-ref name="isOutput" scoped="" ref="0xb72665e8"/>
        <function-ref name="get" scoped="" ref="0xb72666c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72667a8"/>
        <function-ref name="set" scoped="" ref="0xb7266888"/>
        <function-ref name="clr" scoped="" ref="0xb7266968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7265e48" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7265e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7264050"/>
        <function-ref name="isInput" scoped="" ref="0xb7264130"/>
        <function-ref name="toggle" scoped="" ref="0xb7264210"/>
        <function-ref name="isOutput" scoped="" ref="0xb72642f0"/>
        <function-ref name="get" scoped="" ref="0xb72643d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72644b0"/>
        <function-ref name="set" scoped="" ref="0xb7264590"/>
        <function-ref name="clr" scoped="" ref="0xb7264670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7268dc8" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7268dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7267010"/>
        <function-ref name="isInput" scoped="" ref="0xb72670f0"/>
        <function-ref name="toggle" scoped="" ref="0xb72671d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72672b0"/>
        <function-ref name="get" scoped="" ref="0xb7267390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7267470"/>
        <function-ref name="set" scoped="" ref="0xb7267550"/>
        <function-ref name="clr" scoped="" ref="0xb7267630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7266ac8" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7266ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7266ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7266d80"/>
        <function-ref name="toggle" scoped="" ref="0xb7266e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7265010"/>
        <function-ref name="get" scoped="" ref="0xb72650f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72651d0"/>
        <function-ref name="set" scoped="" ref="0xb72652b0"/>
        <function-ref name="clr" scoped="" ref="0xb7265390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb72647d0" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb72647d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72649a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7264a88"/>
        <function-ref name="toggle" scoped="" ref="0xb7264b68"/>
        <function-ref name="isOutput" scoped="" ref="0xb7264c48"/>
        <function-ref name="get" scoped="" ref="0xb7264d28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7264e08"/>
        <function-ref name="set" scoped="" ref="0xb7264ee8"/>
        <function-ref name="clr" scoped="" ref="0xb7263010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7267790" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7267790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7267968"/>
        <function-ref name="isInput" scoped="" ref="0xb7267a48"/>
        <function-ref name="toggle" scoped="" ref="0xb7267b28"/>
        <function-ref name="isOutput" scoped="" ref="0xb7267c08"/>
        <function-ref name="get" scoped="" ref="0xb7267ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7267dc8"/>
        <function-ref name="set" scoped="" ref="0xb7267ea8"/>
        <function-ref name="clr" scoped="" ref="0xb7266010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb72654f0" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb72654f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72656c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72657a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7265888"/>
        <function-ref name="isOutput" scoped="" ref="0xb7265968"/>
        <function-ref name="get" scoped="" ref="0xb7265a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7265b28"/>
        <function-ref name="set" scoped="" ref="0xb7265c08"/>
        <function-ref name="clr" scoped="" ref="0xb7265ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7263170" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7263170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7263348"/>
        <function-ref name="isInput" scoped="" ref="0xb7263428"/>
        <function-ref name="toggle" scoped="" ref="0xb7263508"/>
        <function-ref name="isOutput" scoped="" ref="0xb72635e8"/>
        <function-ref name="get" scoped="" ref="0xb72636c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72637a8"/>
        <function-ref name="set" scoped="" ref="0xb7263888"/>
        <function-ref name="clr" scoped="" ref="0xb7263968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67a2538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67a2538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67a2710"/>
        <function-ref name="isInput" scoped="" ref="0xb67a27f0"/>
        <function-ref name="toggle" scoped="" ref="0xb67a28d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67a29b0"/>
        <function-ref name="get" scoped="" ref="0xb67a2a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67a2b70"/>
        <function-ref name="set" scoped="" ref="0xb67a2c50"/>
        <function-ref name="clr" scoped="" ref="0xb67a2d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67a0010" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67a0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67a01e8"/>
        <function-ref name="isInput" scoped="" ref="0xb67a02c8"/>
        <function-ref name="toggle" scoped="" ref="0xb67a03a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb67a0488"/>
        <function-ref name="get" scoped="" ref="0xb67a0568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67a0648"/>
        <function-ref name="set" scoped="" ref="0xb67a0728"/>
        <function-ref name="clr" scoped="" ref="0xb67a0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb679f9e8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb679f9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb679fbc0"/>
        <function-ref name="isInput" scoped="" ref="0xb679fca0"/>
        <function-ref name="toggle" scoped="" ref="0xb679fd80"/>
        <function-ref name="isOutput" scoped="" ref="0xb679fe60"/>
        <function-ref name="get" scoped="" ref="0xb679e010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb679e0f0"/>
        <function-ref name="set" scoped="" ref="0xb679e1d0"/>
        <function-ref name="clr" scoped="" ref="0xb679e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb679d538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb679d538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb679d710"/>
        <function-ref name="isInput" scoped="" ref="0xb679d7f0"/>
        <function-ref name="toggle" scoped="" ref="0xb679d8d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb679d9b0"/>
        <function-ref name="get" scoped="" ref="0xb679da90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb679db70"/>
        <function-ref name="set" scoped="" ref="0xb679dc50"/>
        <function-ref name="clr" scoped="" ref="0xb679dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb679a010" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb679a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb679a1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb679a2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb679a3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb679a488"/>
        <function-ref name="get" scoped="" ref="0xb679a568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb679a648"/>
        <function-ref name="set" scoped="" ref="0xb679a728"/>
        <function-ref name="clr" scoped="" ref="0xb679a808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67999e8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67999e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6799bc0"/>
        <function-ref name="isInput" scoped="" ref="0xb6799ca0"/>
        <function-ref name="toggle" scoped="" ref="0xb6799d80"/>
        <function-ref name="isOutput" scoped="" ref="0xb6799e60"/>
        <function-ref name="get" scoped="" ref="0xb6798010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67980f0"/>
        <function-ref name="set" scoped="" ref="0xb67981d0"/>
        <function-ref name="clr" scoped="" ref="0xb67982b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6797538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6797538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6797710"/>
        <function-ref name="isInput" scoped="" ref="0xb67977f0"/>
        <function-ref name="toggle" scoped="" ref="0xb67978d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67979b0"/>
        <function-ref name="get" scoped="" ref="0xb6797a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6797b70"/>
        <function-ref name="set" scoped="" ref="0xb6797c50"/>
        <function-ref name="clr" scoped="" ref="0xb6797d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6795010" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6795010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67951e8"/>
        <function-ref name="isInput" scoped="" ref="0xb67952c8"/>
        <function-ref name="toggle" scoped="" ref="0xb67953a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6795488"/>
        <function-ref name="get" scoped="" ref="0xb6795568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6795648"/>
        <function-ref name="set" scoped="" ref="0xb6795728"/>
        <function-ref name="clr" scoped="" ref="0xb6795808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb725e9e8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb725e9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb725ebc0"/>
        <function-ref name="isInput" scoped="" ref="0xb725eca0"/>
        <function-ref name="toggle" scoped="" ref="0xb725ed80"/>
        <function-ref name="isOutput" scoped="" ref="0xb725ee60"/>
        <function-ref name="get" scoped="" ref="0xb725d010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb725d0f0"/>
        <function-ref name="set" scoped="" ref="0xb725d1d0"/>
        <function-ref name="clr" scoped="" ref="0xb725d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb725c790" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb725c790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb725c968"/>
        <function-ref name="isInput" scoped="" ref="0xb725ca48"/>
        <function-ref name="toggle" scoped="" ref="0xb725cb28"/>
        <function-ref name="isOutput" scoped="" ref="0xb725cc08"/>
        <function-ref name="get" scoped="" ref="0xb725cce8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb725cdc8"/>
        <function-ref name="set" scoped="" ref="0xb725cea8"/>
        <function-ref name="clr" scoped="" ref="0xb725b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb725f6f8" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb725f6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb725f8d0"/>
        <function-ref name="isInput" scoped="" ref="0xb725f9b0"/>
        <function-ref name="toggle" scoped="" ref="0xb725fa90"/>
        <function-ref name="isOutput" scoped="" ref="0xb725fb70"/>
        <function-ref name="get" scoped="" ref="0xb725fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb725fd30"/>
        <function-ref name="set" scoped="" ref="0xb725fe10"/>
        <function-ref name="clr" scoped="" ref="0xb725fef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb725d410" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb725d410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb725d5e8"/>
        <function-ref name="isInput" scoped="" ref="0xb725d6c8"/>
        <function-ref name="toggle" scoped="" ref="0xb725d7a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb725d888"/>
        <function-ref name="get" scoped="" ref="0xb725d968"/>
        <function-ref name="makeOutput" scoped="" ref="0xb725da48"/>
        <function-ref name="set" scoped="" ref="0xb725db28"/>
        <function-ref name="clr" scoped="" ref="0xb725dc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb725b170" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb725b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb725b348"/>
        <function-ref name="isInput" scoped="" ref="0xb725b428"/>
        <function-ref name="toggle" scoped="" ref="0xb725b508"/>
        <function-ref name="isOutput" scoped="" ref="0xb725b5e8"/>
        <function-ref name="get" scoped="" ref="0xb725b6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb725b7a8"/>
        <function-ref name="set" scoped="" ref="0xb725b888"/>
        <function-ref name="clr" scoped="" ref="0xb725b968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb725e090" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb725e090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb725e268"/>
        <function-ref name="isInput" scoped="" ref="0xb725e348"/>
        <function-ref name="toggle" scoped="" ref="0xb725e428"/>
        <function-ref name="isOutput" scoped="" ref="0xb725e508"/>
        <function-ref name="get" scoped="" ref="0xb725e5e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb725e6c8"/>
        <function-ref name="set" scoped="" ref="0xb725e7a8"/>
        <function-ref name="clr" scoped="" ref="0xb725e888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb725dd68" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb725dd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb725c010"/>
        <function-ref name="isInput" scoped="" ref="0xb725c0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb725c1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb725c2b0"/>
        <function-ref name="get" scoped="" ref="0xb725c390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb725c470"/>
        <function-ref name="set" scoped="" ref="0xb725c550"/>
        <function-ref name="clr" scoped="" ref="0xb725c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb725bac8" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb725bac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb725bca0"/>
        <function-ref name="isInput" scoped="" ref="0xb725bd80"/>
        <function-ref name="toggle" scoped="" ref="0xb725be60"/>
        <function-ref name="isOutput" scoped="" ref="0xb725a010"/>
        <function-ref name="get" scoped="" ref="0xb725a0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb725a1d0"/>
        <function-ref name="set" scoped="" ref="0xb725a2b0"/>
        <function-ref name="clr" scoped="" ref="0xb725a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6769418" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6769418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67695f0"/>
        <function-ref name="isInput" scoped="" ref="0xb67696d0"/>
        <function-ref name="toggle" scoped="" ref="0xb67697b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6769890"/>
        <function-ref name="get" scoped="" ref="0xb6769970"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6769a50"/>
        <function-ref name="set" scoped="" ref="0xb6769b30"/>
        <function-ref name="clr" scoped="" ref="0xb6769c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6768de0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6768de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6767010"/>
        <function-ref name="isInput" scoped="" ref="0xb67670f0"/>
        <function-ref name="toggle" scoped="" ref="0xb67671d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67672b0"/>
        <function-ref name="get" scoped="" ref="0xb6767390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6767470"/>
        <function-ref name="set" scoped="" ref="0xb6767550"/>
        <function-ref name="clr" scoped="" ref="0xb6767630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67667f8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67667f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67669d0"/>
        <function-ref name="isInput" scoped="" ref="0xb6766ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb6766b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb6766c70"/>
        <function-ref name="get" scoped="" ref="0xb6766d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6766e30"/>
        <function-ref name="set" scoped="" ref="0xb6766f10"/>
        <function-ref name="clr" scoped="" ref="0xb6765010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6764228" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6764228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6764400"/>
        <function-ref name="isInput" scoped="" ref="0xb67644e0"/>
        <function-ref name="toggle" scoped="" ref="0xb67645c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67646a0"/>
        <function-ref name="get" scoped="" ref="0xb6764780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6764860"/>
        <function-ref name="set" scoped="" ref="0xb6764940"/>
        <function-ref name="clr" scoped="" ref="0xb6764a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6763c08" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6763c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6763de0"/>
        <function-ref name="isInput" scoped="" ref="0xb6763ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb6762010"/>
        <function-ref name="isOutput" scoped="" ref="0xb67620f0"/>
        <function-ref name="get" scoped="" ref="0xb67621d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67622b0"/>
        <function-ref name="set" scoped="" ref="0xb6762390"/>
        <function-ref name="clr" scoped="" ref="0xb6762470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67616c0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67616c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6761898"/>
        <function-ref name="isInput" scoped="" ref="0xb6761978"/>
        <function-ref name="toggle" scoped="" ref="0xb6761a58"/>
        <function-ref name="isOutput" scoped="" ref="0xb6761b38"/>
        <function-ref name="get" scoped="" ref="0xb6761c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6761cf8"/>
        <function-ref name="set" scoped="" ref="0xb6761dd8"/>
        <function-ref name="clr" scoped="" ref="0xb6761eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb675f0b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb675f0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb675f288"/>
        <function-ref name="isInput" scoped="" ref="0xb675f368"/>
        <function-ref name="toggle" scoped="" ref="0xb675f448"/>
        <function-ref name="isOutput" scoped="" ref="0xb675f528"/>
        <function-ref name="get" scoped="" ref="0xb675f608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb675f6e8"/>
        <function-ref name="set" scoped="" ref="0xb675f7c8"/>
        <function-ref name="clr" scoped="" ref="0xb675f8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb675ea88" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb675ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb675ec60"/>
        <function-ref name="isInput" scoped="" ref="0xb675ed40"/>
        <function-ref name="toggle" scoped="" ref="0xb675ee20"/>
        <function-ref name="isOutput" scoped="" ref="0xb675ef00"/>
        <function-ref name="get" scoped="" ref="0xb675d010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb675d0f0"/>
        <function-ref name="set" scoped="" ref="0xb675d1d0"/>
        <function-ref name="clr" scoped="" ref="0xb675d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7255410" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7255410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72555e8"/>
        <function-ref name="isInput" scoped="" ref="0xb72556c8"/>
        <function-ref name="toggle" scoped="" ref="0xb72557a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7255888"/>
        <function-ref name="get" scoped="" ref="0xb7255968"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7255a48"/>
        <function-ref name="set" scoped="" ref="0xb7255b28"/>
        <function-ref name="clr" scoped="" ref="0xb7255c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7253170" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7253170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7253348"/>
        <function-ref name="isInput" scoped="" ref="0xb7253428"/>
        <function-ref name="toggle" scoped="" ref="0xb7253508"/>
        <function-ref name="isOutput" scoped="" ref="0xb72535e8"/>
        <function-ref name="get" scoped="" ref="0xb72536c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72537a8"/>
        <function-ref name="set" scoped="" ref="0xb7253888"/>
        <function-ref name="clr" scoped="" ref="0xb7253968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7256128" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7256128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7256300"/>
        <function-ref name="isInput" scoped="" ref="0xb72563e0"/>
        <function-ref name="toggle" scoped="" ref="0xb72564c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72565a0"/>
        <function-ref name="get" scoped="" ref="0xb7256680"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7256760"/>
        <function-ref name="set" scoped="" ref="0xb7256840"/>
        <function-ref name="clr" scoped="" ref="0xb7256920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7255d68" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7255d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7254010"/>
        <function-ref name="isInput" scoped="" ref="0xb72540f0"/>
        <function-ref name="toggle" scoped="" ref="0xb72541d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72542b0"/>
        <function-ref name="get" scoped="" ref="0xb7254390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7254470"/>
        <function-ref name="set" scoped="" ref="0xb7254550"/>
        <function-ref name="clr" scoped="" ref="0xb7254630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7253ac8" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7253ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7253ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7253d80"/>
        <function-ref name="toggle" scoped="" ref="0xb7253e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7252010"/>
        <function-ref name="get" scoped="" ref="0xb72520f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72521d0"/>
        <function-ref name="set" scoped="" ref="0xb72522b0"/>
        <function-ref name="clr" scoped="" ref="0xb7252390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7256a80" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7256a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7256c58"/>
        <function-ref name="isInput" scoped="" ref="0xb7256d38"/>
        <function-ref name="toggle" scoped="" ref="0xb7256e18"/>
        <function-ref name="isOutput" scoped="" ref="0xb7256ef8"/>
        <function-ref name="get" scoped="" ref="0xb7255010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72550f0"/>
        <function-ref name="set" scoped="" ref="0xb72551d0"/>
        <function-ref name="clr" scoped="" ref="0xb72552b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7254790" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7254790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7254968"/>
        <function-ref name="isInput" scoped="" ref="0xb7254a48"/>
        <function-ref name="toggle" scoped="" ref="0xb7254b28"/>
        <function-ref name="isOutput" scoped="" ref="0xb7254c08"/>
        <function-ref name="get" scoped="" ref="0xb7254ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7254dc8"/>
        <function-ref name="set" scoped="" ref="0xb7254ea8"/>
        <function-ref name="clr" scoped="" ref="0xb7253010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb72524f0" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb72524f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72526c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72527a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7252888"/>
        <function-ref name="isOutput" scoped="" ref="0xb7252968"/>
        <function-ref name="get" scoped="" ref="0xb7252a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7252b28"/>
        <function-ref name="set" scoped="" ref="0xb7252c08"/>
        <function-ref name="clr" scoped="" ref="0xb7252ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6735de8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6735de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6731010"/>
        <function-ref name="isInput" scoped="" ref="0xb67310f0"/>
        <function-ref name="toggle" scoped="" ref="0xb67311d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67312b0"/>
        <function-ref name="get" scoped="" ref="0xb6731390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6731470"/>
        <function-ref name="set" scoped="" ref="0xb6731550"/>
        <function-ref name="clr" scoped="" ref="0xb6731630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67307f8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67307f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67309d0"/>
        <function-ref name="isInput" scoped="" ref="0xb6730ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb6730b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb6730c70"/>
        <function-ref name="get" scoped="" ref="0xb6730d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6730e30"/>
        <function-ref name="set" scoped="" ref="0xb6730f10"/>
        <function-ref name="clr" scoped="" ref="0xb672f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb672e228" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb672e228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb672e400"/>
        <function-ref name="isInput" scoped="" ref="0xb672e4e0"/>
        <function-ref name="toggle" scoped="" ref="0xb672e5c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb672e6a0"/>
        <function-ref name="get" scoped="" ref="0xb672e780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb672e860"/>
        <function-ref name="set" scoped="" ref="0xb672e940"/>
        <function-ref name="clr" scoped="" ref="0xb672ea20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb672cc08" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb672cc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb672cde0"/>
        <function-ref name="isInput" scoped="" ref="0xb672cec0"/>
        <function-ref name="toggle" scoped="" ref="0xb672b010"/>
        <function-ref name="isOutput" scoped="" ref="0xb672b0f0"/>
        <function-ref name="get" scoped="" ref="0xb672b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb672b2b0"/>
        <function-ref name="set" scoped="" ref="0xb672b390"/>
        <function-ref name="clr" scoped="" ref="0xb672b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb672a6c0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb672a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb672a898"/>
        <function-ref name="isInput" scoped="" ref="0xb672a978"/>
        <function-ref name="toggle" scoped="" ref="0xb672aa58"/>
        <function-ref name="isOutput" scoped="" ref="0xb672ab38"/>
        <function-ref name="get" scoped="" ref="0xb672ac18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb672acf8"/>
        <function-ref name="set" scoped="" ref="0xb672add8"/>
        <function-ref name="clr" scoped="" ref="0xb672aeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67280b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67280b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6728288"/>
        <function-ref name="isInput" scoped="" ref="0xb6728368"/>
        <function-ref name="toggle" scoped="" ref="0xb6728448"/>
        <function-ref name="isOutput" scoped="" ref="0xb6728528"/>
        <function-ref name="get" scoped="" ref="0xb6728608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67286e8"/>
        <function-ref name="set" scoped="" ref="0xb67287c8"/>
        <function-ref name="clr" scoped="" ref="0xb67288a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6727a88" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6727a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6727c60"/>
        <function-ref name="isInput" scoped="" ref="0xb6727d40"/>
        <function-ref name="toggle" scoped="" ref="0xb6727e20"/>
        <function-ref name="isOutput" scoped="" ref="0xb6727f00"/>
        <function-ref name="get" scoped="" ref="0xb6726010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67260f0"/>
        <function-ref name="set" scoped="" ref="0xb67261d0"/>
        <function-ref name="clr" scoped="" ref="0xb67262b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6725538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6725538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6725710"/>
        <function-ref name="isInput" scoped="" ref="0xb67257f0"/>
        <function-ref name="toggle" scoped="" ref="0xb67258d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67259b0"/>
        <function-ref name="get" scoped="" ref="0xb6725a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6725b70"/>
        <function-ref name="set" scoped="" ref="0xb6725c50"/>
        <function-ref name="clr" scoped="" ref="0xb6725d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb724ee48" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb724ee48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb724d050"/>
        <function-ref name="isInput" scoped="" ref="0xb724d130"/>
        <function-ref name="toggle" scoped="" ref="0xb724d210"/>
        <function-ref name="isOutput" scoped="" ref="0xb724d2f0"/>
        <function-ref name="get" scoped="" ref="0xb724d3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb724d4b0"/>
        <function-ref name="set" scoped="" ref="0xb724d590"/>
        <function-ref name="clr" scoped="" ref="0xb724d670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb724cac8" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb724cac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb724cca0"/>
        <function-ref name="isInput" scoped="" ref="0xb724cd80"/>
        <function-ref name="toggle" scoped="" ref="0xb724ce60"/>
        <function-ref name="isOutput" scoped="" ref="0xb724a010"/>
        <function-ref name="get" scoped="" ref="0xb724a0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb724a1d0"/>
        <function-ref name="set" scoped="" ref="0xb724a2b0"/>
        <function-ref name="clr" scoped="" ref="0xb724a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb724fb00" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb724fb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb724fcd8"/>
        <function-ref name="isInput" scoped="" ref="0xb724fdb8"/>
        <function-ref name="toggle" scoped="" ref="0xb724fe98"/>
        <function-ref name="isOutput" scoped="" ref="0xb724e010"/>
        <function-ref name="get" scoped="" ref="0xb724e0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb724e1d0"/>
        <function-ref name="set" scoped="" ref="0xb724e2b0"/>
        <function-ref name="clr" scoped="" ref="0xb724e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb724d7d0" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb724d7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb724d9a8"/>
        <function-ref name="isInput" scoped="" ref="0xb724da88"/>
        <function-ref name="toggle" scoped="" ref="0xb724db68"/>
        <function-ref name="isOutput" scoped="" ref="0xb724dc48"/>
        <function-ref name="get" scoped="" ref="0xb724dd28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb724de08"/>
        <function-ref name="set" scoped="" ref="0xb724dee8"/>
        <function-ref name="clr" scoped="" ref="0xb724c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb724a4f0" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb724a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb724a6c8"/>
        <function-ref name="isInput" scoped="" ref="0xb724a7a8"/>
        <function-ref name="toggle" scoped="" ref="0xb724a888"/>
        <function-ref name="isOutput" scoped="" ref="0xb724a968"/>
        <function-ref name="get" scoped="" ref="0xb724aa48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb724ab28"/>
        <function-ref name="set" scoped="" ref="0xb724ac08"/>
        <function-ref name="clr" scoped="" ref="0xb724ace8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb724e4f0" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb724e4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb724e6c8"/>
        <function-ref name="isInput" scoped="" ref="0xb724e7a8"/>
        <function-ref name="toggle" scoped="" ref="0xb724e888"/>
        <function-ref name="isOutput" scoped="" ref="0xb724e968"/>
        <function-ref name="get" scoped="" ref="0xb724ea48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb724eb28"/>
        <function-ref name="set" scoped="" ref="0xb724ec08"/>
        <function-ref name="clr" scoped="" ref="0xb724ece8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb724c170" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb724c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb724c348"/>
        <function-ref name="isInput" scoped="" ref="0xb724c428"/>
        <function-ref name="toggle" scoped="" ref="0xb724c508"/>
        <function-ref name="isOutput" scoped="" ref="0xb724c5e8"/>
        <function-ref name="get" scoped="" ref="0xb724c6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb724c7a8"/>
        <function-ref name="set" scoped="" ref="0xb724c888"/>
        <function-ref name="clr" scoped="" ref="0xb724c968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb724ae48" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb724ae48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7249050"/>
        <function-ref name="isInput" scoped="" ref="0xb7249130"/>
        <function-ref name="toggle" scoped="" ref="0xb7249210"/>
        <function-ref name="isOutput" scoped="" ref="0xb72492f0"/>
        <function-ref name="get" scoped="" ref="0xb72493d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72494b0"/>
        <function-ref name="set" scoped="" ref="0xb7249590"/>
        <function-ref name="clr" scoped="" ref="0xb7249670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb66f9938" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb66f9938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66f9b10"/>
        <function-ref name="isInput" scoped="" ref="0xb66f9bf0"/>
        <function-ref name="toggle" scoped="" ref="0xb66f9cd0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66f9db0"/>
        <function-ref name="get" scoped="" ref="0xb66f9e90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66f8010"/>
        <function-ref name="set" scoped="" ref="0xb66f80f0"/>
        <function-ref name="clr" scoped="" ref="0xb66f81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb66f73b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb66f73b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66f7588"/>
        <function-ref name="isInput" scoped="" ref="0xb66f7668"/>
        <function-ref name="toggle" scoped="" ref="0xb66f7748"/>
        <function-ref name="isOutput" scoped="" ref="0xb66f7828"/>
        <function-ref name="get" scoped="" ref="0xb66f7908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66f79e8"/>
        <function-ref name="set" scoped="" ref="0xb66f7ac8"/>
        <function-ref name="clr" scoped="" ref="0xb66f7ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb66f6d70" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb66f6d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66f5010"/>
        <function-ref name="isInput" scoped="" ref="0xb66f50f0"/>
        <function-ref name="toggle" scoped="" ref="0xb66f51d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66f52b0"/>
        <function-ref name="get" scoped="" ref="0xb66f5390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66f5470"/>
        <function-ref name="set" scoped="" ref="0xb66f5550"/>
        <function-ref name="clr" scoped="" ref="0xb66f5630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb66f47f8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb66f47f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66f49d0"/>
        <function-ref name="isInput" scoped="" ref="0xb66f4ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb66f4b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb66f4c70"/>
        <function-ref name="get" scoped="" ref="0xb66f4d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66f4e30"/>
        <function-ref name="set" scoped="" ref="0xb66f4f10"/>
        <function-ref name="clr" scoped="" ref="0xb66f3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb66f2228" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb66f2228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66f2400"/>
        <function-ref name="isInput" scoped="" ref="0xb66f24e0"/>
        <function-ref name="toggle" scoped="" ref="0xb66f25c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66f26a0"/>
        <function-ref name="get" scoped="" ref="0xb66f2780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66f2860"/>
        <function-ref name="set" scoped="" ref="0xb66f2940"/>
        <function-ref name="clr" scoped="" ref="0xb66f2a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb66f1c08" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb66f1c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66f1de0"/>
        <function-ref name="isInput" scoped="" ref="0xb66f1ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb66f0010"/>
        <function-ref name="isOutput" scoped="" ref="0xb66f00f0"/>
        <function-ref name="get" scoped="" ref="0xb66f01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66f02b0"/>
        <function-ref name="set" scoped="" ref="0xb66f0390"/>
        <function-ref name="clr" scoped="" ref="0xb66f0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb66ef6c0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb66ef6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66ef898"/>
        <function-ref name="isInput" scoped="" ref="0xb66ef978"/>
        <function-ref name="toggle" scoped="" ref="0xb66efa58"/>
        <function-ref name="isOutput" scoped="" ref="0xb66efb38"/>
        <function-ref name="get" scoped="" ref="0xb66efc18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66efcf8"/>
        <function-ref name="set" scoped="" ref="0xb66efdd8"/>
        <function-ref name="clr" scoped="" ref="0xb66efeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb66ed0b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb66ed0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66ed288"/>
        <function-ref name="isInput" scoped="" ref="0xb66ed368"/>
        <function-ref name="toggle" scoped="" ref="0xb66ed448"/>
        <function-ref name="isOutput" scoped="" ref="0xb66ed528"/>
        <function-ref name="get" scoped="" ref="0xb66ed608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66ed6e8"/>
        <function-ref name="set" scoped="" ref="0xb66ed7c8"/>
        <function-ref name="clr" scoped="" ref="0xb66ed8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7245010" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7245010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72451e8"/>
        <function-ref name="isInput" scoped="" ref="0xb72452c8"/>
        <function-ref name="toggle" scoped="" ref="0xb72453a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7245488"/>
        <function-ref name="get" scoped="" ref="0xb7245568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7245648"/>
        <function-ref name="set" scoped="" ref="0xb7245728"/>
        <function-ref name="clr" scoped="" ref="0xb7245808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb72377b8" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb72377b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7237990"/>
        <function-ref name="isInput" scoped="" ref="0xb7237a70"/>
        <function-ref name="toggle" scoped="" ref="0xb7237b50"/>
        <function-ref name="isOutput" scoped="" ref="0xb7237c30"/>
        <function-ref name="get" scoped="" ref="0xb7237d10"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7237df0"/>
        <function-ref name="set" scoped="" ref="0xb7237ed0"/>
        <function-ref name="clr" scoped="" ref="0xb7236010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7233010" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7233010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72331e8"/>
        <function-ref name="isInput" scoped="" ref="0xb72332c8"/>
        <function-ref name="toggle" scoped="" ref="0xb72333a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7233488"/>
        <function-ref name="get" scoped="" ref="0xb7233568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7233648"/>
        <function-ref name="set" scoped="" ref="0xb7233728"/>
        <function-ref name="clr" scoped="" ref="0xb7233808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb72317b8" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb72317b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7231990"/>
        <function-ref name="isInput" scoped="" ref="0xb7231a70"/>
        <function-ref name="toggle" scoped="" ref="0xb7231b50"/>
        <function-ref name="isOutput" scoped="" ref="0xb7231c30"/>
        <function-ref name="get" scoped="" ref="0xb7231d10"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7231df0"/>
        <function-ref name="set" scoped="" ref="0xb7231ed0"/>
        <function-ref name="clr" scoped="" ref="0xb7230010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb722e010" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb722e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb722e1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb722e2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb722e3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb722e488"/>
        <function-ref name="get" scoped="" ref="0xb722e568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb722e648"/>
        <function-ref name="set" scoped="" ref="0xb722e728"/>
        <function-ref name="clr" scoped="" ref="0xb722e808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb722b7b8" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb722b7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb722b990"/>
        <function-ref name="isInput" scoped="" ref="0xb722ba70"/>
        <function-ref name="toggle" scoped="" ref="0xb722bb50"/>
        <function-ref name="isOutput" scoped="" ref="0xb722bc30"/>
        <function-ref name="get" scoped="" ref="0xb722bd10"/>
        <function-ref name="makeOutput" scoped="" ref="0xb722bdf0"/>
        <function-ref name="set" scoped="" ref="0xb722bed0"/>
        <function-ref name="clr" scoped="" ref="0xb722a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7228080" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7228080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7228258"/>
        <function-ref name="isInput" scoped="" ref="0xb7228338"/>
        <function-ref name="toggle" scoped="" ref="0xb7228418"/>
        <function-ref name="isOutput" scoped="" ref="0xb72284f8"/>
        <function-ref name="get" scoped="" ref="0xb72285d8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72286b8"/>
        <function-ref name="set" scoped="" ref="0xb7228798"/>
        <function-ref name="clr" scoped="" ref="0xb7228878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7226840" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7226840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7226a18"/>
        <function-ref name="isInput" scoped="" ref="0xb7226af8"/>
        <function-ref name="toggle" scoped="" ref="0xb7226bd8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7226cb8"/>
        <function-ref name="get" scoped="" ref="0xb7226d98"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7226e78"/>
        <function-ref name="set" scoped="" ref="0xb7224010"/>
        <function-ref name="clr" scoped="" ref="0xb72240f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb72220b0" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb72220b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7222288"/>
        <function-ref name="isInput" scoped="" ref="0xb7222368"/>
        <function-ref name="toggle" scoped="" ref="0xb7222448"/>
        <function-ref name="isOutput" scoped="" ref="0xb7222528"/>
        <function-ref name="get" scoped="" ref="0xb7222608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72226e8"/>
        <function-ref name="set" scoped="" ref="0xb72227c8"/>
        <function-ref name="clr" scoped="" ref="0xb72228a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7220880" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7220880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7220a58"/>
        <function-ref name="isInput" scoped="" ref="0xb7220b38"/>
        <function-ref name="toggle" scoped="" ref="0xb7220c18"/>
        <function-ref name="isOutput" scoped="" ref="0xb7220cf8"/>
        <function-ref name="get" scoped="" ref="0xb7220dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7220eb8"/>
        <function-ref name="set" scoped="" ref="0xb721f010"/>
        <function-ref name="clr" scoped="" ref="0xb721f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb721c0b0" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb721c0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb721c288"/>
        <function-ref name="isInput" scoped="" ref="0xb721c368"/>
        <function-ref name="toggle" scoped="" ref="0xb721c448"/>
        <function-ref name="isOutput" scoped="" ref="0xb721c528"/>
        <function-ref name="get" scoped="" ref="0xb721c608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb721c6e8"/>
        <function-ref name="set" scoped="" ref="0xb721c7c8"/>
        <function-ref name="clr" scoped="" ref="0xb721c8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb721a880" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb721a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb721aa58"/>
        <function-ref name="isInput" scoped="" ref="0xb721ab38"/>
        <function-ref name="toggle" scoped="" ref="0xb721ac18"/>
        <function-ref name="isOutput" scoped="" ref="0xb721acf8"/>
        <function-ref name="get" scoped="" ref="0xb721add8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb721aeb8"/>
        <function-ref name="set" scoped="" ref="0xb7219010"/>
        <function-ref name="clr" scoped="" ref="0xb72190f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb72170b0" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb72170b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7217288"/>
        <function-ref name="isInput" scoped="" ref="0xb7217368"/>
        <function-ref name="toggle" scoped="" ref="0xb7217448"/>
        <function-ref name="isOutput" scoped="" ref="0xb7217528"/>
        <function-ref name="get" scoped="" ref="0xb7217608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72176e8"/>
        <function-ref name="set" scoped="" ref="0xb72177c8"/>
        <function-ref name="clr" scoped="" ref="0xb72178a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7214880" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7214880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7214a58"/>
        <function-ref name="isInput" scoped="" ref="0xb7214b38"/>
        <function-ref name="toggle" scoped="" ref="0xb7214c18"/>
        <function-ref name="isOutput" scoped="" ref="0xb7214cf8"/>
        <function-ref name="get" scoped="" ref="0xb7214dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7214eb8"/>
        <function-ref name="set" scoped="" ref="0xb7213010"/>
        <function-ref name="clr" scoped="" ref="0xb72130f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb71f5bf8" loc="61:/home/wsn/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb71f5bf8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb74017d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb74017d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb71f5dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xb71f4010" loc="62:/home/wsn/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb71f4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb71f41e8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb71f42c8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb71f43a8"/>
        <function-ref name="actualMicro" scoped="" ref="0xb71f4488"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb71f4568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0xb71e3808" loc="60:/home/wsn/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb71e3808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb71e39e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xb72dea28" loc="57:/home/wsn/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb72dea28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb72dec00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0xb71e3400" loc="59:/home/wsn/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb71e3400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb71e35d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0xb72dedc0" loc="58:/home/wsn/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb72dedc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb71e3010"/>
        <function-ref name="taskLoop" scoped="" ref="0xb71e30f0"/>
        <function-ref name="runNextTask" scoped="" ref="0xb71e31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xb73e0d58" loc="48:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xb73e0d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb73e7010"/>
        <function-ref name="runTask" scoped="" ref="0xb73e70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xb73e55f0" loc="47:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb73e55f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb73e57c8"/>
        <function-ref name="taskLoop" scoped="" ref="0xb73e58a8"/>
        <function-ref name="runNextTask" scoped="" ref="0xb73e5988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xb736b100" loc="56:/home/wsn/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xb736b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb736b2d8"/>
        <function-ref name="runTask" scoped="" ref="0xb736b3b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0xb736bd68" loc="57:/home/wsn/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xb736bd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xb736a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xb736c8a8" loc="55:/home/wsn/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb736c8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb736ca80"/>
        <function-ref name="taskLoop" scoped="" ref="0xb736cb60"/>
        <function-ref name="runNextTask" scoped="" ref="0xb736cc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0xb7357218" loc="88:/home/wsn/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0xb7357218"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xb73573f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0xb73e6728" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xb73e6728"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xb73e6900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0xb7359420" loc="85:/home/wsn/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xb7359420"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb73595f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0xb71bd980" loc="10:LEDTestC.nc">
      <component-ref qname="LEDTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb71bd980"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb71bdb58"/>
        <function-ref name="stopDone" scoped="" ref="0xb71bdc38"/>
        <function-ref name="start" scoped="" ref="0xb71bdd18"/>
        <function-ref name="stop" scoped="" ref="0xb71bddf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0xb71d9e40" loc="6:LEDTestC.nc">
      <component-ref qname="LEDTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb71d9e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb71d3050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xb71c8380" loc="8:LEDTestC.nc">
      <component-ref qname="LEDTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb71c8380"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb71c8558"/>
        <function-ref name="getPayload" scoped="" ref="0xb71c8638"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb71c8718"/>
        <function-ref name="cancel" scoped="" ref="0xb71c87f8"/>
        <function-ref name="sendDone" scoped="" ref="0xb71c88d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0xb71cfd50" loc="7:LEDTestC.nc">
      <component-ref qname="LEDTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb71cfd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb71cff28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb71c3a18" loc="9:LEDTestC.nc">
      <component-ref qname="LEDTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb71c3a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb71c3bf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb71c3cd0"/>
        <function-ref name="led1On" scoped="" ref="0xb71c3db0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb71c3e90"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb71d1010"/>
        <function-ref name="get" scoped="" ref="0xb71d10f0"/>
        <function-ref name="led1Off" scoped="" ref="0xb71d11d0"/>
        <function-ref name="led2Off" scoped="" ref="0xb71d1550"/>
        <function-ref name="set" scoped="" ref="0xb71d12b0"/>
        <function-ref name="led0On" scoped="" ref="0xb71d1390"/>
        <function-ref name="led2On" scoped="" ref="0xb71d1470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb71d4c00" loc="5:LEDTestC.nc">
      <component-ref qname="LEDTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb71d4c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7398508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb71d9730"/>
        <function-ref name="fired" scoped="" ref="0xb71da9b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb71d90f0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb71dae60"/>
        <function-ref name="getdt" scoped="" ref="0xb71d9be0"/>
        <function-ref name="gett0" scoped="" ref="0xb71d9988"/>
        <function-ref name="isRunning" scoped="" ref="0xb71dac08"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb71da258"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb71d9410"/>
        <function-ref name="startOneShot" scoped="" ref="0xb71da4d8"/>
        <function-ref name="stop" scoped="" ref="0xb71da758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb72e04e0" loc="46:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb72e04e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb72e06b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb72e0798"/>
        <function-ref name="led1On" scoped="" ref="0xb72e0878"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb72e0958"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb72e0a38"/>
        <function-ref name="get" scoped="" ref="0xb72e0b18"/>
        <function-ref name="led1Off" scoped="" ref="0xb72e0bf8"/>
        <function-ref name="led2Off" scoped="" ref="0xb71b2010"/>
        <function-ref name="set" scoped="" ref="0xb72e0cd8"/>
        <function-ref name="led0On" scoped="" ref="0xb72e0db8"/>
        <function-ref name="led2On" scoped="" ref="0xb72e0e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0xb71af940" loc="50:/home/wsn/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xb71af940"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71afb18"/>
        <function-ref name="isInput" scoped="" ref="0xb71afbf8"/>
        <function-ref name="toggle" scoped="" ref="0xb71afcd8"/>
        <function-ref name="isOutput" scoped="" ref="0xb71afdb8"/>
        <function-ref name="get" scoped="" ref="0xb71afe98"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71ae010"/>
        <function-ref name="set" scoped="" ref="0xb71ae0f0"/>
        <function-ref name="clr" scoped="" ref="0xb71ae1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb71b2898" loc="46:/home/wsn/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb71b2898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb71b2a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0xb71ae3c0" loc="51:/home/wsn/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xb71ae3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71ae598"/>
        <function-ref name="isInput" scoped="" ref="0xb71ae678"/>
        <function-ref name="toggle" scoped="" ref="0xb71ae758"/>
        <function-ref name="isOutput" scoped="" ref="0xb71ae838"/>
        <function-ref name="get" scoped="" ref="0xb71ae918"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71ae9f8"/>
        <function-ref name="set" scoped="" ref="0xb71aead8"/>
        <function-ref name="clr" scoped="" ref="0xb71aebb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb71b2be0" loc="47:/home/wsn/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb71b2be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb71b2db8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb71b2e98"/>
        <function-ref name="led1On" scoped="" ref="0xb71af010"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb71af0f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb71af1d0"/>
        <function-ref name="get" scoped="" ref="0xb71af2b0"/>
        <function-ref name="led1Off" scoped="" ref="0xb71af390"/>
        <function-ref name="led2Off" scoped="" ref="0xb71af710"/>
        <function-ref name="set" scoped="" ref="0xb71af470"/>
        <function-ref name="led0On" scoped="" ref="0xb71af550"/>
        <function-ref name="led2On" scoped="" ref="0xb71af630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0xb71aeda8" loc="52:/home/wsn/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xb71aeda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71ad010"/>
        <function-ref name="isInput" scoped="" ref="0xb71ad0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb71ad1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71ad2b0"/>
        <function-ref name="get" scoped="" ref="0xb71ad390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71ad470"/>
        <function-ref name="set" scoped="" ref="0xb71ad550"/>
        <function-ref name="clr" scoped="" ref="0xb71ad630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0xb719d110" loc="44:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xb719d110"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb719d2e8"/>
        <function-ref name="isInput" scoped="" ref="0xb719d3c8"/>
        <function-ref name="toggle" scoped="" ref="0xb719d4a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb719d588"/>
        <function-ref name="get" scoped="" ref="0xb719d668"/>
        <function-ref name="makeOutput" scoped="" ref="0xb719d748"/>
        <function-ref name="set" scoped="" ref="0xb719d828"/>
        <function-ref name="clr" scoped="" ref="0xb719d908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0xb719db18" loc="45:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xb719db18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb719dcf0"/>
        <function-ref name="isInput" scoped="" ref="0xb719ddd0"/>
        <function-ref name="toggle" scoped="" ref="0xb719deb0"/>
        <function-ref name="isOutput" scoped="" ref="0xb719c010"/>
        <function-ref name="get" scoped="" ref="0xb719c0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb719c1d0"/>
        <function-ref name="set" scoped="" ref="0xb719c2b0"/>
        <function-ref name="clr" scoped="" ref="0xb719c390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0xb719cf28" loc="47:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb719cf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb719b110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0xb719c5a0" loc="46:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xb719c5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb719c778"/>
        <function-ref name="isInput" scoped="" ref="0xb719c858"/>
        <function-ref name="toggle" scoped="" ref="0xb719c938"/>
        <function-ref name="isOutput" scoped="" ref="0xb719ca18"/>
        <function-ref name="get" scoped="" ref="0xb719caf8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb719cbd8"/>
        <function-ref name="set" scoped="" ref="0xb719ccb8"/>
        <function-ref name="clr" scoped="" ref="0xb719cd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb7199010" loc="45:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="LEDTestAppC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb7199010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7398508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7098b00"/>
        <function-ref name="fired" scoped="" ref="0xb7199d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb70984c0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb7098268"/>
        <function-ref name="getdt" scoped="" ref="0xb7097010"/>
        <function-ref name="gett0" scoped="" ref="0xb7098d58"/>
        <function-ref name="isRunning" scoped="" ref="0xb7098010"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb7199638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb70987e0"/>
        <function-ref name="startOneShot" scoped="" ref="0xb71998b8"/>
        <function-ref name="stop" scoped="" ref="0xb7199b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xb7192010" loc="49:/home/wsn/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0xb7192010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7398508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7191b00"/>
        <function-ref name="fired" scoped="" ref="0xb7192d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb71914c0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb7191268"/>
        <function-ref name="getdt" scoped="" ref="0xb718f010"/>
        <function-ref name="gett0" scoped="" ref="0xb7191d58"/>
        <function-ref name="isRunning" scoped="" ref="0xb7191010"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb7192638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb71917e0"/>
        <function-ref name="startOneShot" scoped="" ref="0xb71928b8"/>
        <function-ref name="stop" scoped="" ref="0xb7192b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xb718c100" loc="46:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0xb718c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7398508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb718bbe0"/>
        <function-ref name="fired" scoped="" ref="0xb718ce80"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb718b5a0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb718b348"/>
        <function-ref name="getdt" scoped="" ref="0xb71890b8"/>
        <function-ref name="gett0" scoped="" ref="0xb718be38"/>
        <function-ref name="isRunning" scoped="" ref="0xb718b0f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb718c728"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb718b8c0"/>
        <function-ref name="startOneShot" scoped="" ref="0xb718c9a8"/>
        <function-ref name="stop" scoped="" ref="0xb718cc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb71880d0" loc="47:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb71880d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7398508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7188718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb718f898" loc="45:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb718f898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb718fa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0xb7179da0" loc="29:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0xb7179da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7398508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb717c508"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb717c9f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb717c780"/>
        <function-ref name="overflow" scoped="" ref="0xb717cc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb71877f8" loc="27:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb71877f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb71879d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0xb7183150" loc="28:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0xb7183150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7398508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7182600"/>
        <function-ref name="fired" scoped="" ref="0xb7183db8"/>
        <function-ref name="startAt" scoped="" ref="0xb71822c0"/>
        <function-ref name="isRunning" scoped="" ref="0xb7182048"/>
        <function-ref name="getAlarm" scoped="" ref="0xb7182878"/>
        <function-ref name="start" scoped="" ref="0xb71838a0"/>
        <function-ref name="stop" scoped="" ref="0xb7183b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb70ed4c0" loc="61:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb70ed4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7398508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb70ec980"/>
        <function-ref name="fired" scoped="" ref="0xb70ec150"/>
        <function-ref name="startAt" scoped="" ref="0xb70ec640"/>
        <function-ref name="isRunning" scoped="" ref="0xb70ec3c8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb70ecbf8"/>
        <function-ref name="start" scoped="" ref="0xb70edc10"/>
        <function-ref name="stop" scoped="" ref="0xb70edeb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb70ed088" loc="60:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb70ed088"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xb74015d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xb74015d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb70ed260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb70ecf28" loc="62:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb70ecf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7398508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb70ea688"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb70eab78"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb70ea900"/>
        <function-ref name="overflow" scoped="" ref="0xb70eadf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0xb6677758" loc="66:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb6677758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb6677930"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb6677a10"/>
        <function-ref name="getControlA" scoped="" ref="0xb6677af0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb6677bd0"/>
        <function-ref name="setControlB" scoped="" ref="0xb6677cb0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb6677d90"/>
        <function-ref name="getControlB" scoped="" ref="0xb6677e70"/>
        <function-ref name="setControlA" scoped="" ref="0xb6676010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb667d878" loc="61:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb667d878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7398508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb667cd58"/>
        <function-ref name="fired" scoped="" ref="0xb667c528"/>
        <function-ref name="startAt" scoped="" ref="0xb667ca18"/>
        <function-ref name="isRunning" scoped="" ref="0xb667c7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0xb667b010"/>
        <function-ref name="start" scoped="" ref="0xb667c010"/>
        <function-ref name="stop" scoped="" ref="0xb667c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb667d440" loc="60:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb667d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb667d618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb667b340" loc="62:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb667b340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7398508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb667ba90"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6679010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb667bd08"/>
        <function-ref name="overflow" scoped="" ref="0xb6679288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0xb6674c20" loc="68:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb6674c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xb6674df8"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xb6674ed8"/>
        <function-ref name="controlABusy" scoped="" ref="0xb6673010"/>
        <function-ref name="controlBBusy" scoped="" ref="0xb66730f0"/>
        <function-ref name="countBusy" scoped="" ref="0xb66731d0"/>
        <function-ref name="compareABusy" scoped="" ref="0xb66732b0"/>
        <function-ref name="getAssr" scoped="" ref="0xb6673390"/>
        <function-ref name="setAssr" scoped="" ref="0xb6673470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0xb6676200" loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb6676200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6674778"/>
        <function-ref name="fired" scoped="" ref="0xb6676d60"/>
        <function-ref name="get" scoped="" ref="0xb6676848"/>
        <function-ref name="reset" scoped="" ref="0xb6674010"/>
        <function-ref name="isOn" scoped="" ref="0xb66749f0"/>
        <function-ref name="set" scoped="" ref="0xb6676ac0"/>
        <function-ref name="start" scoped="" ref="0xb6674288"/>
        <function-ref name="stop" scoped="" ref="0xb6674500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6679578" loc="65:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6679578"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6677010"/>
        <function-ref name="test" scoped="" ref="0xb6678ad8"/>
        <function-ref name="get" scoped="" ref="0xb6679bc0"/>
        <function-ref name="setScale" scoped="" ref="0xb6677288"/>
        <function-ref name="getScale" scoped="" ref="0xb6677528"/>
        <function-ref name="reset" scoped="" ref="0xb6678370"/>
        <function-ref name="overflow" scoped="" ref="0xb66780f8"/>
        <function-ref name="isOn" scoped="" ref="0xb6678d50"/>
        <function-ref name="set" scoped="" ref="0xb6679e38"/>
        <function-ref name="start" scoped="" ref="0xb66785e8"/>
        <function-ref name="stop" scoped="" ref="0xb6678860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb712b600" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb712b600"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb712b7d8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb712b8b8"/>
        <function-ref name="getControlA" scoped="" ref="0xb712b998"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb712ba78"/>
        <function-ref name="setControlB" scoped="" ref="0xb712bb58"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb712bc38"/>
        <function-ref name="getControlB" scoped="" ref="0xb712bd18"/>
        <function-ref name="setControlA" scoped="" ref="0xb712bdf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0xb7128c60" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb7128c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xb7128e38"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xb7128f18"/>
        <function-ref name="controlABusy" scoped="" ref="0xb7127010"/>
        <function-ref name="controlBBusy" scoped="" ref="0xb71270f0"/>
        <function-ref name="countBusy" scoped="" ref="0xb71271d0"/>
        <function-ref name="compareABusy" scoped="" ref="0xb71272b0"/>
        <function-ref name="getAssr" scoped="" ref="0xb7127390"/>
        <function-ref name="setAssr" scoped="" ref="0xb7127470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb712a138" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb712a138"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb7128690"/>
        <function-ref name="fired" scoped="" ref="0xb712ac98"/>
        <function-ref name="get" scoped="" ref="0xb712a780"/>
        <function-ref name="reset" scoped="" ref="0xb712af10"/>
        <function-ref name="isOn" scoped="" ref="0xb7128908"/>
        <function-ref name="set" scoped="" ref="0xb712a9f8"/>
        <function-ref name="start" scoped="" ref="0xb71281a0"/>
        <function-ref name="stop" scoped="" ref="0xb7128418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb712d340" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb712d340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb712cd88"/>
        <function-ref name="test" scoped="" ref="0xb712c898"/>
        <function-ref name="get" scoped="" ref="0xb712d988"/>
        <function-ref name="setScale" scoped="" ref="0xb712b010"/>
        <function-ref name="getScale" scoped="" ref="0xb712b2b0"/>
        <function-ref name="reset" scoped="" ref="0xb712c130"/>
        <function-ref name="overflow" scoped="" ref="0xb712dea0"/>
        <function-ref name="isOn" scoped="" ref="0xb712cb10"/>
        <function-ref name="set" scoped="" ref="0xb712dc00"/>
        <function-ref name="start" scoped="" ref="0xb712c3a8"/>
        <function-ref name="stop" scoped="" ref="0xb712c620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb7121510" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb7121510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb71216e8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb71217c8"/>
        <function-ref name="getControlA" scoped="" ref="0xb71218a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb7121988"/>
        <function-ref name="setControlB" scoped="" ref="0xb7121a68"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb7121b48"/>
        <function-ref name="getControlB" scoped="" ref="0xb7121c28"/>
        <function-ref name="setControlA" scoped="" ref="0xb7121d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0xb711faf8" loc="85:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0xb711faf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xb711fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0xb711e010" loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb711e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xb711e1e8"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xb711e2c8"/>
        <function-ref name="controlABusy" scoped="" ref="0xb711e3a8"/>
        <function-ref name="controlBBusy" scoped="" ref="0xb711e488"/>
        <function-ref name="countBusy" scoped="" ref="0xb711e568"/>
        <function-ref name="compareABusy" scoped="" ref="0xb711e648"/>
        <function-ref name="getAssr" scoped="" ref="0xb711e728"/>
        <function-ref name="setAssr" scoped="" ref="0xb711e808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb7120078" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb7120078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb711f5c8"/>
        <function-ref name="fired" scoped="" ref="0xb7120bd8"/>
        <function-ref name="get" scoped="" ref="0xb71206c0"/>
        <function-ref name="reset" scoped="" ref="0xb7120e50"/>
        <function-ref name="isOn" scoped="" ref="0xb711f840"/>
        <function-ref name="set" scoped="" ref="0xb7120938"/>
        <function-ref name="start" scoped="" ref="0xb711f0d8"/>
        <function-ref name="stop" scoped="" ref="0xb711f350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb7124190" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb7124190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb7123c68"/>
        <function-ref name="test" scoped="" ref="0xb7123778"/>
        <function-ref name="get" scoped="" ref="0xb71247d8"/>
        <function-ref name="setScale" scoped="" ref="0xb7123ee0"/>
        <function-ref name="getScale" scoped="" ref="0xb71211c0"/>
        <function-ref name="reset" scoped="" ref="0xb7123010"/>
        <function-ref name="overflow" scoped="" ref="0xb7124cf0"/>
        <function-ref name="isOn" scoped="" ref="0xb71239f0"/>
        <function-ref name="set" scoped="" ref="0xb7124a50"/>
        <function-ref name="start" scoped="" ref="0xb7123288"/>
        <function-ref name="stop" scoped="" ref="0xb7123500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0xb70cf298" loc="74:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0xb70cf298"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb70cf470"/>
        <function-ref name="runTask" scoped="" ref="0xb70cf550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb70d18d8" loc="49:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb70d18d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7398508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb70d0d90"/>
        <function-ref name="fired" scoped="" ref="0xb70d0560"/>
        <function-ref name="startAt" scoped="" ref="0xb70d0a50"/>
        <function-ref name="isRunning" scoped="" ref="0xb70d07d8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb70cf048"/>
        <function-ref name="start" scoped="" ref="0xb70d0048"/>
        <function-ref name="stop" scoped="" ref="0xb70d02e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb70e85d8" loc="48:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb70e85d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7398508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb70d10d8"/>
        <function-ref name="fired" scoped="" ref="0xb70d3368"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb70d3a70"/>
        <function-ref name="isOneShot" scoped="" ref="0xb70d3818"/>
        <function-ref name="getdt" scoped="" ref="0xb70d1588"/>
        <function-ref name="gett0" scoped="" ref="0xb70d1330"/>
        <function-ref name="isRunning" scoped="" ref="0xb70d35c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb70e8c00"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb70d3d90"/>
        <function-ref name="startOneShot" scoped="" ref="0xb70e8e80"/>
        <function-ref name="stop" scoped="" ref="0xb70d3110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0xb70a3948" loc="71:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0xb70a3948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb70a3b20"/>
        <function-ref name="runTask" scoped="" ref="0xb70a3c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0xb70a5688" loc="49:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0xb70a5688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7398508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb70a3248"/>
        <function-ref name="fired" scoped="" ref="0xb70a44e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb70a4bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb70a4998"/>
        <function-ref name="getdt" scoped="" ref="0xb70a36f8"/>
        <function-ref name="gett0" scoped="" ref="0xb70a34a0"/>
        <function-ref name="isRunning" scoped="" ref="0xb70a4740"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb70a5cb0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb70a4f10"/>
        <function-ref name="startOneShot" scoped="" ref="0xb70a4010"/>
        <function-ref name="stop" scoped="" ref="0xb70a4290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb70a8338" loc="48:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb70a8338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7398508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb70a7ea8"/>
        <function-ref name="fired" scoped="" ref="0xb70a7110"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb70a7848"/>
        <function-ref name="isOneShot" scoped="" ref="0xb70a75e0"/>
        <function-ref name="getdt" scoped="" ref="0xb70a5398"/>
        <function-ref name="gett0" scoped="" ref="0xb70a5130"/>
        <function-ref name="isRunning" scoped="" ref="0xb70a7378"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb70a8970"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb70a7b78"/>
        <function-ref name="startOneShot" scoped="" ref="0xb70a8c00"/>
        <function-ref name="stop" scoped="" ref="0xb70a8e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb709ad28" loc="48:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb709ad28"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7398508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb70a0390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb70a06e0" loc="49:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb70a06e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7398508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb70a0e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb709f350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb709f0d8"/>
        <function-ref name="overflow" scoped="" ref="0xb709f5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb7092d50" loc="49:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb7092d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7092f28"/>
        <function-ref name="getPayload" scoped="" ref="0xb6df5018"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6df50f8"/>
        <function-ref name="cancel" scoped="" ref="0xb6df51d8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6df52b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6df53f8" loc="50:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6df53f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6df55d0"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6df56b0"/>
        <function-ref name="getPayload" scoped="" ref="0xb6df5790"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6df5870"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6df5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb6df5a90" loc="51:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6df5a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6df5c68"/>
        <function-ref name="source" scoped="" ref="0xb6df5d48"/>
        <function-ref name="address" scoped="" ref="0xb6df5e28"/>
        <function-ref name="destination" scoped="" ref="0xb6df5f08"/>
        <function-ref name="setSource" scoped="" ref="0xb6df4010"/>
        <function-ref name="setDestination" scoped="" ref="0xb6df40f0"/>
        <function-ref name="type" scoped="" ref="0xb6df41d0"/>
        <function-ref name="setType" scoped="" ref="0xb6df42b0"/>
        <function-ref name="isForMe" scoped="" ref="0xb6df4390"/>
        <function-ref name="setGroup" scoped="" ref="0xb6df4470"/>
        <function-ref name="localGroup" scoped="" ref="0xb6df4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb6df46b0" loc="52:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xb6df46b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6df4888"/>
        <function-ref name="noAck" scoped="" ref="0xb6df4968"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6df4a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6639608" loc="44:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6639608"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb66397e0"/>
        <function-ref name="getPayload" scoped="" ref="0xb66398c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb66399a0"/>
        <function-ref name="cancel" scoped="" ref="0xb6639a80"/>
        <function-ref name="sendDone" scoped="" ref="0xb6639b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0xb6639cd0" loc="46:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6639cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6639ea8"/>
        <function-ref name="getPayload" scoped="" ref="0xb6638010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb66380f0"/>
        <function-ref name="cancel" scoped="" ref="0xb66381d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb66382b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb66383f0" loc="47:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb66383f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb66385c8"/>
        <function-ref name="source" scoped="" ref="0xb66386a8"/>
        <function-ref name="address" scoped="" ref="0xb6638788"/>
        <function-ref name="destination" scoped="" ref="0xb6638868"/>
        <function-ref name="setSource" scoped="" ref="0xb6638948"/>
        <function-ref name="setDestination" scoped="" ref="0xb6638a28"/>
        <function-ref name="type" scoped="" ref="0xb6638b08"/>
        <function-ref name="setType" scoped="" ref="0xb6638be8"/>
        <function-ref name="isForMe" scoped="" ref="0xb6638cc8"/>
        <function-ref name="setGroup" scoped="" ref="0xb6638da8"/>
        <function-ref name="localGroup" scoped="" ref="0xb6638e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb706ba90" loc="44:/home/wsn/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb706ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb706bc68"/>
        <function-ref name="getPayload" scoped="" ref="0xb706bd48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb706be28"/>
        <function-ref name="cancel" scoped="" ref="0xb706bf08"/>
        <function-ref name="sendDone" scoped="" ref="0xb7068010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xb703e0a8" loc="48:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb703e0a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb703e290"/>
        <function-ref name="getPayload" scoped="" ref="0xb703e370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb703e450"/>
        <function-ref name="cancel" scoped="" ref="0xb703e530"/>
        <function-ref name="sendDone" scoped="" ref="0xb703e610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb703f908" loc="46:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb703f908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb703faf0"/>
        <function-ref name="getPayload" scoped="" ref="0xb703fbd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb703fcb0"/>
        <function-ref name="cancel" scoped="" ref="0xb703fd90"/>
        <function-ref name="sendDone" scoped="" ref="0xb703fe70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb703d3f0" loc="50:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb703d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb703d5c8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb703d6a8"/>
        <function-ref name="getPayload" scoped="" ref="0xb703d788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb703d868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb703d948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0xb703dac8" loc="169:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0xb703dac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb703dca0"/>
        <function-ref name="runTask" scoped="" ref="0xb703dd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0xb703df00" loc="126:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0xb703df00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb703c0f0"/>
        <function-ref name="runTask" scoped="" ref="0xb703c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb703e750" loc="49:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb703e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb703e928"/>
        <function-ref name="source" scoped="" ref="0xb703ea08"/>
        <function-ref name="address" scoped="" ref="0xb703eae8"/>
        <function-ref name="destination" scoped="" ref="0xb703ebc8"/>
        <function-ref name="setSource" scoped="" ref="0xb703eca8"/>
        <function-ref name="setDestination" scoped="" ref="0xb703ed88"/>
        <function-ref name="type" scoped="" ref="0xb703ee68"/>
        <function-ref name="setType" scoped="" ref="0xb703d010"/>
        <function-ref name="isForMe" scoped="" ref="0xb703d0f0"/>
        <function-ref name="setGroup" scoped="" ref="0xb703d1d0"/>
        <function-ref name="localGroup" scoped="" ref="0xb703d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb70392e0" loc="46:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb70392e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb70394b8"/>
        <function-ref name="stopDone" scoped="" ref="0xb7039598"/>
        <function-ref name="start" scoped="" ref="0xb7039678"/>
        <function-ref name="stop" scoped="" ref="0xb7039758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb7039bb8" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb7039bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7039d90"/>
        <function-ref name="getPayload" scoped="" ref="0xb7039e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7038010"/>
        <function-ref name="cancel" scoped="" ref="0xb70380f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb70381d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb7038990" loc="49:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7038990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7038b68"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7038c48"/>
        <function-ref name="getPayload" scoped="" ref="0xb7038d28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7038e08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7038ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb7038638" loc="48:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7038638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7038810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb7036370" loc="53:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7036370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb7036548"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb7036628"/>
        <function-ref name="led1On" scoped="" ref="0xb7036708"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb70367e8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb70368c8"/>
        <function-ref name="get" scoped="" ref="0xb70369a8"/>
        <function-ref name="led1Off" scoped="" ref="0xb7036a88"/>
        <function-ref name="led2Off" scoped="" ref="0xb7036e08"/>
        <function-ref name="set" scoped="" ref="0xb7036b68"/>
        <function-ref name="led0On" scoped="" ref="0xb7036c48"/>
        <function-ref name="led2On" scoped="" ref="0xb7036d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb7037d70" loc="51:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7037d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb7036010"/>
        <function-ref name="noAck" scoped="" ref="0xb70360f0"/>
        <function-ref name="wasAcked" scoped="" ref="0xb70361d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb70370b8" loc="50:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb70370b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb7037290"/>
        <function-ref name="source" scoped="" ref="0xb7037370"/>
        <function-ref name="address" scoped="" ref="0xb7037450"/>
        <function-ref name="destination" scoped="" ref="0xb7037530"/>
        <function-ref name="setSource" scoped="" ref="0xb7037610"/>
        <function-ref name="setDestination" scoped="" ref="0xb70376f0"/>
        <function-ref name="type" scoped="" ref="0xb70377d0"/>
        <function-ref name="setType" scoped="" ref="0xb70378b0"/>
        <function-ref name="isForMe" scoped="" ref="0xb7037990"/>
        <function-ref name="setGroup" scoped="" ref="0xb7037a70"/>
        <function-ref name="localGroup" scoped="" ref="0xb7037b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb70029f8" loc="54:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb70029f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7002bd0"/>
        <function-ref name="getPayload" scoped="" ref="0xb7002cb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7002d90"/>
        <function-ref name="cancel" scoped="" ref="0xb7002e70"/>
        <function-ref name="sendDone" scoped="" ref="0xb7001010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb7001170" loc="55:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb7001170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7001348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb7034738" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb7034738"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7034920"/>
        <function-ref name="getPayload" scoped="" ref="0xb7034a00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7034ae0"/>
        <function-ref name="cancel" scoped="" ref="0xb7034bc0"/>
        <function-ref name="sendDone" scoped="" ref="0xb7034ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb7003d88" loc="50:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7003d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7002010"/>
        <function-ref name="payloadLength" scoped="" ref="0xb70020f0"/>
        <function-ref name="getPayload" scoped="" ref="0xb70021d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb70022b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7002390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb7034e78" loc="48:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7034e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7003070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb70024d0" loc="51:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb70024d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb70026a8"/>
        <function-ref name="noAck" scoped="" ref="0xb7002788"/>
        <function-ref name="wasAcked" scoped="" ref="0xb7002868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb70031b0" loc="49:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb70031b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb7003388"/>
        <function-ref name="source" scoped="" ref="0xb7003468"/>
        <function-ref name="address" scoped="" ref="0xb7003548"/>
        <function-ref name="destination" scoped="" ref="0xb7003628"/>
        <function-ref name="setSource" scoped="" ref="0xb7003708"/>
        <function-ref name="setDestination" scoped="" ref="0xb70037e8"/>
        <function-ref name="type" scoped="" ref="0xb70038c8"/>
        <function-ref name="setType" scoped="" ref="0xb70039a8"/>
        <function-ref name="isForMe" scoped="" ref="0xb7003a88"/>
        <function-ref name="setGroup" scoped="" ref="0xb7003b68"/>
        <function-ref name="localGroup" scoped="" ref="0xb7003c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb70008f0" loc="50:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb70008f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7000ac8"/>
        <function-ref name="stopDone" scoped="" ref="0xb7000ba8"/>
        <function-ref name="start" scoped="" ref="0xb7000c88"/>
        <function-ref name="stop" scoped="" ref="0xb7000d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6ffd7e0" loc="52:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6ffd7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb72eb5e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6ffd9b8"/>
        <function-ref name="getPayload" scoped="" ref="0xb6ffda98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6ffdb78"/>
        <function-ref name="cancel" scoped="" ref="0xb6ffdc58"/>
        <function-ref name="sendDone" scoped="" ref="0xb6ffdd38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7000558" loc="49:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7000558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7000730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6ffd1d8" loc="51:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6ffd1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb72eb5e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6ffd3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb6ffa3f0" loc="56:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb6ffa3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb6ffa5c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb6ffa6a8"/>
        <function-ref name="led1On" scoped="" ref="0xb6ffa788"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb6ffa868"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb6ffa948"/>
        <function-ref name="get" scoped="" ref="0xb6ffaa28"/>
        <function-ref name="led1Off" scoped="" ref="0xb6ffab08"/>
        <function-ref name="led2Off" scoped="" ref="0xb6ffae88"/>
        <function-ref name="set" scoped="" ref="0xb6ffabe8"/>
        <function-ref name="led0On" scoped="" ref="0xb6ffacc8"/>
        <function-ref name="led2On" scoped="" ref="0xb6ffada8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0xb6ff9ea8" loc="55:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0xb6ff9ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb72eb5e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0xb6ffa0c0"/>
        <function-ref name="offset" scoped="" ref="0xb6ffa1a0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0xb6ffa280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6fe7978" loc="66:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6fe7978"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6fe7b50"/>
        <function-ref name="stopDone" scoped="" ref="0xb6fe7c30"/>
        <function-ref name="start" scoped="" ref="0xb6fe7d10"/>
        <function-ref name="stop" scoped="" ref="0xb6fe7df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0xb6fab9d0" loc="332:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0xb6fab9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6fabba8"/>
        <function-ref name="runTask" scoped="" ref="0xb6fabc88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0xb6fd9a10" loc="74:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0xb6fd9a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb6fd9be8"/>
        <function-ref name="stop" scoped="" ref="0xb6fd9cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0xb6fcbd40" loc="191:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0xb6fcbd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6fcbf18"/>
        <function-ref name="runTask" scoped="" ref="0xb6fca010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6fe75e0" loc="65:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6fe75e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6fe77b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0xb6fd89e8" loc="75:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0xb6fd89e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0xb6fd8bc0"/>
        <function-ref name="flush" scoped="" ref="0xb6fd8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0xb6fac220" loc="322:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0xb6fac220"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6fac3f8"/>
        <function-ref name="runTask" scoped="" ref="0xb6fac4d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0xb6fdc400" loc="72:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0xb6fdc400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0xb6fdc5d8"/>
        <function-ref name="resetSend" scoped="" ref="0xb6fdc6b8"/>
        <function-ref name="dataReceived" scoped="" ref="0xb6fdc798"/>
        <function-ref name="resetReceive" scoped="" ref="0xb6fdc878"/>
        <function-ref name="putData" scoped="" ref="0xb6fdc958"/>
        <function-ref name="putDone" scoped="" ref="0xb6fdca38"/>
        <function-ref name="delimiterReceived" scoped="" ref="0xb6fdcb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb6fdcc88" loc="73:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb6fdcc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb6fdce60"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb6fe5010"/>
        <function-ref name="led1On" scoped="" ref="0xb6fe50f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb6fe51d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb6fe52b0"/>
        <function-ref name="get" scoped="" ref="0xb6fe5390"/>
        <function-ref name="led1Off" scoped="" ref="0xb6fe5470"/>
        <function-ref name="led2Off" scoped="" ref="0xb6fe57f0"/>
        <function-ref name="set" scoped="" ref="0xb6fe5550"/>
        <function-ref name="led0On" scoped="" ref="0xb6fe5630"/>
        <function-ref name="led2On" scoped="" ref="0xb6fe5710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0xb6fa9610" loc="341:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0xb6fa9610"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6fa97e8"/>
        <function-ref name="runTask" scoped="" ref="0xb6fa98c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0xb6fe1098" loc="67:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0xb6fe1098"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0xb6fe1270"/>
        <function-ref name="nextByte" scoped="" ref="0xb6fe1350"/>
        <function-ref name="startSend" scoped="" ref="0xb6fe1430"/>
        <function-ref name="sendCompleted" scoped="" ref="0xb6fe1510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0xb6fdf2a8" loc="68:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0xb6fdf2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0xb6fdf480"/>
        <function-ref name="byteReceived" scoped="" ref="0xb6fdf560"/>
        <function-ref name="endPacket" scoped="" ref="0xb6fdf640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0xb6f36e48" loc="275:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0xb6f36e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6f35050"/>
        <function-ref name="runTask" scoped="" ref="0xb6f35130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6f71a90" loc="51:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6f71a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb72eb5e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f71c78"/>
        <function-ref name="getPayload" scoped="" ref="0xb6f71d58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6f71e38"/>
        <function-ref name="cancel" scoped="" ref="0xb6f71f18"/>
        <function-ref name="sendDone" scoped="" ref="0xb6f37010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0xb6f352b0" loc="158:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0xb6f352b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6f35488"/>
        <function-ref name="runTask" scoped="" ref="0xb6f35568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6f716d0" loc="50:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6f716d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb72eb5e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6f718b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0xb6f37238" loc="54:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0xb6f37238"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb72eb5e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0xb6f37420"/>
        <function-ref name="offset" scoped="" ref="0xb6f37500"/>
        <function-ref name="dataLinkLength" scoped="" ref="0xb6f375e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb6f36230" loc="57:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb6f36230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb6f36408"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb6f364e8"/>
        <function-ref name="led1On" scoped="" ref="0xb6f365c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb6f366a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb6f36788"/>
        <function-ref name="get" scoped="" ref="0xb6f36868"/>
        <function-ref name="led1Off" scoped="" ref="0xb6f36948"/>
        <function-ref name="led2On" scoped="" ref="0xb6f36cc8"/>
        <function-ref name="set" scoped="" ref="0xb6f36b08"/>
        <function-ref name="led2Off" scoped="" ref="0xb6f36a28"/>
        <function-ref name="led0On" scoped="" ref="0xb6f36be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0xb6f37bf8" loc="56:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0xb6f37bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0xb6f37dd0"/>
        <function-ref name="nextByte" scoped="" ref="0xb6f37eb0"/>
        <function-ref name="startSend" scoped="" ref="0xb6f36010"/>
        <function-ref name="sendCompleted" scoped="" ref="0xb6f360f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0xb6f37720" loc="55:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0xb6f37720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0xb6f378f8"/>
        <function-ref name="byteReceived" scoped="" ref="0xb6f379d8"/>
        <function-ref name="endPacket" scoped="" ref="0xb6f37ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0xb6f29990" loc="50:/home/wsn/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0xb6f29990"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f29b68"/>
        <function-ref name="receivedByte" scoped="" ref="0xb6f29c48"/>
        <function-ref name="receive" scoped="" ref="0xb6f29d28"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb6f29e08"/>
        <function-ref name="receiveDone" scoped="" ref="0xb6f29ee8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb6f30010"/>
        <function-ref name="sendDone" scoped="" ref="0xb6f300f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0xb6f346a8" loc="48:/home/wsn/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0xb6f346a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0xb6f34880"/>
        <function-ref name="resetSend" scoped="" ref="0xb6f34960"/>
        <function-ref name="dataReceived" scoped="" ref="0xb6f34a40"/>
        <function-ref name="resetReceive" scoped="" ref="0xb6f34b20"/>
        <function-ref name="putData" scoped="" ref="0xb6f34c00"/>
        <function-ref name="putDone" scoped="" ref="0xb6f34ce0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0xb6f34dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb6f30260" loc="51:/home/wsn/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb6f30260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb6f30438"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb6f30518"/>
        <function-ref name="led1On" scoped="" ref="0xb6f305f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb6f306d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb6f307b8"/>
        <function-ref name="get" scoped="" ref="0xb6f30898"/>
        <function-ref name="led1Off" scoped="" ref="0xb6f30978"/>
        <function-ref name="led2Off" scoped="" ref="0xb6f30cf8"/>
        <function-ref name="set" scoped="" ref="0xb6f30a58"/>
        <function-ref name="led0On" scoped="" ref="0xb6f30b38"/>
        <function-ref name="led2On" scoped="" ref="0xb6f30c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0xb6f16488" loc="42:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0xb6f16488"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f16660"/>
        <function-ref name="receive" scoped="" ref="0xb6f16740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0xb6f1a5e8" loc="41:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0xb6f1a5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f1a7c0"/>
        <function-ref name="receivedByte" scoped="" ref="0xb6f1a8a0"/>
        <function-ref name="receive" scoped="" ref="0xb6f1a980"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb6f1aa60"/>
        <function-ref name="receiveDone" scoped="" ref="0xb6f1ab40"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb6f1ac20"/>
        <function-ref name="sendDone" scoped="" ref="0xb6f1ad00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb6f1a168" loc="40:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb6f1a168"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb6f1a340"/>
        <function-ref name="stop" scoped="" ref="0xb6f1a420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0xb6f15308" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0xb6f15308"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f154e0"/>
        <function-ref name="receive" scoped="" ref="0xb6f155c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0xb6f15788" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0xb6f15788"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f15960"/>
        <function-ref name="receivedByte" scoped="" ref="0xb6f15a40"/>
        <function-ref name="receive" scoped="" ref="0xb6f15b20"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb6f15c00"/>
        <function-ref name="receiveDone" scoped="" ref="0xb6f15ce0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb6f15dc0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6f15ea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb6f14218" loc="43:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6f14218"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7396010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6f14968"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6f14e58"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6f14be0"/>
        <function-ref name="overflow" scoped="" ref="0xb6f12110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb6f16e88" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb6f16e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb6f15070"/>
        <function-ref name="stop" scoped="" ref="0xb6f15150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0xb6f11ae8" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0xb6f11ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f11cc0"/>
        <function-ref name="receive" scoped="" ref="0xb6f11da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0xb6f107b0" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0xb6f107b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb6f10988"/>
        <function-ref name="stop" scoped="" ref="0xb6f10a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6f11398" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6f11398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6f11570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0xb6f11f00" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0xb6f11f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f100f0"/>
        <function-ref name="receivedByte" scoped="" ref="0xb6f101d0"/>
        <function-ref name="receive" scoped="" ref="0xb6f102b0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb6f10390"/>
        <function-ref name="receiveDone" scoped="" ref="0xb6f10470"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb6f10550"/>
        <function-ref name="sendDone" scoped="" ref="0xb6f10630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb6eeac88" loc="56:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6eeac88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7396010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6ee93f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6ee98e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6ee9668"/>
        <function-ref name="overflow" scoped="" ref="0xb6ee9b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0xb6eea050" loc="55:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0xb6eea050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb6eea228"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb6eea308"/>
        <function-ref name="rxDone" scoped="" ref="0xb6eea3e8"/>
        <function-ref name="txDone" scoped="" ref="0xb6eea4c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb6eea5a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb6eea688"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb6eea768"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xb6eea848"/>
        <function-ref name="tx" scoped="" ref="0xb6eea928"/>
        <function-ref name="rx" scoped="" ref="0xb6eeaa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb6f116d0" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb6f116d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb6f118a8"/>
        <function-ref name="stop" scoped="" ref="0xb6f11988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0xb6f10be8" loc="54:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0xb6f10be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb6f10dc0"/>
        <function-ref name="stop" scoped="" ref="0xb6f10ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0xb6ed60b8" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0xb6ed60b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb6ed6290"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb6ed6370"/>
        <function-ref name="rxDone" scoped="" ref="0xb6ed6450"/>
        <function-ref name="txDone" scoped="" ref="0xb6ed6530"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb6ed6610"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb6ed66f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb6ed67d0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xb6ed68b0"/>
        <function-ref name="tx" scoped="" ref="0xb6ed6990"/>
        <function-ref name="rx" scoped="" ref="0xb6ed6a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0xb6ed5760" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0xb6ed5760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb6ed5938"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb6ed5a18"/>
        <function-ref name="rxDone" scoped="" ref="0xb6ed5af8"/>
        <function-ref name="txDone" scoped="" ref="0xb6ed5bd8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb6ed5cb8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb6ed5d98"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb6ed5e78"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xb6ed4010"/>
        <function-ref name="tx" scoped="" ref="0xb6ed40f0"/>
        <function-ref name="rx" scoped="" ref="0xb6ed41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0xb6ed7b98" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0xb6ed7b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb6ed7d70"/>
        <function-ref name="stop" scoped="" ref="0xb6ed7e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0xb6ed6cc8" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0xb6ed6cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb6ed6ea0"/>
        <function-ref name="stop" scoped="" ref="0xb6ed5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0xb6ed5268" loc="52:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0xb6ed5268"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb6ed5440"/>
        <function-ref name="stop" scoped="" ref="0xb6ed5520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0xb6ed7688" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0xb6ed7688"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb6ed7860"/>
        <function-ref name="stop" scoped="" ref="0xb6ed7940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0xb6ed4a00" loc="114:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0xb6ed4a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6ed4bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0xb6ed08c0" loc="117:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0xb6ed08c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb6ed0a98"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb6ed0b78"/>
        <function-ref name="rxDone" scoped="" ref="0xb6ed0c58"/>
        <function-ref name="txDone" scoped="" ref="0xb6ed0d38"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb6ed0e18"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb6ed0ef8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb6ecf010"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xb6ecf0f0"/>
        <function-ref name="tx" scoped="" ref="0xb6ecf1d0"/>
        <function-ref name="rx" scoped="" ref="0xb6ecf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0xb6ecf4c0" loc="119:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0xb6ecf4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6ecf698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0xb6ece390" loc="122:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0xb6ece390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb6ece568"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb6ece648"/>
        <function-ref name="rxDone" scoped="" ref="0xb6ece728"/>
        <function-ref name="txDone" scoped="" ref="0xb6ece808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb6ece8e8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb6ece9c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb6eceaa8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xb6eceb88"/>
        <function-ref name="tx" scoped="" ref="0xb6ecec68"/>
        <function-ref name="rx" scoped="" ref="0xb6eced48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0xb6ed03a8" loc="116:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0xb6ed03a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb6ed0580"/>
        <function-ref name="stop" scoped="" ref="0xb6ed0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0xb6ecf910" loc="120:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0xb6ecf910"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb6ecfae8"/>
        <function-ref name="stop" scoped="" ref="0xb6ecfbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0xb6ecfe40" loc="121:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0xb6ecfe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb6ece050"/>
        <function-ref name="stop" scoped="" ref="0xb6ece130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0xb6ecd010" loc="124:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb6ecd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb6ecd1e8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb6ecd2c8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb6ecd3a8"/>
        <function-ref name="actualMicro" scoped="" ref="0xb6ecd488"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb6ecd568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0xb6ecd750" loc="125:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xb6ecd750"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb6ecd928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0xb6ed4e50" loc="115:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0xb6ed4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb6ed0050"/>
        <function-ref name="stop" scoped="" ref="0xb6ed0130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6e9a628" loc="24:/home/wsn/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6e9a628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7396010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6e9ad78"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6e97288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6e97010"/>
        <function-ref name="overflow" scoped="" ref="0xb6e97500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6e94088" loc="24:/home/wsn/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6e94088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TThree" ref="0xb736e010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6e947d8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6e94cc8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6e94a50"/>
        <function-ref name="overflow" scoped="" ref="0xb6e93010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb6e87410" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb6e87410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xb6e875e8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb6e876c8"/>
        <function-ref name="getControlA" scoped="" ref="0xb6e877a8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb6e87888"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb6e87968"/>
        <function-ref name="setControlB" scoped="" ref="0xb6e87a48"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb6e87b28"/>
        <function-ref name="getControlB" scoped="" ref="0xb6e87c08"/>
        <function-ref name="setControlC" scoped="" ref="0xb6e87ce8"/>
        <function-ref name="setControlA" scoped="" ref="0xb6e87dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb6e8c1a0" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb6e8c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb6e86c68"/>
        <function-ref name="test" scoped="" ref="0xb6e86778"/>
        <function-ref name="get" scoped="" ref="0xb6e8c7e8"/>
        <function-ref name="captured" scoped="" ref="0xb6e8cd00"/>
        <function-ref name="reset" scoped="" ref="0xb6e86010"/>
        <function-ref name="isOn" scoped="" ref="0xb6e869f0"/>
        <function-ref name="set" scoped="" ref="0xb6e8ca60"/>
        <function-ref name="start" scoped="" ref="0xb6e86288"/>
        <function-ref name="stop" scoped="" ref="0xb6e86500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb6e823d0" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb6e823d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6e809f0"/>
        <function-ref name="fired" scoped="" ref="0xb6e80010"/>
        <function-ref name="get" scoped="" ref="0xb6e82a18"/>
        <function-ref name="reset" scoped="" ref="0xb6e80288"/>
        <function-ref name="isOn" scoped="" ref="0xb6e80c68"/>
        <function-ref name="set" scoped="" ref="0xb6e82c90"/>
        <function-ref name="start" scoped="" ref="0xb6e80500"/>
        <function-ref name="stop" scoped="" ref="0xb6e80778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6e93aa8" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6e93aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6e8e538"/>
        <function-ref name="test" scoped="" ref="0xb6e8e048"/>
        <function-ref name="get" scoped="" ref="0xb6e90120"/>
        <function-ref name="setScale" scoped="" ref="0xb6e8e7b0"/>
        <function-ref name="getScale" scoped="" ref="0xb6e8ea50"/>
        <function-ref name="reset" scoped="" ref="0xb6e908b0"/>
        <function-ref name="overflow" scoped="" ref="0xb6e90638"/>
        <function-ref name="isOn" scoped="" ref="0xb6e8e2c0"/>
        <function-ref name="set" scoped="" ref="0xb6e90398"/>
        <function-ref name="start" scoped="" ref="0xb6e90b28"/>
        <function-ref name="stop" scoped="" ref="0xb6e90da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb6e7ac90" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb6e7ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xb6e7ae68"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb6e79010"/>
        <function-ref name="getControlA" scoped="" ref="0xb6e790f0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb6e791d0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb6e792b0"/>
        <function-ref name="setControlB" scoped="" ref="0xb6e79390"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb6e79470"/>
        <function-ref name="getControlB" scoped="" ref="0xb6e79550"/>
        <function-ref name="setControlC" scoped="" ref="0xb6e79630"/>
        <function-ref name="setControlA" scoped="" ref="0xb6e79710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0xb6e77940" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0xb6e77940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6e75f08"/>
        <function-ref name="fired" scoped="" ref="0xb6e75528"/>
        <function-ref name="get" scoped="" ref="0xb6e75010"/>
        <function-ref name="reset" scoped="" ref="0xb6e757a0"/>
        <function-ref name="isOn" scoped="" ref="0xb6e741a0"/>
        <function-ref name="set" scoped="" ref="0xb6e75288"/>
        <function-ref name="start" scoped="" ref="0xb6e75a18"/>
        <function-ref name="stop" scoped="" ref="0xb6e75c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb6e79a48" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb6e79a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb6e77500"/>
        <function-ref name="test" scoped="" ref="0xb6e77010"/>
        <function-ref name="get" scoped="" ref="0xb6e780a8"/>
        <function-ref name="captured" scoped="" ref="0xb6e785c0"/>
        <function-ref name="reset" scoped="" ref="0xb6e78860"/>
        <function-ref name="isOn" scoped="" ref="0xb6e77288"/>
        <function-ref name="set" scoped="" ref="0xb6e78320"/>
        <function-ref name="start" scoped="" ref="0xb6e78ad8"/>
        <function-ref name="stop" scoped="" ref="0xb6e78d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0xb6e745b8" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0xb6e745b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6e73b10"/>
        <function-ref name="fired" scoped="" ref="0xb6e73130"/>
        <function-ref name="get" scoped="" ref="0xb6e74c00"/>
        <function-ref name="reset" scoped="" ref="0xb6e733a8"/>
        <function-ref name="isOn" scoped="" ref="0xb6e73d88"/>
        <function-ref name="set" scoped="" ref="0xb6e74e78"/>
        <function-ref name="start" scoped="" ref="0xb6e73620"/>
        <function-ref name="stop" scoped="" ref="0xb6e73898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0xb6e711c0" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0xb6e711c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6e70778"/>
        <function-ref name="fired" scoped="" ref="0xb6e71d20"/>
        <function-ref name="get" scoped="" ref="0xb6e71808"/>
        <function-ref name="reset" scoped="" ref="0xb6e70010"/>
        <function-ref name="isOn" scoped="" ref="0xb6e709f0"/>
        <function-ref name="set" scoped="" ref="0xb6e71a80"/>
        <function-ref name="start" scoped="" ref="0xb6e70288"/>
        <function-ref name="stop" scoped="" ref="0xb6e70500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6e7f960" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6e7f960"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6e7a418"/>
        <function-ref name="test" scoped="" ref="0xb6e7cf08"/>
        <function-ref name="get" scoped="" ref="0xb6e7c010"/>
        <function-ref name="setScale" scoped="" ref="0xb6e7a690"/>
        <function-ref name="getScale" scoped="" ref="0xb6e7a930"/>
        <function-ref name="reset" scoped="" ref="0xb6e7c7a0"/>
        <function-ref name="overflow" scoped="" ref="0xb6e7c528"/>
        <function-ref name="isOn" scoped="" ref="0xb6e7a1a0"/>
        <function-ref name="set" scoped="" ref="0xb6e7c288"/>
        <function-ref name="start" scoped="" ref="0xb6e7ca18"/>
        <function-ref name="stop" scoped="" ref="0xb6e7cc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6e2da40" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6e2da40"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xb74015d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xb74015d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6e2dc18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6e2de28" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6e2de28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6e24898"/>
        <function-ref name="test" scoped="" ref="0xb6e243a8"/>
        <function-ref name="get" scoped="" ref="0xb6e2c488"/>
        <function-ref name="setScale" scoped="" ref="0xb6e24b10"/>
        <function-ref name="getScale" scoped="" ref="0xb6e24db0"/>
        <function-ref name="reset" scoped="" ref="0xb6e2cc18"/>
        <function-ref name="overflow" scoped="" ref="0xb6e2c9a0"/>
        <function-ref name="isOn" scoped="" ref="0xb6e24620"/>
        <function-ref name="set" scoped="" ref="0xb6e2c700"/>
        <function-ref name="start" scoped="" ref="0xb6e2ce90"/>
        <function-ref name="stop" scoped="" ref="0xb6e24130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6e2f618" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6e2f618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TThree" ref="0xb736e010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6e2fd68"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6e21288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6e21010"/>
        <function-ref name="overflow" scoped="" ref="0xb6e21500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6e217e0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6e217e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6e15288"/>
        <function-ref name="test" scoped="" ref="0xb6e17d38"/>
        <function-ref name="get" scoped="" ref="0xb6e21e28"/>
        <function-ref name="setScale" scoped="" ref="0xb6e15500"/>
        <function-ref name="getScale" scoped="" ref="0xb6e157a0"/>
        <function-ref name="reset" scoped="" ref="0xb6e175d0"/>
        <function-ref name="overflow" scoped="" ref="0xb6e17358"/>
        <function-ref name="isOn" scoped="" ref="0xb6e15010"/>
        <function-ref name="set" scoped="" ref="0xb6e170b8"/>
        <function-ref name="start" scoped="" ref="0xb6e17848"/>
        <function-ref name="stop" scoped="" ref="0xb6e17ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0xb6e13cd8" loc="63:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0xb6e13cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TThree" ref="0xb736e010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6e02478"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6e02968"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6e026f0"/>
        <function-ref name="overflow" scoped="" ref="0xb6e02be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6e959f0" loc="62:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6e959f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7396010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6e13200"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6e136f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6e13478"/>
        <function-ref name="overflow" scoped="" ref="0xb6e13968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0xb6e00728" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0xb6e00728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0xb6e00900"/>
        <function-ref name="offset" scoped="" ref="0xb6e009e0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0xb6e00ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0xb6dddd90" loc="43:/home/wsn/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb6dddd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0xb6df2d40"/>
        <function-ref name="enqueue" scoped="" ref="0xb6df1458"/>
        <function-ref name="element" scoped="" ref="0xb6df17a8"/>
        <function-ref name="full" scoped="" ref="0xb6df2638"/>
        <function-ref name="maxSize" scoped="" ref="0xb6df2ae8"/>
        <function-ref name="dequeue" scoped="" ref="0xb6df10e8"/>
        <function-ref name="empty" scoped="" ref="0xb6df23e0"/>
        <function-ref name="size" scoped="" ref="0xb6df2890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb6dd5830" loc="93:/home/wsn/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb6dd5830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0xb6dd77f8"/>
        <function-ref name="enqueue" scoped="" ref="0xb6dd7ed8"/>
        <function-ref name="element" scoped="" ref="0xb6dd6240"/>
        <function-ref name="full" scoped="" ref="0xb6dd70f0"/>
        <function-ref name="maxSize" scoped="" ref="0xb6dd75a0"/>
        <function-ref name="dequeue" scoped="" ref="0xb6dd7b68"/>
        <function-ref name="empty" scoped="" ref="0xb6dd5e58"/>
        <function-ref name="size" scoped="" ref="0xb6dd7348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xb6dd65d0" loc="94:/home/wsn/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6dd65d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6dd67a8"/>
        <function-ref name="getPayload" scoped="" ref="0xb6dd6888"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6dd6968"/>
        <function-ref name="cancel" scoped="" ref="0xb6dd6a48"/>
        <function-ref name="sendDone" scoped="" ref="0xb6dd6b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb6dd6ca8" loc="95:/home/wsn/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6dd6ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6dd6e80"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6dd4010"/>
        <function-ref name="getPayload" scoped="" ref="0xb6dd40f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6dd41d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6dd42b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0xb6dd1b18" loc="114:/home/wsn/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="retrySend" scoped="" ref="0xb6dd1b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6dd1cf0"/>
        <function-ref name="runTask" scoped="" ref="0xb6dd1dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6ddb5a0" loc="89:/home/wsn/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6ddb5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6ddb778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb6dd4420" loc="96:/home/wsn/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb6dd4420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb6dd45f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb6dd46d8"/>
        <function-ref name="led1On" scoped="" ref="0xb6dd47b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb6dd4898"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb6dd4978"/>
        <function-ref name="get" scoped="" ref="0xb6dd4a58"/>
        <function-ref name="led1Off" scoped="" ref="0xb6dd4b38"/>
        <function-ref name="led2Off" scoped="" ref="0xb6dd4eb8"/>
        <function-ref name="set" scoped="" ref="0xb6dd4c18"/>
        <function-ref name="led0On" scoped="" ref="0xb6dd4cf8"/>
        <function-ref name="led2On" scoped="" ref="0xb6dd4dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0xb6dd5370" loc="90:/home/wsn/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0xb6dd5370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0xb6dd5548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0xb6dc2228" loc="43:/home/wsn/tinyos-main/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0xb6dc2228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0xb6dc2400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6dbe8b0" loc="94:/home/wsn/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6dbe8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6dbea88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0xb6dbec30" loc="95:/home/wsn/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0xb6dbec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0xb6dbee08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0xb7096e28" loc="39:/home/wsn/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb7096e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb6db9050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0xb6db92b8" loc="40:/home/wsn/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0xb6db92b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6db9490"/>
        <function-ref name="stopDone" scoped="" ref="0xb6db9570"/>
        <function-ref name="start" scoped="" ref="0xb6db9650"/>
        <function-ref name="stop" scoped="" ref="0xb6db9730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6dc0040" loc="41:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6dc0040"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6dc0218"/>
        <function-ref name="stopDone" scoped="" ref="0xb6dc02f8"/>
        <function-ref name="start" scoped="" ref="0xb6dc03d8"/>
        <function-ref name="stop" scoped="" ref="0xb6dc04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb6db4120" loc="46:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb6db4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb6db42f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6db4478" loc="48:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6db4478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6db4650"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6db4730"/>
        <function-ref name="getPayload" scoped="" ref="0xb6db4810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6db48f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6db49d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6dc0918" loc="43:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6dc0918"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6dc0af0"/>
        <function-ref name="getPayload" scoped="" ref="0xb6dc0bd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6dc0cb0"/>
        <function-ref name="cancel" scoped="" ref="0xb6dc0d90"/>
        <function-ref name="sendDone" scoped="" ref="0xb6dc0e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb6db5988" loc="45:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb6db5988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6db5b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb6dac568" loc="52:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb6dac568"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb6dac740"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb6dac820"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb6dac900"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb6dac9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6db52f0" loc="44:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6db52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6db54c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb6db3850" loc="51:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6db3850"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6db3a28"/>
        <function-ref name="noAck" scoped="" ref="0xb6db3b08"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6db3be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb6db0010" loc="53:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb6db0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb6db01e8"/>
        <function-ref name="setRetries" scoped="" ref="0xb6db02c8"/>
        <function-ref name="getRetries" scoped="" ref="0xb6db03a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb6db0488"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb6db0568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb6db4b68" loc="49:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6db4b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6db4d40"/>
        <function-ref name="source" scoped="" ref="0xb6db4e20"/>
        <function-ref name="address" scoped="" ref="0xb6db4f00"/>
        <function-ref name="destination" scoped="" ref="0xb6db3010"/>
        <function-ref name="setSource" scoped="" ref="0xb6db30f0"/>
        <function-ref name="setDestination" scoped="" ref="0xb6db31d0"/>
        <function-ref name="type" scoped="" ref="0xb6db32b0"/>
        <function-ref name="setType" scoped="" ref="0xb6db3390"/>
        <function-ref name="isForMe" scoped="" ref="0xb6db3470"/>
        <function-ref name="setGroup" scoped="" ref="0xb6db3550"/>
        <function-ref name="localGroup" scoped="" ref="0xb6db3630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xb6da5920" loc="54:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xb6da5920"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xb6da5af8"/>
        <function-ref name="setChannel" scoped="" ref="0xb6da5bd8"/>
        <function-ref name="getChannel" scoped="" ref="0xb6da5cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0xb6daf2a8" loc="56:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0xb6daf2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7396010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6dafda8"/>
        <function-ref name="clear" scoped="" ref="0xb6da6170"/>
        <function-ref name="isValid" scoped="" ref="0xb6daf9f8"/>
        <function-ref name="set" scoped="" ref="0xb6da6520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb6da6c58" loc="57:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6da6c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7398508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6d9f828"/>
        <function-ref name="clear" scoped="" ref="0xb6d9fbd8"/>
        <function-ref name="isValid" scoped="" ref="0xb6d9f478"/>
        <function-ref name="set" scoped="" ref="0xb6d9e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6d9ea88" loc="45:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6d9ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6d9ec60"/>
        <function-ref name="stopDone" scoped="" ref="0xb6d9ed40"/>
        <function-ref name="start" scoped="" ref="0xb6d9ee20"/>
        <function-ref name="stop" scoped="" ref="0xb6d9ef00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xb6d8e158" loc="66:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb6d8e158"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6d8ed20"/>
        <function-ref name="get" scoped="" ref="0xb6d8ea60"/>
        <function-ref name="isSet" scoped="" ref="0xb6d8e7a0"/>
        <function-ref name="set" scoped="" ref="0xb6d8d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb6d8aca0" loc="71:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6d8aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7398508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6d887c0"/>
        <function-ref name="clear" scoped="" ref="0xb6d88b70"/>
        <function-ref name="isValid" scoped="" ref="0xb6d88410"/>
        <function-ref name="set" scoped="" ref="0xb6d88f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb6d9aa68" loc="50:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb6d9aa68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb6d9ac40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6d98bb0" loc="56:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6d98bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6d98d88"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6d98e68"/>
        <function-ref name="getPayload" scoped="" ref="0xb6d97010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6d970f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6d971d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6d9b380" loc="47:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6d9b380"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6d9b558"/>
        <function-ref name="getPayload" scoped="" ref="0xb6d9b638"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6d9b718"/>
        <function-ref name="cancel" scoped="" ref="0xb6d9b7f8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6d9b8d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb6d9a3f0" loc="49:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb6d9a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6d9a5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xb6d93dc8" loc="65:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6d93dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6d909a8"/>
        <function-ref name="get" scoped="" ref="0xb6d906e8"/>
        <function-ref name="isSet" scoped="" ref="0xb6d90428"/>
        <function-ref name="set" scoped="" ref="0xb6d90c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb6d965c8" loc="60:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb6d965c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb6d967a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb6d96880"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb6d96960"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb6d96a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6d9bd40" loc="48:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6d9bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6d9bf18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xb6d8c2e8" loc="70:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6d8c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72fc710"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6d8cde8"/>
        <function-ref name="clear" scoped="" ref="0xb6d8a1b8"/>
        <function-ref name="isValid" scoped="" ref="0xb6d8ca38"/>
        <function-ref name="set" scoped="" ref="0xb6d8a568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0xb6d89720" loc="69:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6d89720"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72fc710"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6d89d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xb6d91a10" loc="64:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6d91a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6d935e8"/>
        <function-ref name="get" scoped="" ref="0xb6d93328"/>
        <function-ref name="isSet" scoped="" ref="0xb6d93068"/>
        <function-ref name="set" scoped="" ref="0xb6d938a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb6d96040" loc="59:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6d96040"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6d96218"/>
        <function-ref name="noAck" scoped="" ref="0xb6d962f8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6d963d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0xb6d98178" loc="53:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0xb6d98178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6d98350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb6d96be8" loc="61:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb6d96be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb6d96dc0"/>
        <function-ref name="setRetries" scoped="" ref="0xb6d96ea0"/>
        <function-ref name="getRetries" scoped="" ref="0xb6d95010"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb6d950f0"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb6d951d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb6d97368" loc="57:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6d97368"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6d97540"/>
        <function-ref name="source" scoped="" ref="0xb6d97620"/>
        <function-ref name="address" scoped="" ref="0xb6d97700"/>
        <function-ref name="destination" scoped="" ref="0xb6d977e0"/>
        <function-ref name="setSource" scoped="" ref="0xb6d978c0"/>
        <function-ref name="setDestination" scoped="" ref="0xb6d979a0"/>
        <function-ref name="type" scoped="" ref="0xb6d97a80"/>
        <function-ref name="setType" scoped="" ref="0xb6d97b60"/>
        <function-ref name="isForMe" scoped="" ref="0xb6d97c40"/>
        <function-ref name="setGroup" scoped="" ref="0xb6d97d20"/>
        <function-ref name="localGroup" scoped="" ref="0xb6d97e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xb6d95390" loc="62:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xb6d95390"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xb6d955e8"/>
        <function-ref name="setChannel" scoped="" ref="0xb6d956c8"/>
        <function-ref name="getChannel" scoped="" ref="0xb6d957a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb6d89228" loc="67:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6d89228"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb6d89400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0xb6d98858" loc="54:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0xb6d98858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6d98a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6d878f0" loc="41:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6d878f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6d87ac8"/>
        <function-ref name="stopDone" scoped="" ref="0xb6d87ba8"/>
        <function-ref name="start" scoped="" ref="0xb6d87c88"/>
        <function-ref name="stop" scoped="" ref="0xb6d87d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xb6d6cb60" loc="90:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb6d6cb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6d6b780"/>
        <function-ref name="get" scoped="" ref="0xb6d6b4c0"/>
        <function-ref name="isSet" scoped="" ref="0xb6d6b200"/>
        <function-ref name="set" scoped="" ref="0xb6d6ba40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0xb6d79c78" loc="70:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0xb6d79c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb6d79e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0xb6d76418" loc="72:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0xb6d76418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6d76670"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6d76750"/>
        <function-ref name="request" scoped="" ref="0xb6d76830"/>
        <function-ref name="granted" scoped="" ref="0xb6d76910"/>
        <function-ref name="isOwner" scoped="" ref="0xb6d769f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb6d828e0" loc="57:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb6d828e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb6d82ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6d831f8" loc="54:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6d831f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6d833d0"/>
        <function-ref name="getPayload" scoped="" ref="0xb6d834b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6d83590"/>
        <function-ref name="cancel" scoped="" ref="0xb6d83670"/>
        <function-ref name="sendDone" scoped="" ref="0xb6d83750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb6d82268" loc="56:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb6d82268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6d82440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0xb6d705b8" loc="74:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xb6d705b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0xb6d70790"/>
        <function-ref name="address" scoped="" ref="0xb6d70870"/>
        <function-ref name="destination" scoped="" ref="0xb6d70950"/>
        <function-ref name="setSource" scoped="" ref="0xb6d70a30"/>
        <function-ref name="setDestination" scoped="" ref="0xb6d70b10"/>
        <function-ref name="pan" scoped="" ref="0xb6d70bf0"/>
        <function-ref name="setPan" scoped="" ref="0xb6d70cd0"/>
        <function-ref name="isForMe" scoped="" ref="0xb6d70db0"/>
        <function-ref name="localPan" scoped="" ref="0xb6d70e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0xb6d78148" loc="75:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0xb6d78148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6d78320"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6d78400"/>
        <function-ref name="getPayload" scoped="" ref="0xb6d784e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6d785c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6d786a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xb6d6e7f0" loc="89:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6d6e7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6d6c3d8"/>
        <function-ref name="get" scoped="" ref="0xb6d6c118"/>
        <function-ref name="isSet" scoped="" ref="0xb6d6ee38"/>
        <function-ref name="set" scoped="" ref="0xb6d6c698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb6d78e48" loc="79:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb6d78e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb6d75050"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb6d75130"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb6d75210"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb6d752f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0xb6d807d0" loc="64:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0xb6d807d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6d809a8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6d80a88"/>
        <function-ref name="getPayload" scoped="" ref="0xb6d80b68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6d80c48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6d80d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6d83bb8" loc="55:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6d83bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6d83d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xb6d69ec8" loc="94:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6d69ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72fc710"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6d68b30"/>
        <function-ref name="clear" scoped="" ref="0xb6d68ee0"/>
        <function-ref name="isValid" scoped="" ref="0xb6d68780"/>
        <function-ref name="set" scoped="" ref="0xb6d672d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0xb6d69330" loc="93:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6d69330"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72fc710"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6d69978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xb6d6f368" loc="88:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6d6f368"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6d6e010"/>
        <function-ref name="get" scoped="" ref="0xb6d6fc70"/>
        <function-ref name="isSet" scoped="" ref="0xb6d6f9b0"/>
        <function-ref name="set" scoped="" ref="0xb6d6e2d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb6d788c0" loc="78:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6d788c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6d78a98"/>
        <function-ref name="noAck" scoped="" ref="0xb6d78b78"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6d78c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0xb6d79098" loc="68:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0xb6d79098"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6d79270"/>
        <function-ref name="getPayload" scoped="" ref="0xb6d79350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6d79430"/>
        <function-ref name="cancel" scoped="" ref="0xb6d79510"/>
        <function-ref name="sendDone" scoped="" ref="0xb6d795f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0xb6d81010" loc="60:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0xb6d81010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6d811e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb6d75498" loc="80:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb6d75498"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb6d75670"/>
        <function-ref name="setRetries" scoped="" ref="0xb6d75750"/>
        <function-ref name="getRetries" scoped="" ref="0xb6d75830"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb6d75910"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb6d759f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xb6d75bb0" loc="86:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xb6d75bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xb6d75d88"/>
        <function-ref name="setChannel" scoped="" ref="0xb6d75e68"/>
        <function-ref name="getChannel" scoped="" ref="0xb6d6f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb6d81a60" loc="63:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6d81a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6d81c38"/>
        <function-ref name="source" scoped="" ref="0xb6d81d18"/>
        <function-ref name="address" scoped="" ref="0xb6d81df8"/>
        <function-ref name="destination" scoped="" ref="0xb6d81ed8"/>
        <function-ref name="setSource" scoped="" ref="0xb6d80010"/>
        <function-ref name="setDestination" scoped="" ref="0xb6d800f0"/>
        <function-ref name="type" scoped="" ref="0xb6d801d0"/>
        <function-ref name="setType" scoped="" ref="0xb6d802b0"/>
        <function-ref name="isForMe" scoped="" ref="0xb6d80390"/>
        <function-ref name="setGroup" scoped="" ref="0xb6d80470"/>
        <function-ref name="localGroup" scoped="" ref="0xb6d80550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb6d67a08" loc="95:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6d67a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7398508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6d665b0"/>
        <function-ref name="clear" scoped="" ref="0xb6d66960"/>
        <function-ref name="isValid" scoped="" ref="0xb6d66200"/>
        <function-ref name="set" scoped="" ref="0xb6d66d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0xb6d79828" loc="69:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0xb6d79828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6d79a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb6d6bdf0" loc="91:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6d6bdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb6d69010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0xb6d816f0" loc="61:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0xb6d816f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6d818c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0xb6d631a8" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="RF230RadioC.TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb6d631a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb6d63380"/>
        <function-ref name="suspend" scoped="" ref="0xb6d63460"/>
        <function-ref name="resume" scoped="" ref="0xb6d63540"/>
        <function-ref name="run" scoped="" ref="0xb6d63620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0xb6d4ab00" loc="51:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0xb6d4ab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb6d4acd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0xb6d49580" loc="47:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0xb6d49580"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0xb6d49758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0xb6d3fac0" loc="50:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0xb6d3fac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6d3fc98"/>
        <function-ref name="checkFrame" scoped="" ref="0xb6d3fd78"/>
        <function-ref name="source" scoped="" ref="0xb6d3fe58"/>
        <function-ref name="destination" scoped="" ref="0xb6d4a010"/>
        <function-ref name="setSource" scoped="" ref="0xb6d4a0f0"/>
        <function-ref name="setDestination" scoped="" ref="0xb6d4a1d0"/>
        <function-ref name="setGroup" scoped="" ref="0xb6d4a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0xb6d55040" loc="49:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0xb6d55040"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0xb6d55218"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0xb6d552f8"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0xb6d553d8"/>
        <function-ref name="getTransmitTime" scoped="" ref="0xb6d554b8"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0xb6d55598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb6d2b830" loc="61:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb6d2b830"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6d2ba08"/>
        <function-ref name="wait" scoped="" ref="0xb6d2bae8"/>
        <function-ref name="cancel" scoped="" ref="0xb6d2bbc8"/>
        <function-ref name="isFree" scoped="" ref="0xb6d2bca8"/>
        <function-ref name="getNow" scoped="" ref="0xb6d2bd88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0xb6d28a28" loc="62:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0xb6d28a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6d28c00"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6d28ce0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6d28dc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6d28ea0"/>
        <function-ref name="headerLength" scoped="" ref="0xb6d2d010"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6d2d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xb6d2d480" loc="64:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6d2d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72fc710"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6d2a010"/>
        <function-ref name="clear" scoped="" ref="0xb6d2a3c0"/>
        <function-ref name="isValid" scoped="" ref="0xb6d2dc50"/>
        <function-ref name="set" scoped="" ref="0xb6d2a770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0xb6d53128" loc="43:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0xb6d53128"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6d53300"/>
        <function-ref name="headerLength" scoped="" ref="0xb6d533e0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6d534c0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0xb6d535a0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xb6d53680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0xb6d56848" loc="46:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0xb6d56848"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0xb6d56a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0xb6d4e250" loc="44:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0xb6d4e250"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0xb6d4e428"/>
        <function-ref name="createAckPacket" scoped="" ref="0xb6d4e508"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb6d4e5e8"/>
        <function-ref name="isAckPacket" scoped="" ref="0xb6d4e6c8"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0xb6d4e7a8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0xb6d4e888"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb6d4e968"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb6d4ea48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0xb6d2e3a8" loc="60:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6d2e3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb6d2e580"/>
        <function-ref name="getDSN" scoped="" ref="0xb6d2e660"/>
        <function-ref name="setFCF" scoped="" ref="0xb6d2e740"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb6d2e820"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb6d2e900"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb6d2e9e0"/>
        <function-ref name="setDSN" scoped="" ref="0xb6d2eac0"/>
        <function-ref name="createAckReply" scoped="" ref="0xb6d2eba0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb6d2ec80"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb6d2ed60"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb6d2ee40"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb6d2ef20"/>
        <function-ref name="localAddr" scoped="" ref="0xb6d3e018"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb6d3e178"/>
        <function-ref name="localPan" scoped="" ref="0xb6d3e258"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb6d3e338"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb6d3e418"/>
        <function-ref name="setFramePending" scoped="" ref="0xb6d3e4f8"/>
        <function-ref name="setDestPan" scoped="" ref="0xb6d3e5d8"/>
        <function-ref name="isForMe" scoped="" ref="0xb6d3e6b8"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb6d3e798"/>
        <function-ref name="getFCF" scoped="" ref="0xb6d3e878"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb6d3e958"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb6d3ea38"/>
        <function-ref name="getFramePending" scoped="" ref="0xb6d3eb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0xb6d4c8f8" loc="45:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0xb6d4c8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb6d4cad0"/>
        <function-ref name="reportChannelError" scoped="" ref="0xb6d4cbb0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb6d4cc90"/>
        <function-ref name="getSender" scoped="" ref="0xb6d4cd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0xb6d476d8" loc="48:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0xb6d476d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xb6d478b0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xb6d47990"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xb6d47a70"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xb6d47b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0xb6cf3ee0" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb6cf3ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6cf10e0"/>
        <function-ref name="wait" scoped="" ref="0xb6cf11c0"/>
        <function-ref name="cancel" scoped="" ref="0xb6cf12a0"/>
        <function-ref name="isFree" scoped="" ref="0xb6cf1380"/>
        <function-ref name="getNow" scoped="" ref="0xb6cf1460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb6cf1d68" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6cf1d68"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb74017d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb74017d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72fc710"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0xb72fc9b8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6cd9258"/>
        <function-ref name="fired" scoped="" ref="0xb6cdaa00"/>
        <function-ref name="startAt" scoped="" ref="0xb6cdaef0"/>
        <function-ref name="isRunning" scoped="" ref="0xb6cdac78"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6cd94d0"/>
        <function-ref name="start" scoped="" ref="0xb6cda4e8"/>
        <function-ref name="stop" scoped="" ref="0xb6cda788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb6cf15d0" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb6cf15d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb6cf17a8"/>
        <function-ref name="suspend" scoped="" ref="0xb6cf1888"/>
        <function-ref name="resume" scoped="" ref="0xb6cf1968"/>
        <function-ref name="run" scoped="" ref="0xb6cf1a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0xb659cd20" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb659cd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb659cf08"/>
        <function-ref name="wait" scoped="" ref="0xb659a010"/>
        <function-ref name="cancel" scoped="" ref="0xb659a0f0"/>
        <function-ref name="isFree" scoped="" ref="0xb659a1d0"/>
        <function-ref name="getNow" scoped="" ref="0xb659a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb659a540" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb659a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72fc710"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0xb72fc9b8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6599ab8"/>
        <function-ref name="fired" scoped="" ref="0xb6599288"/>
        <function-ref name="startAt" scoped="" ref="0xb6599778"/>
        <function-ref name="isRunning" scoped="" ref="0xb6599500"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6599d30"/>
        <function-ref name="start" scoped="" ref="0xb659ac90"/>
        <function-ref name="stop" scoped="" ref="0xb6599010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb6597010" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb6597010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb65971e8"/>
        <function-ref name="suspend" scoped="" ref="0xb65972c8"/>
        <function-ref name="resume" scoped="" ref="0xb65973a8"/>
        <function-ref name="run" scoped="" ref="0xb6597488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6c717a8" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6c717a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6c71980"/>
        <function-ref name="cancel" scoped="" ref="0xb6c71a60"/>
        <function-ref name="sendDone" scoped="" ref="0xb6c71b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6c71ca0" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6c71ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6c71e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb6c72468" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb6c72468"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb6c72650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6c74d98" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6c74d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c73010"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6c730f0"/>
        <function-ref name="getPayload" scoped="" ref="0xb6c731d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6c732b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6c73390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6c73568" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6c73568"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6c73750"/>
        <function-ref name="getPayload" scoped="" ref="0xb6c73830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6c73910"/>
        <function-ref name="cancel" scoped="" ref="0xb6c739f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6c73ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb6c720a8" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb6c720a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6c72290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6c71010" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6c71010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c711e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6c712c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6c713a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6c71488"/>
        <function-ref name="headerLength" scoped="" ref="0xb6c71568"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6c71648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6c70010" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6c70010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6c701e8"/>
        <function-ref name="checkFrame" scoped="" ref="0xb6c702c8"/>
        <function-ref name="source" scoped="" ref="0xb6c703a8"/>
        <function-ref name="destination" scoped="" ref="0xb6c70488"/>
        <function-ref name="setSource" scoped="" ref="0xb6c70568"/>
        <function-ref name="setDestination" scoped="" ref="0xb6c70648"/>
        <function-ref name="setGroup" scoped="" ref="0xb6c70728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6c73ca8" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6c73ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6c73e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0xb6c72848" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0xb6c72848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6c72a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb6c741c0" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6c741c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6c74398"/>
        <function-ref name="source" scoped="" ref="0xb6c74478"/>
        <function-ref name="address" scoped="" ref="0xb6c74558"/>
        <function-ref name="destination" scoped="" ref="0xb6c74638"/>
        <function-ref name="setSource" scoped="" ref="0xb6c74718"/>
        <function-ref name="setDestination" scoped="" ref="0xb6c747f8"/>
        <function-ref name="type" scoped="" ref="0xb6c748d8"/>
        <function-ref name="setType" scoped="" ref="0xb6c749b8"/>
        <function-ref name="isForMe" scoped="" ref="0xb6c74a98"/>
        <function-ref name="setGroup" scoped="" ref="0xb6c74b78"/>
        <function-ref name="localGroup" scoped="" ref="0xb6c74c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0xb6c72c28" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0xb6c72c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6c72e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6587ac8" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6587ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6587ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb65875d0" loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb65875d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb65877a8"/>
        <function-ref name="cancel" scoped="" ref="0xb6587888"/>
        <function-ref name="sendDone" scoped="" ref="0xb6587968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb6588298" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb6588298"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb6588480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb658abe8" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb658abe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb658adc0"/>
        <function-ref name="payloadLength" scoped="" ref="0xb658aea0"/>
        <function-ref name="getPayload" scoped="" ref="0xb6589010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb65890f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb65891d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb65893a8" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb65893a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6589590"/>
        <function-ref name="getPayload" scoped="" ref="0xb6589670"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6589750"/>
        <function-ref name="cancel" scoped="" ref="0xb6589830"/>
        <function-ref name="sendDone" scoped="" ref="0xb6589910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb6589ec8" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb6589ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb65880c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb658f860" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb658f860"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb658fa38"/>
        <function-ref name="payloadLength" scoped="" ref="0xb658fb18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb658fbf8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb658fcd8"/>
        <function-ref name="headerLength" scoped="" ref="0xb658fdb8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb658fe98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6587e00" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6587e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6586070"/>
        <function-ref name="checkFrame" scoped="" ref="0xb6586150"/>
        <function-ref name="source" scoped="" ref="0xb6586230"/>
        <function-ref name="destination" scoped="" ref="0xb6586310"/>
        <function-ref name="setSource" scoped="" ref="0xb65863f0"/>
        <function-ref name="setDestination" scoped="" ref="0xb65864d0"/>
        <function-ref name="setGroup" scoped="" ref="0xb65865b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0xb65866f0" loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb65866f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb65868c8"/>
        <function-ref name="changed" scoped="" ref="0xb65869a8"/>
        <function-ref name="amGroup" scoped="" ref="0xb6586a88"/>
        <function-ref name="setAddress" scoped="" ref="0xb6586b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6588dd0" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6588dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6587010"/>
        <function-ref name="payloadLength" scoped="" ref="0xb65870f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb65871d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb65872b0"/>
        <function-ref name="headerLength" scoped="" ref="0xb6587390"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6587470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6589ae8" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6589ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6589cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0xb6588678" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0xb6588678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6588860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb658a010" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb658a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb658a1e8"/>
        <function-ref name="source" scoped="" ref="0xb658a2c8"/>
        <function-ref name="address" scoped="" ref="0xb658a3a8"/>
        <function-ref name="destination" scoped="" ref="0xb658a488"/>
        <function-ref name="setSource" scoped="" ref="0xb658a568"/>
        <function-ref name="setDestination" scoped="" ref="0xb658a648"/>
        <function-ref name="type" scoped="" ref="0xb658a728"/>
        <function-ref name="setType" scoped="" ref="0xb658a808"/>
        <function-ref name="isForMe" scoped="" ref="0xb658a8e8"/>
        <function-ref name="setGroup" scoped="" ref="0xb658a9c8"/>
        <function-ref name="localGroup" scoped="" ref="0xb658aaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0xb6588a58" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0xb6588a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6588c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0xb6c84e48" loc="54:/home/wsn/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb6c84e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb6c81050"/>
        <function-ref name="changed" scoped="" ref="0xb6c81130"/>
        <function-ref name="amGroup" scoped="" ref="0xb6c81210"/>
        <function-ref name="setAddress" scoped="" ref="0xb6c812f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6c6c1a0" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6c6c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6c6c378"/>
        <function-ref name="cancel" scoped="" ref="0xb6c6c458"/>
        <function-ref name="sendDone" scoped="" ref="0xb6c6c538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0xb6c6c678" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb6c6c678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6c6c850"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6c6c930"/>
        <function-ref name="request" scoped="" ref="0xb6c6ca10"/>
        <function-ref name="granted" scoped="" ref="0xb6c6caf0"/>
        <function-ref name="isOwner" scoped="" ref="0xb6c6cbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0xb6c62c60" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0xb6c62c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6c62e38"/>
        <function-ref name="cancel" scoped="" ref="0xb6c62f18"/>
        <function-ref name="sendDone" scoped="" ref="0xb6c6c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb6c2a5a8" loc="86:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb6c2a5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb6c2a790"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb6c2a870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb6c2ae60" loc="89:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb6c2ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb6c29070"/>
        <function-ref name="configure" scoped="" ref="0xb6c29150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb6c60e18" loc="85:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb6c60e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6c2a050"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6c2a130"/>
        <function-ref name="request" scoped="" ref="0xb6c2a210"/>
        <function-ref name="granted" scoped="" ref="0xb6c2a2f0"/>
        <function-ref name="isOwner" scoped="" ref="0xb6c2a3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb6c2a9b0" loc="87:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb6c2a9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb6c2ab88"/>
        <function-ref name="userId" scoped="" ref="0xb6c2ac68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6550dc0" loc="44:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6550dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb654e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xb654e170" loc="45:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0xb654e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb654e348"/>
        <function-ref name="isEmpty" scoped="" ref="0xb654e428"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb654e508"/>
        <function-ref name="dequeue" scoped="" ref="0xb654e5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb654d8c0" loc="52:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb654d8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb654daa8"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb654db88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb654c218" loc="56:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb654c218"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb654c400"/>
        <function-ref name="configure" scoped="" ref="0xb654c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb654c640" loc="57:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb654c640"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb654c818"/>
        <function-ref name="isEmpty" scoped="" ref="0xb654c8f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb654c9d8"/>
        <function-ref name="dequeue" scoped="" ref="0xb654cab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb654d180" loc="51:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb654d180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb654d368"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb654d448"/>
        <function-ref name="request" scoped="" ref="0xb654d528"/>
        <function-ref name="granted" scoped="" ref="0xb654d608"/>
        <function-ref name="isOwner" scoped="" ref="0xb654d6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb654dcc8" loc="53:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb654dcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb654dea0"/>
        <function-ref name="userId" scoped="" ref="0xb654c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb654cc38" loc="68:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0xb654cc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb654ce10"/>
        <function-ref name="runTask" scoped="" ref="0xb654cef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6c0a250" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6c0a250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6c0a428"/>
        <function-ref name="cancel" scoped="" ref="0xb6c0a508"/>
        <function-ref name="sendDone" scoped="" ref="0xb6c0a5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6c0a748" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6c0a748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6c0a920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb6c27ce8" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb6c27ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb6c27ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6c28c68" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6c28c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c28e40"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6c28f20"/>
        <function-ref name="getPayload" scoped="" ref="0xb6c27018"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6c270f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6c271d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0xb6c0ba30" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6c0ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c0bc08"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6c0bce8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6c0bdc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6c0bea8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6c0a010"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6c0a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0xb6c0c070" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6c0c070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb6c0c248"/>
        <function-ref name="getDSN" scoped="" ref="0xb6c0c328"/>
        <function-ref name="setFCF" scoped="" ref="0xb6c0c408"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb6c0c4e8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb6c0c5c8"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb6c0c6a8"/>
        <function-ref name="setDSN" scoped="" ref="0xb6c0c788"/>
        <function-ref name="createAckReply" scoped="" ref="0xb6c0c868"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb6c0c948"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb6c0ca28"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb6c0cb08"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb6c0cbe8"/>
        <function-ref name="localAddr" scoped="" ref="0xb6c0ccc8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb6c0ce28"/>
        <function-ref name="localPan" scoped="" ref="0xb6c0cf08"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb6c0b010"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb6c0b0f0"/>
        <function-ref name="setFramePending" scoped="" ref="0xb6c0b1d0"/>
        <function-ref name="setDestPan" scoped="" ref="0xb6c0b2b0"/>
        <function-ref name="isForMe" scoped="" ref="0xb6c0b390"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb6c0b470"/>
        <function-ref name="getFCF" scoped="" ref="0xb6c0b550"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb6c0b630"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb6c0b710"/>
        <function-ref name="getFramePending" scoped="" ref="0xb6c0b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0xb6c27318" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0xb6c27318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6c274f0"/>
        <function-ref name="getPayload" scoped="" ref="0xb6c275d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6c276b0"/>
        <function-ref name="cancel" scoped="" ref="0xb6c27790"/>
        <function-ref name="sendDone" scoped="" ref="0xb6c27870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0xb6c279d0" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0xb6c279d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6c27ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6be6050" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6be6050"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6be6228"/>
        <function-ref name="cancel" scoped="" ref="0xb6be6308"/>
        <function-ref name="sendDone" scoped="" ref="0xb6be63e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6be6548" loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6be6548"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6be6720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0xb6c05880" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xb6c05880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c05a58"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6c05b38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6c05c18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6c05cf8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6c05dd8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6c05eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0xb6be8528" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0xb6be8528"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6be8700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6be6880" loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6be6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6be6a58"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6be6b38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6be6c18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6be6cf8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6be6dd8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6be6eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0xb6be8030" loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0xb6be8030"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6be8208"/>
        <function-ref name="cancel" scoped="" ref="0xb6be82e8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6be83c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0xb6c05050" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0xb6c05050"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6c05228"/>
        <function-ref name="cancel" scoped="" ref="0xb6c05308"/>
        <function-ref name="sendDone" scoped="" ref="0xb6c053e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0xb6c05548" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0xb6c05548"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6c05720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0xb6be8860" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0xb6be8860"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6be8a38"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6be8b18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6be8bf8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6be8cd8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6be8db8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6be8e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6b8bc70" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6b8bc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6b8be48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0xb6b8df10" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xb6b8df10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0xb6b8c108"/>
        <function-ref name="address" scoped="" ref="0xb6b8c1e8"/>
        <function-ref name="destination" scoped="" ref="0xb6b8c2c8"/>
        <function-ref name="setSource" scoped="" ref="0xb6b8c3a8"/>
        <function-ref name="setDestination" scoped="" ref="0xb6b8c488"/>
        <function-ref name="pan" scoped="" ref="0xb6b8c568"/>
        <function-ref name="setPan" scoped="" ref="0xb6b8c648"/>
        <function-ref name="isForMe" scoped="" ref="0xb6b8c728"/>
        <function-ref name="localPan" scoped="" ref="0xb6b8c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6b8c948" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6b8c948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6b8cb20"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6b8cc00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6b8cce0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6b8cdc0"/>
        <function-ref name="headerLength" scoped="" ref="0xb6b8cea0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6b8b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0xb6b8e530" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6b8e530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb6b8e708"/>
        <function-ref name="getDSN" scoped="" ref="0xb6b8e7e8"/>
        <function-ref name="setFCF" scoped="" ref="0xb6b8e8c8"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb6b8e9a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb6b8ea88"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb6b8eb68"/>
        <function-ref name="setDSN" scoped="" ref="0xb6b8ec48"/>
        <function-ref name="createAckReply" scoped="" ref="0xb6b8ed28"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb6b8ee08"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb6b8eee8"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb6b8d010"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb6b8d0f0"/>
        <function-ref name="localAddr" scoped="" ref="0xb6b8d1d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb6b8d330"/>
        <function-ref name="localPan" scoped="" ref="0xb6b8d410"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb6b8d4f0"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb6b8d5d0"/>
        <function-ref name="setFramePending" scoped="" ref="0xb6b8d6b0"/>
        <function-ref name="setDestPan" scoped="" ref="0xb6b8d790"/>
        <function-ref name="isForMe" scoped="" ref="0xb6b8d870"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb6b8d950"/>
        <function-ref name="getFCF" scoped="" ref="0xb6b8da30"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb6b8db10"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb6b8dbf0"/>
        <function-ref name="getFramePending" scoped="" ref="0xb6b8dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6b8b4d8" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6b8b4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6b8b6b0"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6b8b790"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6b8b870"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6b8b950"/>
        <function-ref name="headerLength" scoped="" ref="0xb6b8ba30"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6b8bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6b8b170" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6b8b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6b8b348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb65107a8" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb65107a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6510980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0xb65124f0" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xb65124f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0xb65126c8"/>
        <function-ref name="address" scoped="" ref="0xb65127a8"/>
        <function-ref name="destination" scoped="" ref="0xb6512888"/>
        <function-ref name="setSource" scoped="" ref="0xb6512968"/>
        <function-ref name="setDestination" scoped="" ref="0xb6512a48"/>
        <function-ref name="pan" scoped="" ref="0xb6512b28"/>
        <function-ref name="setPan" scoped="" ref="0xb6512c08"/>
        <function-ref name="isForMe" scoped="" ref="0xb6512ce8"/>
        <function-ref name="localPan" scoped="" ref="0xb6512dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6512f08" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6512f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb65110f0"/>
        <function-ref name="payloadLength" scoped="" ref="0xb65111d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb65112b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6511390"/>
        <function-ref name="headerLength" scoped="" ref="0xb6511470"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6511550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0xb65199f0" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb65199f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb6519bc8"/>
        <function-ref name="getDSN" scoped="" ref="0xb6519ca8"/>
        <function-ref name="setFCF" scoped="" ref="0xb6519d88"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb6519e68"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb6513010"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb65130f0"/>
        <function-ref name="setDSN" scoped="" ref="0xb65131d0"/>
        <function-ref name="createAckReply" scoped="" ref="0xb65132b0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb6513390"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb6513470"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb6513550"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb6513630"/>
        <function-ref name="localAddr" scoped="" ref="0xb6513710"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb6513870"/>
        <function-ref name="localPan" scoped="" ref="0xb6513950"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb6513a30"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb6513b10"/>
        <function-ref name="setFramePending" scoped="" ref="0xb6513bf0"/>
        <function-ref name="setDestPan" scoped="" ref="0xb6513cd0"/>
        <function-ref name="isForMe" scoped="" ref="0xb6513db0"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb6513e90"/>
        <function-ref name="getFCF" scoped="" ref="0xb6512010"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb65120f0"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb65121d0"/>
        <function-ref name="getFramePending" scoped="" ref="0xb65122b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0xb65119f8" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb65119f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb6511bd0"/>
        <function-ref name="changed" scoped="" ref="0xb6511cb0"/>
        <function-ref name="amGroup" scoped="" ref="0xb6511d90"/>
        <function-ref name="setAddress" scoped="" ref="0xb6511e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb65116b0" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb65116b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6511888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6510010" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6510010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb65101e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb65102c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb65103a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6510488"/>
        <function-ref name="headerLength" scoped="" ref="0xb6510568"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6510648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6b86678" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6b86678"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6b86850"/>
        <function-ref name="cancel" scoped="" ref="0xb6b86930"/>
        <function-ref name="sendDone" scoped="" ref="0xb6b86a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6b86b70" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6b86b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6b86d48"/>
        <function-ref name="header" scoped="" ref="0xb6b86e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6b87d18" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6b87d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6b87ef0"/>
        <function-ref name="cancel" scoped="" ref="0xb6b86010"/>
        <function-ref name="sendDone" scoped="" ref="0xb6b860f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6b4d010" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6b4d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb6b4d1e8"/>
        <function-ref name="reportChannelError" scoped="" ref="0xb6b4d2c8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb6b4d3a8"/>
        <function-ref name="getSender" scoped="" ref="0xb6b4d488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6b86230" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6b86230"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6b86408"/>
        <function-ref name="header" scoped="" ref="0xb6b864e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb64e4770" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb64e4770"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb64e4948"/>
        <function-ref name="cancel" scoped="" ref="0xb64e4a28"/>
        <function-ref name="sendDone" scoped="" ref="0xb64e4b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb64e4c68" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb64e4c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb64e4e40"/>
        <function-ref name="header" scoped="" ref="0xb64e4f20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0xb64e2cc8" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb64e2cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb64e2ea0"/>
        <function-ref name="clearAll" scoped="" ref="0xb64e1010"/>
        <function-ref name="get" scoped="" ref="0xb64e10f0"/>
        <function-ref name="set" scoped="" ref="0xb64e11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb64e7b18" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb64e7b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb64e7cf0"/>
        <function-ref name="cancel" scoped="" ref="0xb64e7dd0"/>
        <function-ref name="sendDone" scoped="" ref="0xb64e7eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0xb64e2630" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xb64e2630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xb64e2808"/>
        <function-ref name="insertNode" scoped="" ref="0xb64e28e8"/>
        <function-ref name="getNode" scoped="" ref="0xb64e29c8"/>
        <function-ref name="evicted" scoped="" ref="0xb64e2aa8"/>
        <function-ref name="getIndex" scoped="" ref="0xb64e2b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb64e4010" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb64e4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb64e41e8"/>
        <function-ref name="header" scoped="" ref="0xb64e42c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb64e4408" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb64e4408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb64e45e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0xb64e2078" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0xb64e2078"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb64e2250"/>
        <function-ref name="reportChannelError" scoped="" ref="0xb64e2330"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb64e2410"/>
        <function-ref name="getSender" scoped="" ref="0xb64e24f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0xb6b69010" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xb6b69010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xb6b691e8"/>
        <function-ref name="insertNode" scoped="" ref="0xb6b692c8"/>
        <function-ref name="getNode" scoped="" ref="0xb6b693a8"/>
        <function-ref name="evicted" scoped="" ref="0xb6b69488"/>
        <function-ref name="getIndex" scoped="" ref="0xb6b69568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0xb6b66a38" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb6b66a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6b66c10"/>
        <function-ref name="clearAll" scoped="" ref="0xb6b66cf0"/>
        <function-ref name="get" scoped="" ref="0xb6b66dd0"/>
        <function-ref name="set" scoped="" ref="0xb6b66eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0xb6b66010" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xb6b66010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xb6b661e8"/>
        <function-ref name="insertNode" scoped="" ref="0xb6b662c8"/>
        <function-ref name="getNode" scoped="" ref="0xb6b663a8"/>
        <function-ref name="evicted" scoped="" ref="0xb6b66488"/>
        <function-ref name="getIndex" scoped="" ref="0xb6b66568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6b69be0" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6b69be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6b69db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0xb64e01b0" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb64e01b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb64e0388"/>
        <function-ref name="clearAll" scoped="" ref="0xb64e0468"/>
        <function-ref name="get" scoped="" ref="0xb64e0548"/>
        <function-ref name="set" scoped="" ref="0xb64e0628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6b44e70" loc="85:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6b44e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6b43070"/>
        <function-ref name="cancel" scoped="" ref="0xb6b43150"/>
        <function-ref name="sendDone" scoped="" ref="0xb6b43230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6b43390" loc="86:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6b43390"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6b43568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0xb6b42a68" loc="93:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0xb6b42a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6b42c40"/>
        <function-ref name="noAck" scoped="" ref="0xb6b42d20"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6b42e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6b4b760" loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6b4b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6b4b938"/>
        <function-ref name="cancel" scoped="" ref="0xb6b4ba18"/>
        <function-ref name="sendDone" scoped="" ref="0xb6b4baf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6b446a8" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6b446a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6b44880"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6b44960"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6b44a40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6b44b20"/>
        <function-ref name="headerLength" scoped="" ref="0xb6b44c00"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6b44ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6b436c8" loc="87:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6b436c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6b438a0"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6b43980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6b43a60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6b43b40"/>
        <function-ref name="headerLength" scoped="" ref="0xb6b43c20"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6b43d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0xb6b42390" loc="92:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0xb6b42390"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb6b42568"/>
        <function-ref name="setRetries" scoped="" ref="0xb6b42648"/>
        <function-ref name="getRetries" scoped="" ref="0xb6b42728"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb6b42808"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb6b428e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6b4bc58" loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6b4bc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6b4be30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0xb6b43e40" loc="88:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6b43e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6b42050"/>
        <function-ref name="noAck" scoped="" ref="0xb6b42130"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6b42210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb6b44010" loc="79:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb6b44010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb6b441e8"/>
        <function-ref name="setRetries" scoped="" ref="0xb6b442c8"/>
        <function-ref name="getRetries" scoped="" ref="0xb6b443a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb6b44488"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb6b44568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6b3f728" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6b3f728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6b3f900"/>
        <function-ref name="stopDone" scoped="" ref="0xb6b3f9e0"/>
        <function-ref name="start" scoped="" ref="0xb6b3fac0"/>
        <function-ref name="stop" scoped="" ref="0xb6b3fba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6b31938" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6b31938"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6b31b10"/>
        <function-ref name="cancel" scoped="" ref="0xb6b31bf0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6b31cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6b31e30" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6b31e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6b30050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6b3fd00" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6b3fd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6b3fed8"/>
        <function-ref name="cancel" scoped="" ref="0xb6b3e010"/>
        <function-ref name="sendDone" scoped="" ref="0xb6b3e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6b3e568" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6b3e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6b3e740"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6b3e820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6b3e900"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6b3e9e0"/>
        <function-ref name="headerLength" scoped="" ref="0xb6b3eac0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6b3eba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb6b3ece0" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb6b3ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb6b3eeb8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb6b31010"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb6b310f0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb6b311d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb6b31360" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb6b31360"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6b31538"/>
        <function-ref name="stopDone" scoped="" ref="0xb6b31618"/>
        <function-ref name="start" scoped="" ref="0xb6b316f8"/>
        <function-ref name="stop" scoped="" ref="0xb6b317d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6b3e250" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6b3e250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6b3e428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6b301b0" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6b301b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6b30388"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6b30468"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6b30548"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6b30628"/>
        <function-ref name="headerLength" scoped="" ref="0xb6b30708"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6b307e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb64d0b68" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb64d0b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb64d0d40"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb64d0e20"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb64d0f00"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb64cc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6b2dd20" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6b2dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6b2def8"/>
        <function-ref name="stopDone" scoped="" ref="0xb6b2c010"/>
        <function-ref name="start" scoped="" ref="0xb6b2c0f0"/>
        <function-ref name="stop" scoped="" ref="0xb6b2c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0xb6aef628" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb6aef628"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6aef800"/>
        <function-ref name="turnOn" scoped="" ref="0xb6aef8e0"/>
        <function-ref name="setChannel" scoped="" ref="0xb6aef9c0"/>
        <function-ref name="done" scoped="" ref="0xb6aefaa0"/>
        <function-ref name="standby" scoped="" ref="0xb6aefb80"/>
        <function-ref name="getChannel" scoped="" ref="0xb6aefc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6b2c330" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6b2c330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6b2c508"/>
        <function-ref name="cancel" scoped="" ref="0xb6b2c5e8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6b2c6c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0xb6aee310" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6aee310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6aee4e8"/>
        <function-ref name="header" scoped="" ref="0xb6aee5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6b2c828" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6b2c828"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6b2ca00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0xb6aefda0" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6aefda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6aee010"/>
        <function-ref name="ready" scoped="" ref="0xb6aee0f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6aee1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xb6b2cb40" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xb6b2cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xb6b2cd18"/>
        <function-ref name="setChannel" scoped="" ref="0xb6b2cdf8"/>
        <function-ref name="getChannel" scoped="" ref="0xb6b2ced8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb6aef070" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb6aef070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb6aef248"/>
        <function-ref name="suspend" scoped="" ref="0xb6aef328"/>
        <function-ref name="resume" scoped="" ref="0xb6aef408"/>
        <function-ref name="run" scoped="" ref="0xb6aef4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb64cbee0" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb64cbee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb64c80e0"/>
        <function-ref name="stopDone" scoped="" ref="0xb64c81c0"/>
        <function-ref name="start" scoped="" ref="0xb64c82a0"/>
        <function-ref name="stop" scoped="" ref="0xb64c8380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0xb64c84e0" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb64c84e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb64c86b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0xb64c7548" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb64c7548"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb64c7720"/>
        <function-ref name="turnOn" scoped="" ref="0xb64c7800"/>
        <function-ref name="setChannel" scoped="" ref="0xb64c78e0"/>
        <function-ref name="done" scoped="" ref="0xb64c79c0"/>
        <function-ref name="standby" scoped="" ref="0xb64c7aa0"/>
        <function-ref name="getChannel" scoped="" ref="0xb64c7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb64c8818" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb64c8818"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb64c89f0"/>
        <function-ref name="cancel" scoped="" ref="0xb64c8ad0"/>
        <function-ref name="sendDone" scoped="" ref="0xb64c8bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0xb64c4080" loc="189:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0xb64c4080"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb64c4258"/>
        <function-ref name="runTask" scoped="" ref="0xb64c4338"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0xb64c57e8" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb64c57e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb64c59c0"/>
        <function-ref name="header" scoped="" ref="0xb64c5aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0xb64c44b8" loc="144:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0xb64c44b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb64c4690"/>
        <function-ref name="runTask" scoped="" ref="0xb64c4770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb64c8d10" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb64c8d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb64c8ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0xb64c5c20" loc="322:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0xb64c5c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb64c5df8"/>
        <function-ref name="runTask" scoped="" ref="0xb64c5ed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0xb64c5310" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb64c5310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb64c54e8"/>
        <function-ref name="ready" scoped="" ref="0xb64c55c8"/>
        <function-ref name="sendDone" scoped="" ref="0xb64c56a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xb64c7040" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xb64c7040"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xb64c7218"/>
        <function-ref name="setChannel" scoped="" ref="0xb64c72f8"/>
        <function-ref name="getChannel" scoped="" ref="0xb64c73d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb64c7cc0" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb64c7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb64c7e98"/>
        <function-ref name="suspend" scoped="" ref="0xb64c5010"/>
        <function-ref name="resume" scoped="" ref="0xb64c50f0"/>
        <function-ref name="run" scoped="" ref="0xb64c51d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6aea930" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6aea930"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6aeab08"/>
        <function-ref name="ready" scoped="" ref="0xb6aeabe8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6aeacc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6aeae28" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6aeae28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6ac8050"/>
        <function-ref name="header" scoped="" ref="0xb6ac8130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb6ac8270" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb6ac8270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6ac8448"/>
        <function-ref name="wait" scoped="" ref="0xb6ac8528"/>
        <function-ref name="cancel" scoped="" ref="0xb6ac8608"/>
        <function-ref name="isFree" scoped="" ref="0xb6ac86e8"/>
        <function-ref name="getNow" scoped="" ref="0xb6ac87c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6ac8928" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6ac8928"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xb6ac8b00"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xb6ac8be0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xb6ac8cc0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xb6ac8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6aea4e8" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6aea4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6aea6c0"/>
        <function-ref name="header" scoped="" ref="0xb6aea7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6aea010" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6aea010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6aea1e8"/>
        <function-ref name="ready" scoped="" ref="0xb6aea2c8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6aea3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb64a64b8" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb64a64b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb64a6690"/>
        <function-ref name="ready" scoped="" ref="0xb64a6770"/>
        <function-ref name="sendDone" scoped="" ref="0xb64a6850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb64a69b0" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb64a69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb64a6b88"/>
        <function-ref name="header" scoped="" ref="0xb64a6c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb64a6da8" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb64a6da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb64a5010"/>
        <function-ref name="wait" scoped="" ref="0xb64a50f0"/>
        <function-ref name="cancel" scoped="" ref="0xb64a51d0"/>
        <function-ref name="isFree" scoped="" ref="0xb64a52b0"/>
        <function-ref name="getNow" scoped="" ref="0xb64a5390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xb64a54d0" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb64a54d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb64a56a8"/>
        <function-ref name="rand32" scoped="" ref="0xb64a5788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb64a58e8" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb64a58e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xb64a5ac0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xb64a5ba0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xb64a5c80"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xb64a5d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb64a6070" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb64a6070"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb64a6248"/>
        <function-ref name="header" scoped="" ref="0xb64a6328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb64a9b78" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb64a9b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb64a9d50"/>
        <function-ref name="ready" scoped="" ref="0xb64a9e30"/>
        <function-ref name="sendDone" scoped="" ref="0xb64a9f10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0xb64a5ee0" loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0xb64a5ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb64a40e0"/>
        <function-ref name="runTask" scoped="" ref="0xb64a41c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xb6ac7478" loc="46:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb6ac7478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb6ac7650"/>
        <function-ref name="rand32" scoped="" ref="0xb6ac7730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xb6ac5b58" loc="45:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0xb6ac5b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6ac71e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6aca910" loc="44:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6aca910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6acaae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xb6ac3ec8" loc="48:/home/wsn/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb6ac3ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb6ac20c0"/>
        <function-ref name="rand32" scoped="" ref="0xb6ac21a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xb6ac3608" loc="47:/home/wsn/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0xb6ac3608"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6ac3c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6ac30e8" loc="46:/home/wsn/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6ac30e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6ac32c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6ab7b50" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6ab7b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6ab7d28"/>
        <function-ref name="ready" scoped="" ref="0xb6ab7e08"/>
        <function-ref name="sendDone" scoped="" ref="0xb6ab7ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6a9f060" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6a9f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6a9f238"/>
        <function-ref name="header" scoped="" ref="0xb6a9f318"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb6a9f458" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb6a9f458"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6a9f630"/>
        <function-ref name="wait" scoped="" ref="0xb6a9f710"/>
        <function-ref name="cancel" scoped="" ref="0xb6a9f7f0"/>
        <function-ref name="isFree" scoped="" ref="0xb6a9f8d0"/>
        <function-ref name="getNow" scoped="" ref="0xb6a9f9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0xb6a9e4f0" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0xb6a9e4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a9e6c8"/>
        <function-ref name="get" scoped="" ref="0xb6a9e7a8"/>
        <function-ref name="setValue" scoped="" ref="0xb6a9e888"/>
        <function-ref name="set" scoped="" ref="0xb6a9e968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6a9fb10" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6a9fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0xb6a9fce8"/>
        <function-ref name="createAckPacket" scoped="" ref="0xb6a9fdc8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb6a9fea8"/>
        <function-ref name="isAckPacket" scoped="" ref="0xb6a9e010"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0xb6a9e0f0"/>
        <function-ref name="getAckTimeout" scoped="" ref="0xb6a9e1d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb6a9e2b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb6a9e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6ab7230" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6ab7230"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6ab7408"/>
        <function-ref name="header" scoped="" ref="0xb6ab74e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6ab8cf8" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6ab8cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6ab8ed0"/>
        <function-ref name="ready" scoped="" ref="0xb6ab7010"/>
        <function-ref name="sendDone" scoped="" ref="0xb6ab70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb6ab7628" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6ab7628"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6ab7800"/>
        <function-ref name="noAck" scoped="" ref="0xb6ab78e0"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6ab79c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6a988a0" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6a988a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6a98a78"/>
        <function-ref name="stopDone" scoped="" ref="0xb6a98b58"/>
        <function-ref name="start" scoped="" ref="0xb6a98c38"/>
        <function-ref name="stop" scoped="" ref="0xb6a98d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb6a8d708" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb6a8d708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6a8d8e0"/>
        <function-ref name="request" scoped="" ref="0xb6a8d9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6a8bcc8" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6a8bcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6a8bea0"/>
        <function-ref name="ready" scoped="" ref="0xb6a8a010"/>
        <function-ref name="sendDone" scoped="" ref="0xb6a8a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6a8a250" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6a8a250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6a8a428"/>
        <function-ref name="header" scoped="" ref="0xb6a8a508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb6a8f668" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb6a8f668"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6a8f840"/>
        <function-ref name="turnOn" scoped="" ref="0xb6a8f920"/>
        <function-ref name="setChannel" scoped="" ref="0xb6a8fa00"/>
        <function-ref name="done" scoped="" ref="0xb6a8fae0"/>
        <function-ref name="standby" scoped="" ref="0xb6a8fbc0"/>
        <function-ref name="getChannel" scoped="" ref="0xb6a8fca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6a8db00" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6a8db00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a8dcd8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6a8ddb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a8de98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6a8c010"/>
        <function-ref name="headerLength" scoped="" ref="0xb6a8c0f0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6a8c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0xb6a8b4b0" loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0xb6a8b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6a8b708"/>
        <function-ref name="turnOn" scoped="" ref="0xb6a8b7e8"/>
        <function-ref name="setChannel" scoped="" ref="0xb6a8b8c8"/>
        <function-ref name="done" scoped="" ref="0xb6a8b9a8"/>
        <function-ref name="standby" scoped="" ref="0xb6a8ba88"/>
        <function-ref name="getChannel" scoped="" ref="0xb6a8bb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0xb6a8c330" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0xb6a8c330"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb6a8c508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6a8d310" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6a8d310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6a8d4e8"/>
        <function-ref name="header" scoped="" ref="0xb6a8d5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0xb6a8b178" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0xb6a8b178"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6a8b350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb6a8c698" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb6a8c698"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6a8c870"/>
        <function-ref name="stopDone" scoped="" ref="0xb6a8c950"/>
        <function-ref name="start" scoped="" ref="0xb6a8ca30"/>
        <function-ref name="stop" scoped="" ref="0xb6a8cb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6a8aa80" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6a8aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a8ac58"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6a8ad38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a8ae18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6a8aef8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6a89010"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6a890f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0xb6a8f350" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0xb6a8f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6a8f528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6a89250" loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6a89250"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb6a89428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0xb6a8cc70" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0xb6a8cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6a8ce48"/>
        <function-ref name="cancel" scoped="" ref="0xb6a8cf28"/>
        <function-ref name="sendDone" scoped="" ref="0xb6a8b018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6a8fde0" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6a8fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6a8d010"/>
        <function-ref name="ready" scoped="" ref="0xb6a8d0f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6a8d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0xb6a8a668" loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0xb6a8a668"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6a8a840"/>
        <function-ref name="request" scoped="" ref="0xb6a8a920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0xb6a98e58" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0xb6a98e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6a8f050"/>
        <function-ref name="cancel" scoped="" ref="0xb6a8f130"/>
        <function-ref name="sendDone" scoped="" ref="0xb6a8f210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0xb6a51098" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0xb6a51098"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a51270"/>
        <function-ref name="get" scoped="" ref="0xb6a51350"/>
        <function-ref name="setValue" scoped="" ref="0xb6a51430"/>
        <function-ref name="set" scoped="" ref="0xb6a51510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6a537f0" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6a537f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a539c8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6a53aa8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a53b88"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6a53c68"/>
        <function-ref name="headerLength" scoped="" ref="0xb6a53d48"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6a53e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6a528f0" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6a528f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a52ac8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6a52ba8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a52c88"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6a52d68"/>
        <function-ref name="headerLength" scoped="" ref="0xb6a52e48"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6a52f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xb6a54180" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6a54180"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72fc710"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6a54c80"/>
        <function-ref name="clear" scoped="" ref="0xb6a53048"/>
        <function-ref name="isValid" scoped="" ref="0xb6a548d0"/>
        <function-ref name="set" scoped="" ref="0xb6a533f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0xb6a52078" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6a52078"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72fc710"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6a526c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb6a85998" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6a85998"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7398508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6a574d0"/>
        <function-ref name="clear" scoped="" ref="0xb6a57880"/>
        <function-ref name="isValid" scoped="" ref="0xb6a57120"/>
        <function-ref name="set" scoped="" ref="0xb6a57c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0xb6478640" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0xb6478640"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6478818"/>
        <function-ref name="get" scoped="" ref="0xb64788f8"/>
        <function-ref name="setValue" scoped="" ref="0xb64789d8"/>
        <function-ref name="set" scoped="" ref="0xb6478ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb647ae40" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb647ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6478050"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6478130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6478210"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb64782f0"/>
        <function-ref name="headerLength" scoped="" ref="0xb64783d0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb64784b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6477e40" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6477e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6476050"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6476130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6476210"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb64762f0"/>
        <function-ref name="headerLength" scoped="" ref="0xb64763d0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb64764b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xb647b7d8" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb647b7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72fc710"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb647a2e8"/>
        <function-ref name="clear" scoped="" ref="0xb647a698"/>
        <function-ref name="isValid" scoped="" ref="0xb647bf28"/>
        <function-ref name="set" scoped="" ref="0xb647aa48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0xb6478ca8" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6478ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72fc710"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6477308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0xb64775c8" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0xb64775c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7398508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6477c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb647c010" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb647c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7398508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb647cb10"/>
        <function-ref name="clear" scoped="" ref="0xb647cec0"/>
        <function-ref name="isValid" scoped="" ref="0xb647c760"/>
        <function-ref name="set" scoped="" ref="0xb647b2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb6a595d8" loc="20:/home/wsn/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb6a595d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7398508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6a59c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6a4e4a0" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6a4e4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a4e678"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6a4e758"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a4e838"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6a4e918"/>
        <function-ref name="headerLength" scoped="" ref="0xb6a4e9f8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6a4ead8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6a4ec68" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6a4ec68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a4ee40"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6a4ef20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a4d018"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6a4d0f8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6a4d1d8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6a4d2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0xb6a3beb8" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0xb6a3beb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a4e0c0"/>
        <function-ref name="get" scoped="" ref="0xb6a4e1a0"/>
        <function-ref name="setValue" scoped="" ref="0xb6a4e280"/>
        <function-ref name="set" scoped="" ref="0xb6a4e360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6a3a450" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6a3a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6a3a628"/>
        <function-ref name="stopDone" scoped="" ref="0xb6a3a708"/>
        <function-ref name="start" scoped="" ref="0xb6a3a7e8"/>
        <function-ref name="stop" scoped="" ref="0xb6a3a8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb6a37290" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb6a37290"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6a37468"/>
        <function-ref name="request" scoped="" ref="0xb6a37548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6a35828" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6a35828"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6a35a00"/>
        <function-ref name="ready" scoped="" ref="0xb6a35ae0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6a35bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6a35d20" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6a35d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6a35ef8"/>
        <function-ref name="header" scoped="" ref="0xb6a34010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb6a39220" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb6a39220"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6a393f8"/>
        <function-ref name="turnOn" scoped="" ref="0xb6a394d8"/>
        <function-ref name="setChannel" scoped="" ref="0xb6a395b8"/>
        <function-ref name="done" scoped="" ref="0xb6a39698"/>
        <function-ref name="standby" scoped="" ref="0xb6a39778"/>
        <function-ref name="getChannel" scoped="" ref="0xb6a39858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6a37688" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6a37688"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a37860"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6a37940"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a37a20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6a37b00"/>
        <function-ref name="headerLength" scoped="" ref="0xb6a37be0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6a37cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0xb6a35010" loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0xb6a35010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6a35268"/>
        <function-ref name="turnOn" scoped="" ref="0xb6a35348"/>
        <function-ref name="setChannel" scoped="" ref="0xb6a35428"/>
        <function-ref name="done" scoped="" ref="0xb6a35508"/>
        <function-ref name="standby" scoped="" ref="0xb6a355e8"/>
        <function-ref name="getChannel" scoped="" ref="0xb6a356c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0xb6a37e20" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0xb6a37e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb6a36010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6a39e70" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6a39e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6a37070"/>
        <function-ref name="header" scoped="" ref="0xb6a37150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0xb6a36c70" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0xb6a36c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6a36e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb6a361a0" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb6a361a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6a36378"/>
        <function-ref name="stopDone" scoped="" ref="0xb6a36458"/>
        <function-ref name="start" scoped="" ref="0xb6a36538"/>
        <function-ref name="stop" scoped="" ref="0xb6a36618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6a34588" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6a34588"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a34760"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6a34840"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a34920"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6a34a00"/>
        <function-ref name="headerLength" scoped="" ref="0xb6a34ae0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6a34bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0xb6a3aee0" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0xb6a3aee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6a390e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6a34d20" loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6a34d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb6a34ef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0xb6a36778" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0xb6a36778"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6a36950"/>
        <function-ref name="cancel" scoped="" ref="0xb6a36a30"/>
        <function-ref name="sendDone" scoped="" ref="0xb6a36b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6a39998" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6a39998"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6a39b70"/>
        <function-ref name="ready" scoped="" ref="0xb6a39c50"/>
        <function-ref name="sendDone" scoped="" ref="0xb6a39d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0xb6a34170" loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0xb6a34170"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6a34348"/>
        <function-ref name="request" scoped="" ref="0xb6a34428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0xb6a3aa08" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0xb6a3aa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6a3abe0"/>
        <function-ref name="cancel" scoped="" ref="0xb6a3acc0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6a3ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb6a2e820" loc="45:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb6a2e820"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6a2e9f8"/>
        <function-ref name="request" scoped="" ref="0xb6a2ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xb6a2ba58" loc="49:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb6a2ba58"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a2a638"/>
        <function-ref name="get" scoped="" ref="0xb6a2a378"/>
        <function-ref name="isSet" scoped="" ref="0xb6a2a0b8"/>
        <function-ref name="set" scoped="" ref="0xb6a2a8f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0xb6a1f778" loc="64:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0xb6a1f778"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a1f950"/>
        <function-ref name="get" scoped="" ref="0xb6a1fa30"/>
        <function-ref name="setValue" scoped="" ref="0xb6a1fb10"/>
        <function-ref name="set" scoped="" ref="0xb6a1fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xb6a22898" loc="61:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6a22898"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72fc710"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6a213c0"/>
        <function-ref name="clear" scoped="" ref="0xb6a21770"/>
        <function-ref name="isValid" scoped="" ref="0xb6a21010"/>
        <function-ref name="set" scoped="" ref="0xb6a21b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb6a31668" loc="42:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb6a31668"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6a31840"/>
        <function-ref name="turnOn" scoped="" ref="0xb6a31920"/>
        <function-ref name="setChannel" scoped="" ref="0xb6a31a00"/>
        <function-ref name="done" scoped="" ref="0xb6a31ae0"/>
        <function-ref name="standby" scoped="" ref="0xb6a31bc0"/>
        <function-ref name="getChannel" scoped="" ref="0xb6a31ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb6a1e498" loc="66:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb6a1e498"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6a1e670"/>
        <function-ref name="wait" scoped="" ref="0xb6a1e750"/>
        <function-ref name="cancel" scoped="" ref="0xb6a1e830"/>
        <function-ref name="isFree" scoped="" ref="0xb6a1e910"/>
        <function-ref name="getNow" scoped="" ref="0xb6a1e9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xb6a2d6f8" loc="48:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6a2d6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a2b2d0"/>
        <function-ref name="get" scoped="" ref="0xb6a2b010"/>
        <function-ref name="isSet" scoped="" ref="0xb6a2dd40"/>
        <function-ref name="set" scoped="" ref="0xb6a2b590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6a2ec88" loc="46:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6a2ec88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a2ee60"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6a2d010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a2d0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6a2d1d0"/>
        <function-ref name="headerLength" scoped="" ref="0xb6a2d2b0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6a2d390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6a23ec0" loc="60:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6a23ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a22188"/>
        <function-ref name="headerLength" scoped="" ref="0xb6a22268"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6a22348"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0xb6a22428"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xb6a22508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6a2e3d0" loc="44:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6a2e3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6a2e5a8"/>
        <function-ref name="header" scoped="" ref="0xb6a2e688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb6a24428" loc="55:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6a24428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72fc710"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0xb72fc9b8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6a238d8"/>
        <function-ref name="fired" scoped="" ref="0xb6a230a8"/>
        <function-ref name="startAt" scoped="" ref="0xb6a23598"/>
        <function-ref name="isRunning" scoped="" ref="0xb6a23320"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6a23b50"/>
        <function-ref name="start" scoped="" ref="0xb6a24b78"/>
        <function-ref name="stop" scoped="" ref="0xb6a24e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xb6a2ae28" loc="50:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb6a2ae28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a29a08"/>
        <function-ref name="get" scoped="" ref="0xb6a29748"/>
        <function-ref name="isSet" scoped="" ref="0xb6a29488"/>
        <function-ref name="set" scoped="" ref="0xb6a29cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0xb6a26950" loc="54:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6a26950"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72fc710"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6a24010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6a31e40" loc="43:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6a31e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6a2e050"/>
        <function-ref name="ready" scoped="" ref="0xb6a2e130"/>
        <function-ref name="sendDone" scoped="" ref="0xb6a2e210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xb6a27208" loc="51:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6a27208"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a27dd0"/>
        <function-ref name="get" scoped="" ref="0xb6a27b10"/>
        <function-ref name="isSet" scoped="" ref="0xb6a27850"/>
        <function-ref name="set" scoped="" ref="0xb6a260a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0xb6a1fe38" loc="65:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0xb6a1fe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a1e050"/>
        <function-ref name="get" scoped="" ref="0xb6a1e130"/>
        <function-ref name="setValue" scoped="" ref="0xb6a1e210"/>
        <function-ref name="set" scoped="" ref="0xb6a1e2f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0xb6a1f0e0" loc="63:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0xb6a1f0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a1f2b8"/>
        <function-ref name="get" scoped="" ref="0xb6a1f398"/>
        <function-ref name="setValue" scoped="" ref="0xb6a1f478"/>
        <function-ref name="set" scoped="" ref="0xb6a1f558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb6a26458" loc="52:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6a26458"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb6a26630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb6a1eb78" loc="67:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb6a1eb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb6a1ed50"/>
        <function-ref name="suspend" scoped="" ref="0xb6a1ee30"/>
        <function-ref name="resume" scoped="" ref="0xb6a1ef10"/>
        <function-ref name="run" scoped="" ref="0xb6a1d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb6a17a08" loc="52:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb6a17a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6a17be0"/>
        <function-ref name="request" scoped="" ref="0xb6a17cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0xb6a03588" loc="74:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0xb6a03588"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7396010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xb6a03cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xb6a14b98" loc="56:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb6a14b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a13780"/>
        <function-ref name="get" scoped="" ref="0xb6a134c0"/>
        <function-ref name="isSet" scoped="" ref="0xb6a13200"/>
        <function-ref name="set" scoped="" ref="0xb6a13a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0xb6a04920" loc="80:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0xb6a04920"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a04af8"/>
        <function-ref name="get" scoped="" ref="0xb6a04bd8"/>
        <function-ref name="setValue" scoped="" ref="0xb6a04cb8"/>
        <function-ref name="set" scoped="" ref="0xb6a04d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0xb6a184d8" loc="47:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb6a184d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb74017d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb74017d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6a186b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xb6a02818" loc="83:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6a02818"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72fc710"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6a01438"/>
        <function-ref name="clear" scoped="" ref="0xb6a017e8"/>
        <function-ref name="isValid" scoped="" ref="0xb6a01088"/>
        <function-ref name="set" scoped="" ref="0xb6a01b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0xb6a0cbf8" loc="70:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0xb6a0cbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6a0cdd0"/>
        <function-ref name="isInput" scoped="" ref="0xb6a0ceb0"/>
        <function-ref name="toggle" scoped="" ref="0xb6a0b010"/>
        <function-ref name="isOutput" scoped="" ref="0xb6a0b0f0"/>
        <function-ref name="get" scoped="" ref="0xb6a0b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6a0b2b0"/>
        <function-ref name="set" scoped="" ref="0xb6a0b390"/>
        <function-ref name="clr" scoped="" ref="0xb6a0b470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb69ff630" loc="86:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb69ff630"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb69ff808"/>
        <function-ref name="wait" scoped="" ref="0xb69ff8e8"/>
        <function-ref name="cancel" scoped="" ref="0xb69ff9c8"/>
        <function-ref name="isFree" scoped="" ref="0xb69ffaa8"/>
        <function-ref name="getNow" scoped="" ref="0xb69ffb88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb6a18858" loc="49:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb6a18858"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6a18a30"/>
        <function-ref name="turnOn" scoped="" ref="0xb6a18b10"/>
        <function-ref name="setChannel" scoped="" ref="0xb6a18bf0"/>
        <function-ref name="done" scoped="" ref="0xb6a18cd0"/>
        <function-ref name="standby" scoped="" ref="0xb6a18db0"/>
        <function-ref name="getChannel" scoped="" ref="0xb6a18e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0xb6a07088" loc="75:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb6a07088"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72fc710"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6a076d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xb6a15838" loc="55:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6a15838"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a14410"/>
        <function-ref name="get" scoped="" ref="0xb6a14150"/>
        <function-ref name="isSet" scoped="" ref="0xb6a15e80"/>
        <function-ref name="set" scoped="" ref="0xb6a146d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6a17e70" loc="53:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6a17e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a15070"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6a15150"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a15230"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6a15310"/>
        <function-ref name="headerLength" scoped="" ref="0xb6a153f0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6a154d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0xb6a0c210" loc="69:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0xb6a0c210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6a0c3e8"/>
        <function-ref name="isInput" scoped="" ref="0xb6a0c4c8"/>
        <function-ref name="toggle" scoped="" ref="0xb6a0c5a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6a0c688"/>
        <function-ref name="get" scoped="" ref="0xb6a0c768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6a0c848"/>
        <function-ref name="set" scoped="" ref="0xb6a0c928"/>
        <function-ref name="clr" scoped="" ref="0xb6a0ca08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6a079f0" loc="77:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6a079f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a07bc8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6a07ca8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6a07d88"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0xb6a07e68"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xb6a04010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6a175b8" loc="51:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6a175b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6a17790"/>
        <function-ref name="header" scoped="" ref="0xb6a17870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0xb69ab910" loc="856:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0xb69ab910"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb69abae8"/>
        <function-ref name="runTask" scoped="" ref="0xb69abbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xb6a11010" loc="57:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb6a11010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a11bd8"/>
        <function-ref name="get" scoped="" ref="0xb6a11918"/>
        <function-ref name="isSet" scoped="" ref="0xb6a11658"/>
        <function-ref name="set" scoped="" ref="0xb6a11e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb6a19e40" loc="46:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb6a19e40"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb74017d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb74017d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6a18050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xb6a0d5b8" loc="65:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xb6a0d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6a0d790"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6a0d870"/>
        <function-ref name="request" scoped="" ref="0xb6a0d950"/>
        <function-ref name="granted" scoped="" ref="0xb6a0da30"/>
        <function-ref name="isOwner" scoped="" ref="0xb6a0db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0xb6a0fa98" loc="64:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0xb6a0fa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6a0fcf0"/>
        <function-ref name="isInput" scoped="" ref="0xb6a0fdd0"/>
        <function-ref name="toggle" scoped="" ref="0xb6a0feb0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6a0d010"/>
        <function-ref name="get" scoped="" ref="0xb6a0d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6a0d1d0"/>
        <function-ref name="set" scoped="" ref="0xb6a0d2b0"/>
        <function-ref name="clr" scoped="" ref="0xb6a0d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xb6a103d8" loc="58:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6a103d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a0f010"/>
        <function-ref name="get" scoped="" ref="0xb6a10ce0"/>
        <function-ref name="isSet" scoped="" ref="0xb6a10a20"/>
        <function-ref name="set" scoped="" ref="0xb6a0f2d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6a17060" loc="50:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6a17060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6a17238"/>
        <function-ref name="ready" scoped="" ref="0xb6a17318"/>
        <function-ref name="sendDone" scoped="" ref="0xb6a173f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0xb6a06d50" loc="72:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xb6a06d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb6a06f28"/>
        <function-ref name="disable" scoped="" ref="0xb6a08018"/>
        <function-ref name="captured" scoped="" ref="0xb6a080f8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb6a081d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0xb6a09b40" loc="67:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xb6a09b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb6a09d18"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb6a09df8"/>
        <function-ref name="splitRead" scoped="" ref="0xb6a09ed8"/>
        <function-ref name="write" scoped="" ref="0xb6a0c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0xb6a02010" loc="81:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0xb6a02010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a021e8"/>
        <function-ref name="get" scoped="" ref="0xb6a022c8"/>
        <function-ref name="setValue" scoped="" ref="0xb6a023a8"/>
        <function-ref name="set" scoped="" ref="0xb6a02488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0xb6a04288" loc="79:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0xb6a04288"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a04460"/>
        <function-ref name="get" scoped="" ref="0xb6a04540"/>
        <function-ref name="setValue" scoped="" ref="0xb6a04620"/>
        <function-ref name="set" scoped="" ref="0xb6a04700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb6a0f680" loc="59:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6a0f680"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb6a0f858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb69ff010" loc="85:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb69ff010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb69ff1e8"/>
        <function-ref name="suspend" scoped="" ref="0xb69ff2c8"/>
        <function-ref name="resume" scoped="" ref="0xb69ff3a8"/>
        <function-ref name="run" scoped="" ref="0xb69ff488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0xb6984db8" loc="46:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0xb6984db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6983010"/>
        <function-ref name="isInput" scoped="" ref="0xb69830f0"/>
        <function-ref name="toggle" scoped="" ref="0xb69831d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb69832b0"/>
        <function-ref name="get" scoped="" ref="0xb6983390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6983470"/>
        <function-ref name="set" scoped="" ref="0xb6983550"/>
        <function-ref name="clr" scoped="" ref="0xb6983630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0xb69843d0" loc="45:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0xb69843d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb69845a8"/>
        <function-ref name="isInput" scoped="" ref="0xb6984688"/>
        <function-ref name="toggle" scoped="" ref="0xb6984768"/>
        <function-ref name="isOutput" scoped="" ref="0xb6984848"/>
        <function-ref name="get" scoped="" ref="0xb6984928"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6984a08"/>
        <function-ref name="set" scoped="" ref="0xb6984ae8"/>
        <function-ref name="clr" scoped="" ref="0xb6984bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb6982030" loc="49:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6982030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72fc710"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb69814e0"/>
        <function-ref name="fired" scoped="" ref="0xb6982c98"/>
        <function-ref name="startAt" scoped="" ref="0xb69811a0"/>
        <function-ref name="isRunning" scoped="" ref="0xb6982f10"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6981758"/>
        <function-ref name="start" scoped="" ref="0xb6982780"/>
        <function-ref name="stop" scoped="" ref="0xb6982a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0xb69855b8" loc="42:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xb69855b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6985790"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6985870"/>
        <function-ref name="request" scoped="" ref="0xb6985950"/>
        <function-ref name="granted" scoped="" ref="0xb6985a30"/>
        <function-ref name="isOwner" scoped="" ref="0xb6985b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0xb6988b08" loc="41:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0xb6988b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6988ce0"/>
        <function-ref name="isInput" scoped="" ref="0xb6988dc0"/>
        <function-ref name="toggle" scoped="" ref="0xb6988ea0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6985010"/>
        <function-ref name="get" scoped="" ref="0xb69850f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb69851d0"/>
        <function-ref name="set" scoped="" ref="0xb69852b0"/>
        <function-ref name="clr" scoped="" ref="0xb6985390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0xb6983820" loc="48:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xb6983820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb69839f8"/>
        <function-ref name="disable" scoped="" ref="0xb6983ad8"/>
        <function-ref name="captured" scoped="" ref="0xb6983bb8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb6983c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xb6985cc0" loc="43:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xb6985cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb6985e98"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb6984010"/>
        <function-ref name="splitRead" scoped="" ref="0xb69840f0"/>
        <function-ref name="write" scoped="" ref="0xb69841d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0xb6981b48" loc="50:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6981b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72fc710"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb697f200"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0xb697a358" loc="46:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0xb697a358"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb697a530"/>
        <function-ref name="isInput" scoped="" ref="0xb697a610"/>
        <function-ref name="toggle" scoped="" ref="0xb697a6f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb697a7d0"/>
        <function-ref name="get" scoped="" ref="0xb697a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb697a990"/>
        <function-ref name="set" scoped="" ref="0xb697aa70"/>
        <function-ref name="clr" scoped="" ref="0xb697ab50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0xb697c590" loc="45:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb697c590"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb697a048"/>
        <function-ref name="test" scoped="" ref="0xb697bb38"/>
        <function-ref name="get" scoped="" ref="0xb697cbd8"/>
        <function-ref name="captured" scoped="" ref="0xb697b130"/>
        <function-ref name="reset" scoped="" ref="0xb697b3d0"/>
        <function-ref name="isOn" scoped="" ref="0xb697bdb0"/>
        <function-ref name="set" scoped="" ref="0xb697ce50"/>
        <function-ref name="start" scoped="" ref="0xb697b648"/>
        <function-ref name="stop" scoped="" ref="0xb697b8c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0xb697ad58" loc="47:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0xb697ad58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6979010"/>
        <function-ref name="isInput" scoped="" ref="0xb69790f0"/>
        <function-ref name="toggle" scoped="" ref="0xb69791d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb69792b0"/>
        <function-ref name="get" scoped="" ref="0xb6979390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6979470"/>
        <function-ref name="set" scoped="" ref="0xb6979550"/>
        <function-ref name="clr" scoped="" ref="0xb6979630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb697c030" loc="40:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb697c030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb697c208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0xb697f980" loc="39:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xb697f980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb697fb58"/>
        <function-ref name="disable" scoped="" ref="0xb697fc38"/>
        <function-ref name="captured" scoped="" ref="0xb697fd18"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb697fdf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb6968500" loc="84:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xb6968500"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb69686d8"/>
        <function-ref name="sendDone" scoped="" ref="0xb69687b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb6970aa0" loc="82:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb6970aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb6970c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb697ed98" loc="81:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb697ed98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6970010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xb6970e48" loc="83:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xb6970e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb696f050"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb696f130"/>
        <function-ref name="splitRead" scoped="" ref="0xb696f210"/>
        <function-ref name="write" scoped="" ref="0xb696f2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb6968c50" loc="85:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb6968c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6968e28"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6968f08"/>
        <function-ref name="request" scoped="" ref="0xb696e010"/>
        <function-ref name="granted" scoped="" ref="0xb696e0f0"/>
        <function-ref name="isOwner" scoped="" ref="0xb696e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0xb69662d8" loc="95:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb69662d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb69664b0"/>
        <function-ref name="configure" scoped="" ref="0xb6966590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0xb6942390" loc="294:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0xb6942390"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6942568"/>
        <function-ref name="runTask" scoped="" ref="0xb6942648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb6967b38" loc="94:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xb6967b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6967d10"/>
        <function-ref name="sendDone" scoped="" ref="0xb6967df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb6967198" loc="92:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb6967198"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb6967370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb696ed80" loc="91:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb696ed80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6967010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0xb69551c8" loc="98:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0xb69551c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb69553a0"/>
        <function-ref name="sleep" scoped="" ref="0xb69657f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb6955560"/>
        <function-ref name="dataReady" scoped="" ref="0xb69658d0"/>
        <function-ref name="initMaster" scoped="" ref="0xb6955720"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb6955800"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb69558e0"/>
        <function-ref name="read" scoped="" ref="0xb69559c0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb6955aa0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb6955b80"/>
        <function-ref name="setClock" scoped="" ref="0xb6955c60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb6955d40"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb6955e20"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb6965010"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb69650f0"/>
        <function-ref name="write" scoped="" ref="0xb69651d0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb69652b0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb6965390"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb6965470"/>
        <function-ref name="getClock" scoped="" ref="0xb6965550"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb6965630"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb6955480"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb6955640"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb6965710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xb6967520" loc="93:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xb6967520"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb69676f8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb69677d8"/>
        <function-ref name="splitRead" scoped="" ref="0xb69678b8"/>
        <function-ref name="write" scoped="" ref="0xb6967998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0xb6965a98" loc="99:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xb6965a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb6965c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0xb696de40" loc="76:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0xb696de40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb6930050"/>
        <function-ref name="sleep" scoped="" ref="0xb692f470"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb6930210"/>
        <function-ref name="dataReady" scoped="" ref="0xb692f550"/>
        <function-ref name="initMaster" scoped="" ref="0xb69303d0"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb69304b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb6930590"/>
        <function-ref name="read" scoped="" ref="0xb6930670"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb6930750"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb6930830"/>
        <function-ref name="setClock" scoped="" ref="0xb6930910"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb69309f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb6930ad0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb6930c30"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb6930d10"/>
        <function-ref name="write" scoped="" ref="0xb6930df0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb6930ed0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb692f010"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb692f0f0"/>
        <function-ref name="getClock" scoped="" ref="0xb692f1d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb692f2b0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb6930130"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb69302f0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb692f390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0xb6927e88" loc="81:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0xb6927e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6926070"/>
        <function-ref name="isInput" scoped="" ref="0xb6926150"/>
        <function-ref name="toggle" scoped="" ref="0xb6926230"/>
        <function-ref name="isOutput" scoped="" ref="0xb6926310"/>
        <function-ref name="get" scoped="" ref="0xb69263f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb69264d0"/>
        <function-ref name="set" scoped="" ref="0xb69265b0"/>
        <function-ref name="clr" scoped="" ref="0xb6926690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0xb692a9e8" loc="79:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0xb692a9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb692abc0"/>
        <function-ref name="isInput" scoped="" ref="0xb692aca0"/>
        <function-ref name="toggle" scoped="" ref="0xb692ad80"/>
        <function-ref name="isOutput" scoped="" ref="0xb692ae60"/>
        <function-ref name="get" scoped="" ref="0xb6927010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb69270f0"/>
        <function-ref name="set" scoped="" ref="0xb69271d0"/>
        <function-ref name="clr" scoped="" ref="0xb69272b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0xb692a010" loc="78:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0xb692a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb692a1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb692a2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb692a3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb692a488"/>
        <function-ref name="get" scoped="" ref="0xb692a568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb692a648"/>
        <function-ref name="set" scoped="" ref="0xb692a728"/>
        <function-ref name="clr" scoped="" ref="0xb692a808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0xb6928ac0" loc="75:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0xb6928ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb6928c98"/>
        <function-ref name="stop" scoped="" ref="0xb6928d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0xb6926898" loc="82:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0xb6926898"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb6926a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0xb692c1c8" loc="74:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0xb692c1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb692c3a0"/>
        <function-ref name="sleep" scoped="" ref="0xb692b7f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb692c560"/>
        <function-ref name="dataReady" scoped="" ref="0xb692b8d0"/>
        <function-ref name="initMaster" scoped="" ref="0xb692c720"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb692c800"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb692c8e0"/>
        <function-ref name="read" scoped="" ref="0xb692c9c0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb692caa0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb692cb80"/>
        <function-ref name="setClock" scoped="" ref="0xb692cc60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb692cd40"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb692ce20"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb692b010"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb692b0f0"/>
        <function-ref name="write" scoped="" ref="0xb692b1d0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb692b2b0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb692b390"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb692b470"/>
        <function-ref name="getClock" scoped="" ref="0xb692b550"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb692b630"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb692c480"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb692c640"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb692b710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0xb69274a0" loc="80:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0xb69274a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6927678"/>
        <function-ref name="isInput" scoped="" ref="0xb6927758"/>
        <function-ref name="toggle" scoped="" ref="0xb6927838"/>
        <function-ref name="isOutput" scoped="" ref="0xb6927918"/>
        <function-ref name="get" scoped="" ref="0xb69279f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6927ad8"/>
        <function-ref name="set" scoped="" ref="0xb6927bb8"/>
        <function-ref name="clr" scoped="" ref="0xb6927c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb68ff8d8" loc="86:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb68ff8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb68ffac0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb68ffba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb68fe208" loc="89:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb68fe208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb68fe3f0"/>
        <function-ref name="configure" scoped="" ref="0xb68fe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb68ff198" loc="85:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb68ff198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb68ff380"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb68ff460"/>
        <function-ref name="request" scoped="" ref="0xb68ff540"/>
        <function-ref name="granted" scoped="" ref="0xb68ff620"/>
        <function-ref name="isOwner" scoped="" ref="0xb68ff700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb68ffce0" loc="87:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb68ffce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb68ffeb8"/>
        <function-ref name="userId" scoped="" ref="0xb68fe010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb644dba8" loc="44:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb644dba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb644dd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xb644dee0" loc="45:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0xb644dee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb644a0e0"/>
        <function-ref name="isEmpty" scoped="" ref="0xb644a1c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb644a2a0"/>
        <function-ref name="dequeue" scoped="" ref="0xb644a380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb6449638" loc="52:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb6449638"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb6449820"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb6449900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb6449f00" loc="56:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb6449f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb6448108"/>
        <function-ref name="configure" scoped="" ref="0xb64481e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb6448348" loc="57:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb6448348"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb6448520"/>
        <function-ref name="isEmpty" scoped="" ref="0xb6448600"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb64486e0"/>
        <function-ref name="dequeue" scoped="" ref="0xb64487c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb644aee8" loc="51:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb644aee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb64490e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb64491c0"/>
        <function-ref name="request" scoped="" ref="0xb64492a0"/>
        <function-ref name="granted" scoped="" ref="0xb6449380"/>
        <function-ref name="isOwner" scoped="" ref="0xb6449460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb6449a40" loc="53:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb6449a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb6449c18"/>
        <function-ref name="userId" scoped="" ref="0xb6449cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb6448940" loc="68:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0xb6448940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6448b18"/>
        <function-ref name="runTask" scoped="" ref="0xb6448bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb68f6610" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb68f6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xb68f67e8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb68f68c8"/>
        <function-ref name="getControlA" scoped="" ref="0xb68f69a8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb68f6a88"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb68f6b68"/>
        <function-ref name="setControlB" scoped="" ref="0xb68f6c48"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb68f6d28"/>
        <function-ref name="getControlB" scoped="" ref="0xb68f6e08"/>
        <function-ref name="setControlC" scoped="" ref="0xb68f6ee8"/>
        <function-ref name="setControlA" scoped="" ref="0xb68f5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb68f5348" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb68f5348"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb68f4dc8"/>
        <function-ref name="test" scoped="" ref="0xb68f48d8"/>
        <function-ref name="get" scoped="" ref="0xb68f5990"/>
        <function-ref name="captured" scoped="" ref="0xb68f5ea8"/>
        <function-ref name="reset" scoped="" ref="0xb68f4170"/>
        <function-ref name="isOn" scoped="" ref="0xb68f4b50"/>
        <function-ref name="set" scoped="" ref="0xb68f5c08"/>
        <function-ref name="start" scoped="" ref="0xb68f43e8"/>
        <function-ref name="stop" scoped="" ref="0xb68f4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb68f2538" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb68f2538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb68f1a98"/>
        <function-ref name="fired" scoped="" ref="0xb68f10b8"/>
        <function-ref name="get" scoped="" ref="0xb68f2b80"/>
        <function-ref name="reset" scoped="" ref="0xb68f1330"/>
        <function-ref name="isOn" scoped="" ref="0xb68f1d10"/>
        <function-ref name="set" scoped="" ref="0xb68f2df8"/>
        <function-ref name="start" scoped="" ref="0xb68f15a8"/>
        <function-ref name="stop" scoped="" ref="0xb68f1820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb68f9328" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb68f9328"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb68f7d68"/>
        <function-ref name="test" scoped="" ref="0xb68f7878"/>
        <function-ref name="get" scoped="" ref="0xb68f9970"/>
        <function-ref name="setScale" scoped="" ref="0xb68f6010"/>
        <function-ref name="getScale" scoped="" ref="0xb68f62b0"/>
        <function-ref name="reset" scoped="" ref="0xb68f7110"/>
        <function-ref name="overflow" scoped="" ref="0xb68f9e88"/>
        <function-ref name="isOn" scoped="" ref="0xb68f7af0"/>
        <function-ref name="set" scoped="" ref="0xb68f9be8"/>
        <function-ref name="start" scoped="" ref="0xb68f7388"/>
        <function-ref name="stop" scoped="" ref="0xb68f7600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb68ea530" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb68ea530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xb68ea708"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb68ea7e8"/>
        <function-ref name="getControlA" scoped="" ref="0xb68ea8c8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb68ea9a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb68eaa88"/>
        <function-ref name="setControlB" scoped="" ref="0xb68eab68"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb68eac48"/>
        <function-ref name="getControlB" scoped="" ref="0xb68ead28"/>
        <function-ref name="setControlC" scoped="" ref="0xb68eae08"/>
        <function-ref name="setControlA" scoped="" ref="0xb68eaee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0xb68e6128" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0xb68e6128"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb68e5690"/>
        <function-ref name="fired" scoped="" ref="0xb68e6c88"/>
        <function-ref name="get" scoped="" ref="0xb68e6770"/>
        <function-ref name="reset" scoped="" ref="0xb68e6f00"/>
        <function-ref name="isOn" scoped="" ref="0xb68e5908"/>
        <function-ref name="set" scoped="" ref="0xb68e69e8"/>
        <function-ref name="start" scoped="" ref="0xb68e51a0"/>
        <function-ref name="stop" scoped="" ref="0xb68e5418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb68e9258" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb68e9258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb68e7cc0"/>
        <function-ref name="test" scoped="" ref="0xb68e77d0"/>
        <function-ref name="get" scoped="" ref="0xb68e98a0"/>
        <function-ref name="captured" scoped="" ref="0xb68e9db8"/>
        <function-ref name="reset" scoped="" ref="0xb68e7068"/>
        <function-ref name="isOn" scoped="" ref="0xb68e7a48"/>
        <function-ref name="set" scoped="" ref="0xb68e9b18"/>
        <function-ref name="start" scoped="" ref="0xb68e72e0"/>
        <function-ref name="stop" scoped="" ref="0xb68e7558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0xb68e5d20" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0xb68e5d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb68e22c0"/>
        <function-ref name="fired" scoped="" ref="0xb68e48a8"/>
        <function-ref name="get" scoped="" ref="0xb68e4390"/>
        <function-ref name="reset" scoped="" ref="0xb68e4b20"/>
        <function-ref name="isOn" scoped="" ref="0xb68e2538"/>
        <function-ref name="set" scoped="" ref="0xb68e4608"/>
        <function-ref name="start" scoped="" ref="0xb68e4d98"/>
        <function-ref name="stop" scoped="" ref="0xb68e2048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0xb68e2950" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0xb68e2950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb68e1f08"/>
        <function-ref name="fired" scoped="" ref="0xb68e1528"/>
        <function-ref name="get" scoped="" ref="0xb68e1010"/>
        <function-ref name="reset" scoped="" ref="0xb68e17a0"/>
        <function-ref name="isOn" scoped="" ref="0xb68e01a0"/>
        <function-ref name="set" scoped="" ref="0xb68e1288"/>
        <function-ref name="start" scoped="" ref="0xb68e1a18"/>
        <function-ref name="stop" scoped="" ref="0xb68e1c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb68ec230" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb68ec230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb68ebca0"/>
        <function-ref name="test" scoped="" ref="0xb68eb7b0"/>
        <function-ref name="get" scoped="" ref="0xb68ec878"/>
        <function-ref name="setScale" scoped="" ref="0xb68ebf18"/>
        <function-ref name="getScale" scoped="" ref="0xb68ea1d0"/>
        <function-ref name="reset" scoped="" ref="0xb68eb048"/>
        <function-ref name="overflow" scoped="" ref="0xb68ecd90"/>
        <function-ref name="isOn" scoped="" ref="0xb68eba28"/>
        <function-ref name="set" scoped="" ref="0xb68ecaf0"/>
        <function-ref name="start" scoped="" ref="0xb68eb2c0"/>
        <function-ref name="stop" scoped="" ref="0xb68eb538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb689e2c8" loc="30:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb689e2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7370db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6876840"/>
        <function-ref name="fired" scoped="" ref="0xb6876010"/>
        <function-ref name="startAt" scoped="" ref="0xb6876500"/>
        <function-ref name="isRunning" scoped="" ref="0xb6876288"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6876ab8"/>
        <function-ref name="start" scoped="" ref="0xb689ea18"/>
        <function-ref name="stop" scoped="" ref="0xb689ecb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6899d38" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6899d38"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xb74015d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xb74015d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6899f10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6897140" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6897140"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6896b88"/>
        <function-ref name="test" scoped="" ref="0xb6896698"/>
        <function-ref name="get" scoped="" ref="0xb6897788"/>
        <function-ref name="setScale" scoped="" ref="0xb6896e00"/>
        <function-ref name="getScale" scoped="" ref="0xb68950b8"/>
        <function-ref name="reset" scoped="" ref="0xb6897f18"/>
        <function-ref name="overflow" scoped="" ref="0xb6897ca0"/>
        <function-ref name="isOn" scoped="" ref="0xb6896910"/>
        <function-ref name="set" scoped="" ref="0xb6897a00"/>
        <function-ref name="start" scoped="" ref="0xb68961a8"/>
        <function-ref name="stop" scoped="" ref="0xb6896420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb6432ac0" loc="55:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6432ac0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0xb74013d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0xb74013d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7370db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6430010"/>
        <function-ref name="fired" scoped="" ref="0xb6431740"/>
        <function-ref name="startAt" scoped="" ref="0xb6431c30"/>
        <function-ref name="isRunning" scoped="" ref="0xb64319b8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6430288"/>
        <function-ref name="start" scoped="" ref="0xb6431228"/>
        <function-ref name="stop" scoped="" ref="0xb64314c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0xb642d7e8" loc="58:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0xb642d7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb642cd58"/>
        <function-ref name="fired" scoped="" ref="0xb642c378"/>
        <function-ref name="get" scoped="" ref="0xb642de30"/>
        <function-ref name="reset" scoped="" ref="0xb642c5f0"/>
        <function-ref name="isOn" scoped="" ref="0xb642b010"/>
        <function-ref name="set" scoped="" ref="0xb642c0d8"/>
        <function-ref name="start" scoped="" ref="0xb642c868"/>
        <function-ref name="stop" scoped="" ref="0xb642cae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0xb6430548" loc="57:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0xb6430548"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb642d010"/>
        <function-ref name="test" scoped="" ref="0xb642eab8"/>
        <function-ref name="get" scoped="" ref="0xb6430b90"/>
        <function-ref name="setScale" scoped="" ref="0xb642d288"/>
        <function-ref name="getScale" scoped="" ref="0xb642d528"/>
        <function-ref name="reset" scoped="" ref="0xb642e350"/>
        <function-ref name="overflow" scoped="" ref="0xb642e0d8"/>
        <function-ref name="isOn" scoped="" ref="0xb642ed30"/>
        <function-ref name="set" scoped="" ref="0xb6430e08"/>
        <function-ref name="start" scoped="" ref="0xb642e5c8"/>
        <function-ref name="stop" scoped="" ref="0xb642e840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb6875c68" loc="39:/home/wsn/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb6875c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7396010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb68722e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6872d80" loc="24:/home/wsn/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6872d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7370db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb686f4e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb686f9d8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb686f760"/>
        <function-ref name="overflow" scoped="" ref="0xb686fc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb686c010" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb686c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7370db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb686c760"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb686cc50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb686c9d8"/>
        <function-ref name="overflow" scoped="" ref="0xb686cec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb686b1d8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb686b1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6869c68"/>
        <function-ref name="test" scoped="" ref="0xb6869778"/>
        <function-ref name="get" scoped="" ref="0xb686b820"/>
        <function-ref name="setScale" scoped="" ref="0xb6869ee0"/>
        <function-ref name="getScale" scoped="" ref="0xb68681c0"/>
        <function-ref name="reset" scoped="" ref="0xb6869010"/>
        <function-ref name="overflow" scoped="" ref="0xb686bd38"/>
        <function-ref name="isOn" scoped="" ref="0xb68699f0"/>
        <function-ref name="set" scoped="" ref="0xb686ba98"/>
        <function-ref name="start" scoped="" ref="0xb6869288"/>
        <function-ref name="stop" scoped="" ref="0xb6869500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0xb68650e0" loc="63:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0xb68650e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7396010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6865830"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6865d20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6865aa8"/>
        <function-ref name="overflow" scoped="" ref="0xb6864010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6870e78" loc="62:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6870e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7396010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb68665e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6866ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6866858"/>
        <function-ref name="overflow" scoped="" ref="0xb6866d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb6864f18" loc="48:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb6864f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7396010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6863578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb68638c8" loc="49:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb68638c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7396010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6861048"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6861538"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68612c0"/>
        <function-ref name="overflow" scoped="" ref="0xb68617b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0xb685d010" loc="36:/home/wsn/tinyos-main/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0xb685d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7398dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7396010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xb685d760"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/wsn/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb72d9010" loc="62:/home/wsn/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/wsn/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0xb72dc3e0" loc="60:/home/wsn/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0xb72d42b0" loc="60:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0xb72d4158" loc="60:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0xb72d88c0" loc="31:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0xb72d8ef8" loc="39:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb72d8da0" loc="39:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0xb72d55f8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb72d54a0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0xb72d5b50" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0xb72c8010" loc="44:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0xb72c83f8" loc="45:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0xb72c9808" loc="42:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0xb72c8bc8" loc="47:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb72c9bc8" loc="43:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0xb72c87d0" loc="46:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb72c90c8" loc="40:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0xb72c9458" loc="41:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb75459d0" loc="57:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0xb73e53b0" loc="72:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0xb7545e10" loc="65:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/wsn/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0xb73e02d0" loc="67:/home/wsn/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0xb73e07e8" loc="75:/home/wsn/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/wsn/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/wsn/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/wsn/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0xb736bb90" loc="76:/home/wsn/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/wsn/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/wsn/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/wsn/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0xb7359e90" loc="62:/home/wsn/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0xb73b1470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/wsn/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0xb73591a8" loc="52:/home/wsn/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0xb71be850" loc="113:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb71be6f8" loc="113:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0xb71bd730" loc="138:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb71bd5d8" loc="138:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb71be010" loc="104:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb71bed60" loc="130:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb71d2c00" loc="80:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72f19f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb71d26a0" loc="80:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72f19f0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb71d28b8" loc="80:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb71d2a98" loc="80:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb71caa88" loc="135:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71ca728" loc="135:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb71ca908" loc="135:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb71ca1c8" loc="123:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb71cdb80" loc="96:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71cda28" loc="96:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb71cb898" loc="110:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71cb540" loc="110:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb71cb738" loc="110:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0xb71d3d50" loc="78:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
              <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71d3808" loc="78:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0xb71d39e8" loc="78:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb71d3bc8" loc="78:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0xb71c7c08" loc="61:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0xb71c6070" loc="67:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0xb71c64f0" loc="72:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0xb71c6d60" loc="83:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0xb71c4a80" loc="100:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb71c4f28" loc="117:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0xb71c6918" loc="77:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb71c3678" loc="134:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0xb71c3520" loc="134:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0xb71c77e0" loc="56:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0xb71c4210" loc="89:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0xb71c4638" loc="94:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb71fa788" loc="53:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb71fa788"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb71d6f00" loc="136:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb71d8d08" loc="83:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0xb71d7e58" loc="114:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb71d7b10" loc="114:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb71d7cf8" loc="114:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0xb71d7668" loc="98:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0xb71d4888" loc="151:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0xb71d4358" loc="144:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb71d71a8" loc="92:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0xb71fade0" loc="64:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb71fac88" loc="64:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0xb71d68e0" loc="129:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb71d6598" loc="129:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb71d6780" loc="129:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0xb71d8488" loc="73:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb71d8330" loc="73:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb71d8958" loc="78:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/wsn/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb71898e0" loc="53:/home/wsn/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb71898e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb7189dc0" loc="61:/home/wsn/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb717a3c8" loc="57:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb717a3c8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb717a530" loc="57:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb717a530"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb717aa18" loc="64:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb717a530"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0xb7179510" loc="76:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0xb7179010" loc="71:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb7179910" loc="82:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb71813b8" loc="56:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb71813b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb7181520" loc="56:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7181520"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb717e7d8" loc="109:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7181520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb71804d0" loc="78:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0xb717e190" loc="103:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7181520"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7181520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb7180e20" loc="103:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7181520"/></type-var>
          </variable>
          <variable name="dt" ref="0xb717e030" loc="103:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7181520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb7180918" loc="88:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0xb717ec68" loc="116:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7181520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb7181b50" loc="66:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7181520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb71819f8" loc="66:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7181520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7180070" loc="73:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0xb715ea40" loc="89:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xb715e010" loc="85:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0xb7163ba8" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xb715e5d0" loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xb715e478" loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0xb7160b00" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb71609a8" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xb715d020" loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xb715eeb0" loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0xb7160010" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0xb7160588" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb7160430" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0xb71546b8" loc="92:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0xb71563d8" loc="68:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0xb7156800" loc="74:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0xb7156ce0" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0xb7154b78" loc="98:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0xb71541d8" loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0xb71618e0" loc="57:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb73889e0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0xb7388c08"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0xb7161ed8" loc="63:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb73889e0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0xb7388c08"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0xb7161d80" loc="63:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb73889e0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0xb7388c08"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xb715c010" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb715c010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0xb715bf20" loc="74:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb715ced0" loc="58:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb715c508" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb715c010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb715b2f8" loc="62:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb7159398" loc="80:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb715ca90" loc="54:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb715c010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb715c938" loc="54:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb715c010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb715b700" loc="65:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb715baf8" loc="68:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xb716bc70" loc="55:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb716bc70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0xb71654f0" loc="98:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0xb7166c38" loc="87:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb71671a8" loc="61:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb716bc70"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0xb7165a80" loc="104:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0xb7165928" loc="104:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0xb7165f10" loc="110:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb7166010" loc="75:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb7167b50" loc="70:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb71650c8" loc="93:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb7167720" loc="67:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb716bc70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb71675c8" loc="67:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb716bc70"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb7166418" loc="78:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7166810" loc="81:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb708f440" loc="65:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb708f2e8" loc="65:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0xb708fe10" loc="78:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb708fcb8" loc="78:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb708be58" loc="126:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb708baf8" loc="126:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb708bcd8" loc="126:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb708b510" loc="106:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0xb708db60" loc="94:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb708d820" loc="94:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb708da00" loc="94:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0xb7081088" loc="177:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb72f1790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7082f08" loc="177:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0xb7087930" loc="88:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb72f19f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb70877d8" loc="88:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0xb7091860" loc="68:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb72f19f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0xb7091ef8" loc="78:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb72f19f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7091da0" loc="78:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xb7085238" loc="121:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72f19f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7086eb0" loc="121:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb70850d8" loc="121:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72f19f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xb7086530" loc="103:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72f19f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb70861c8" loc="103:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb70863d0" loc="103:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72f19f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0xb7084a28" loc="147:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb70848d0" loc="147:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0xb7082580" loc="162:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7082250" loc="162:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0xb7082420" loc="162:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb72f1538"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xb7085dd8" loc="136:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7085c80" loc="136:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0xb7081d08" loc="187:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb72f1790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb70819a8" loc="187:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xb7081ba8" loc="187:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb72f1790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0xb707e5a0" loc="195:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb72f1790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0xb7090d68" loc="59:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7090c10" loc="59:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0xb707d9c8" loc="71:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb707d870" loc="71:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0xb707c460" loc="85:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb707c308" loc="85:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb7079c78" loc="75:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7079938" loc="75:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7079b18" loc="75:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb7075a18" loc="125:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70756b8" loc="125:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7075898" loc="125:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb7075158" loc="112:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb7076b38" loc="89:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70769e0" loc="89:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb7074820" loc="100:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70744c8" loc="100:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb70746c0" loc="100:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0xb6ff98d0" loc="31:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6ff9540" loc="31:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0xb6ff9770" loc="31:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0xb6ffc630" loc="15:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0xb6ffcf00" loc="23:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6ffcb88" loc="23:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0xb6ffcda0" loc="23:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0xb6fd91a8" loc="95:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb6fd9670" loc="105:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0xb6fd8838" loc="54:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0xb6fd8400" loc="49:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0xb6fde010" loc="56:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0xb6fdec70" loc="72:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0xb6fddcf0" loc="94:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6fddb98" loc="94:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0xb6fdd1a8" loc="79:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0xb6fde740" loc="65:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6fde5e8" loc="65:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0xb6fdc210" loc="100:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0xb6fdd708" loc="85:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0xb6fe3038" loc="71:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0xb6fe3600" loc="81:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0xb6fe69f8" loc="62:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0xb6fe68a0" loc="62:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0xb6fe3d38" loc="91:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb6fe3be0" loc="91:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0xb6fe1ec8" loc="62:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0xb6fe06c8" loc="69:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6fe0570" loc="69:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0xb6fe0d60" loc="80:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb6fe0c08" loc="80:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb6f318c8" loc="48:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb6f31578" loc="48:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb6f31768" loc="48:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0xb6f2dc60" loc="79:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0xb6f2db08" loc="79:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0xb6f2b480" loc="90:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb6f2b130" loc="90:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb6f2b320" loc="90:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0xb6f2d0c8" loc="65:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0xb6f29370" loc="99:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb6f2bda8" loc="99:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb6f29010" loc="99:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb6f29208" loc="99:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0xb6f2d650" loc="72:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb6f2e750" loc="57:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb6f2e200" loc="57:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb6f2e3f0" loc="57:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb6f2e5e8" loc="57:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb6f195d8" loc="46:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0xb6f19480" loc="46:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0xb6f19e70" loc="56:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0xb6f19b08" loc="56:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0xb6f19d10" loc="56:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0xb6f0a558" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0xb6f0bd00" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0xb6f09b50" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6f099f8" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0xb6f09250" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0xb6f0b488" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0xb6f0b8c8" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0xb6f0a158" loc="43:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0xb6f0a958" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0xb6f0ae60" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6f0ad08" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0xb6f09620" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0xb6e8bcd0" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xb6e88210" loc="87:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0xb6e8b458" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0xb6e88c40" loc="91:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xb6e887d0" loc="88:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xb6e88678" loc="88:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0xb6e8a808" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb6e8a6b0" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xb6e87218" loc="92:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xb6e870c0" loc="92:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0xb6e8b8a8" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0xb6e8ad80" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb6e8ac28" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0xb6e8a290" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb6e8a138" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xb6e8d388" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6e8d388"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0xb6e84e40" loc="88:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0xb6e84ce8" loc="88:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0xb6e84458" loc="76:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb6e8d880" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6e8d388"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0xb6e853e0" loc="60:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6e8d388"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb6e85288" loc="60:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6e8d388"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb6e85820" loc="64:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb6e848b8" loc="82:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb6e8ddf8" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6e8d388"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb6e8dca0" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6e8d388"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb6e85c28" loc="67:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb6e84038" loc="70:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0xb6df0270" loc="43:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb6df0270"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0xb6dec8f8" loc="80:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb6df0270"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0xb6deb820" loc="97:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb6df0270"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0xb6deb6c8" loc="97:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb6df0270"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0xb7540840"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0xb7540840"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0xb6dea168" loc="108:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="99:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb6df0270"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6dea010" loc="108:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0xb6df0b40" loc="57:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0xb6dec4c8" loc="72:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0xb6deb010" loc="88:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="82:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb6df0270"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0xb6df0710" loc="50:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0xb6dec010" loc="65:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/wsn/tinyos-main/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0xb6dd5168" loc="49:/home/wsn/tinyos-main/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/wsn/tinyos-main/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0xb6dd5010" loc="49:/home/wsn/tinyos-main/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0xb6db2880" loc="59:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72f19f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0xb6db2508" loc="59:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72f19f0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb6db2720" loc="59:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0xb6dad590" loc="65:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dad1f8" loc="65:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0xb6dad430" loc="65:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0xb6dac088" loc="71:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dadef8" loc="71:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0xb6daece0" loc="57:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0xb6dae660" loc="52:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0xb6dae508" loc="52:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0xb6da8168" loc="65:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6da8010" loc="65:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0xb6dab4e0" loc="46:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dab148" loc="46:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0xb6dab380" loc="46:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0xb6da97e8" loc="59:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6da9690" loc="59:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0xb6da9170" loc="53:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dabd20" loc="53:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0xb6da9010" loc="53:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0xb6da8a88" loc="71:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6da8930" loc="71:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0xb6da5300" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0xb6db0e08" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0xb6db0cb0" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0xb6da5788" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0xb6da4198" loc="35:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6da4198"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb6da4300" loc="35:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6da4300"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0xb6da34f8" loc="63:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6da4300"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6da33a0" loc="63:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0xb6da1010" loc="70:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6da3e38" loc="70:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0xb6da4988" loc="49:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6da4830" loc="49:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb6da1ad0" loc="78:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6da4300"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6da1760" loc="78:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xb6da1970" loc="78:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6da4300"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0xb6d95c00" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb6d95c00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0xb6d92ee0" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d92d88" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb6d928c0" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb6d95c00"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d92768" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0xb6d922a0" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d92148" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb6d91698" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb6d95c00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d91320" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xb6d91538" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb6d95c00"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/wsn/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0xb6d8dbe8" loc="47:/home/wsn/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d8da90" loc="47:/home/wsn/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0xb6d776d8" loc="120:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0xb6d7edc0" loc="97:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0xb6d7e7c0" loc="88:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0xb6d77298" loc="102:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0xb6d77dd0" loc="128:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0xb6d74d28" loc="41:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0xb72f9010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d74bd0" loc="41:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0xb6d74158" loc="37:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0xb72f9010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0xb6d74758" loc="39:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0xb72f9010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d74600" loc="39:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xb6d73cc8" loc="45:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb72f9010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d73928" loc="45:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb6d73b68" loc="45:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb72f9010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xb6d73528" loc="43:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb72f9010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d73188" loc="43:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb6d733c8" loc="43:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb72f9010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0xb6d72850" loc="49:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0xb72fad30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d726f8" loc="49:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0xb6d70010" loc="51:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0xb72fad30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d72c30" loc="51:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xb6d72e60" loc="51:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0xb72fad30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xb6d722a0" loc="47:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d72148" loc="47:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0xb6d70450" loc="53:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0xb72fad30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb6d7fa98" loc="67:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb72f9010"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb6d7f538" loc="67:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb72f9010"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb6d7f750" loc="67:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb6d7f930" loc="67:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb6d7adb0" loc="122:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d7aa50" loc="122:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb6d7ac30" loc="122:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb6d7a4f0" loc="110:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb6d7c460" loc="83:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d7c308" loc="83:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb6d7ce40" loc="97:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d7cae8" loc="97:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb6d7cce0" loc="97:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0xb6d5e1c8" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0xb6d5e798" loc="72:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0xb6d5edd8" loc="79:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0xb6d64da0" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0xb6d4a950" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0xb6d493b8" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
          <long>&#10; Returns the number of bytes in this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d49260" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0xb6d41a78" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb72f1790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d41920" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0xb6d3f800" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d3f6a8" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0xb6d42cc8" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb72f19f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d42b70" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0xb6d55f00" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb72f19f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d55da8" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xb6d414b0" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72f19f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d41148" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb6d41350" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72f19f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xb6d426f8" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72f19f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d42390" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb6d42598" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72f19f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0xb6d3f228" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb72f1790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d41ea0" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xb6d3f0c8" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb72f1790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0xb6d463b0" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0xb6d468f8" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0xb6d44e18" loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d44cc0" loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0xb6d44010" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d46e50" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0xb6d44708" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d445b0" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0xb6d2b210" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0xb6d2c9a0" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0xb72fc9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0xb6d2c848" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0xb72fc9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb6d2cde8" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0xb6d2c310" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0xb6d2b688" loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0xb72fc9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0xb6d287d8" loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d28680" loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0xb6d3dd60" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d3dc08" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb6d29b00" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0xb6d29668" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d29308" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb6d29508" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0xb6d3d668" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d3d510" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0xb6d281c0" loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d28068" loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0xb6d57c18" loc="46:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0xb6d57718" loc="40:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d575c0" loc="40:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0xb6d54310" loc="52:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d541b8" loc="52:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0xb6d547f8" loc="59:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0xb6d54f28" loc="65:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d54dd0" loc="65:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0xb6d56668" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d56510" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0xb6d4e090" loc="86:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0xb6d4fbc8" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6d4f850" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb6d4fa68" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0xb6d52cb0" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d52b58" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0xb6d51310" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d511b8" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0xb6d51c48" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6d518d0" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb6d51ae8" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0xb6d53e50" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0xb6d52658" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d52330" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb6d524f8" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0xb6d4f370" loc="75:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d4f218" loc="75:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0xb6d35e18" loc="131:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d35cc0" loc="131:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0xb6d35010" loc="120:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d36e80" loc="120:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0xb6d3c090" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d43d28" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0xb6d43f18" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0xb6d3a440" loc="75:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d3a2e8" loc="75:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0xb6d31290" loc="156:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d32ee8" loc="156:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb6d31130" loc="156:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0xb6d3cd98" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d3cc40" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0xb6d35808" loc="125:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d354c8" loc="125:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0xb6d356a8" loc="125:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0xb6d39388" loc="88:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6d39010" loc="88:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb6d39228" loc="88:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0xb6d32a70" loc="151:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d32918" loc="151:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0xb6d3c6f8" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d3c5a0" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0xb6d38350" loc="99:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d381f8" loc="99:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0xb6d39c90" loc="94:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6d39918" loc="94:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb6d39b30" loc="94:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0xb6d30998" loc="178:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0xb72f9010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0xb6d318b8" loc="162:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d31760" loc="162:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0xb6d304f8" loc="173:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0xb72fad30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0xb6d32448" loc="146:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d320e8" loc="146:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb6d322e8" loc="146:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0xb6d3aa70" loc="81:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d3a918" loc="81:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0xb6d369f8" loc="115:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d366a8" loc="115:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0xb6d36898" loc="115:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0xb6d34618" loc="136:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d342c8" loc="136:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0xb6d344b8" loc="136:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xb6d2e010" loc="185:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d30e18" loc="185:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0xb6d38b58" loc="105:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d38830" loc="105:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb6d389f8" loc="105:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0xb6d43870" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d43718" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0xb6d30010" loc="168:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d31e70" loc="168:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0xb6d34c48" loc="141:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d34af0" loc="141:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0xb6d361c0" loc="110:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d36068" loc="110:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0xb6d4c228" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d4de98" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0xb6d4c0c8" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0xb6d4c690" loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0xb6d4d380" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d4d228" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0xb6d4d9c8" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb72f19f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d4d870" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0xb6d48800" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d486a8" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0xb6d48168" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d48010" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0xb6d48cf8" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0xb6d47470" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d47318" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0xb6cd05d8" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6cd0480" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb6ccd700" loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6ccd5a8" loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb6ccd010" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6cd0bf0" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb6cd0de8" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0xb6ccf6b8" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
              <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6ccf540" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0xb6cc0168" loc="50:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb72f19f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0xb6cc09d8" loc="60:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0xb6cc05d8" loc="55:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb72f1790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0xb6cc3c60" loc="45:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb72f1790"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72f19f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0xb6cc38f8" loc="45:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb72f1790"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0xb6cc3b00" loc="45:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72f19f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0xb6c5ee00" loc="53:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0xb6c5a458" loc="61:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0xb6c57038" loc="65:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0xb6c5bb48" loc="59:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0xb6c5c6c0" loc="90:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0xb6c5cbc0" loc="98:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0xb6c51940" loc="79:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb6c59310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb6c517e8" loc="79:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb6c59310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0xb6c555c8" loc="53:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0xb6c55c88" loc="62:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb6c59310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb6c55b30" loc="62:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb6c59310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0xb6c51258" loc="70:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0xb6c59310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0xb6b85e30" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
              <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6b85cb8" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0xb6b85640" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6b854e8" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb6b78c58" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6b78b00" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0xb6b770f8" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb6b781c0" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6b78068" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb6b78708" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6b785b0" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0xb6b7cc08" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6b7cab0" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0xb6b7b8f8" loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72f19f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb6b7b7a0" loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72f19f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0xb6b7b318" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb72f19f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6b7b1c0" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0xb6b79010" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6b7be58" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0xb6b7c588" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72f19f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb6b7c430" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72f19f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0xb6b2ad48" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0xb6b27740" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0xb6b27d88" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0xb6b27c30" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0xb6b26210" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0xb6b272c0" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0xb6b266c8" loc="74:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0xb6b29720" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6b295c8" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0xb6b233e8" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb6b29e98" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb6b29d40" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0xb6ae2a08" loc="52:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0xb6ae2560" loc="46:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb753d8a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/wsn/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0xb6ac5098" loc="53:/home/wsn/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb6ac5098"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0xb6ac56e8" loc="64:/home/wsn/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb6ac5098"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0xb6ac5590" loc="64:/home/wsn/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb6ac5098"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0xb6ab0350" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6ab01f8" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb6ab1088" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6ab4f10" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0xb6ab1820" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6ab14e0" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xb6ab16c0" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb6ab1da0" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6ab1c48" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72e4c88"/>
                <typename><typedef-ref name="message_t" ref="0xb72e3a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0xb6a93010" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb6a96e68" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0xb6a96988" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb6a089f8" loc="59:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6a089f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb6a08b60" loc="59:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6a08b60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0xb6a03188" loc="66:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6a08b60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb6a03030" loc="66:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6a08b60"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0xb6a061a8" loc="54:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0xb6a06b58" loc="66:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0xb6a06710" loc="61:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0xb6a065b8" loc="61:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0xb6a0bc80" loc="53:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0xb6a0a718" loc="62:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6a0a5c0" loc="62:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0xb6a092b8" loc="74:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6a09160" loc="74:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0xb6a0ac28" loc="68:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb6a09898" loc="81:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6a09740" loc="81:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb696c368" loc="70:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xb696fd38" loc="70:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xb696c010" loc="70:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb696c200" loc="70:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb696b9a8" loc="82:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xb696b228" loc="82:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xb696b440" loc="82:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb696b630" loc="82:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb753d228"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb696b838" loc="83:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/wsn/tinyos-main/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0xb6970868" loc="45:/home/wsn/tinyos-main/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/wsn/tinyos-main/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0xb6970710" loc="45:/home/wsn/tinyos-main/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0xb695e1a8" loc="86:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0xb69598d8" loc="126:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0xb695ba00" loc="117:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0xb6959ec0" loc="128:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0xb6959d68" loc="128:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0xb695fd28" loc="83:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0xb695a9d8" loc="122:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0xb695a880" loc="122:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0xb695cc20" loc="113:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0xb695cac8" loc="113:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0xb695ea38" loc="97:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0xb6955010" loc="141:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0xb6956e38" loc="141:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0xb695b090" loc="114:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0xb6957868" loc="131:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0xb6957710" loc="131:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0xb6956138" loc="136:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0xb6959490" loc="125:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0xb6959338" loc="125:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0xb6956a00" loc="140:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0xb695a010" loc="119:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0xb695be38" loc="119:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb695c010" loc="103:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb695ee78" loc="103:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0xb695b5e0" loc="116:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0xb695b488" loc="116:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0xb695ae88" loc="123:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0xb6957308" loc="129:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0xb6957c78" loc="132:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0xb6956590" loc="138:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0xb695a448" loc="120:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb74026e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0xb695e5d0" loc="89:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0xb695c5d8" loc="109:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb695c480" loc="109:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb753eb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0xb69282f0" loc="95:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb69287d8" loc="105:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73e3da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
